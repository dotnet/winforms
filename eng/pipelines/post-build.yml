parameters:
  name: ''
  enableMicrobuild: true
  enablePublishBuildArtifacts: true
  enablePublishTestResults: true
  enablePublishBuildAssets: true
  enablePublishUsingPipelines: true
  testResultsFormat: 'xunit'

steps:

- ${{ if eq(parameters.enableMicrobuild, 'true') }}:
  - ${{ if eq(parameters.runAsPublic, 'false') }}:
    - task: MicroBuildCleanup@1
      displayName: Execute Microbuild cleanup tasks
      condition: and(always(), in(variables['_SignType'], 'real', 'test'), eq(variables['Agent.Os'], 'Windows_NT'))
      continueOnError: ${{ parameters.continueOnError }}
      env:
        TeamName: $(_TeamName)

- ${{ if ne(parameters.artifacts.publish, '') }}:
  - ${{ if or(eq(parameters.artifacts.publish.artifacts, 'true'), ne(parameters.artifacts.publish.artifacts, '')) }}:
    - task: CopyFiles@2
      displayName: Gather binaries for publish to artifacts
      inputs:
        SourceFolder: 'artifacts/bin'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/artifacts/bin'
    - task: CopyFiles@2
      displayName: Gather packages for publish to artifacts
      inputs:
        SourceFolder: 'artifacts/packages'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/artifacts/packages'
  - ${{ if or(eq(parameters.artifacts.publish.logs, 'true'), ne(parameters.artifacts.publish.logs, '')) }}: []
- ${{ if ne(parameters.enablePublishBuildArtifacts, 'false') }}: []
- ${{ if or(and(eq(parameters.enablePublishTestResults, 'true'), eq(parameters.testResultsFormat, '')), eq(parameters.testResultsFormat, 'xunit')) }}:
  - task: PublishTestResults@2
    displayName: Publish XUnit Test Results
    inputs:
      testResultsFormat: 'xUnit'
      testResultsFiles: '*.xml'
      searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
      testRunTitle: ${{ coalesce(parameters.testRunTitle, parameters.name, '$(System.JobName)') }}-xunit
      mergeTestResults: ${{ parameters.mergeTestResults }}
    continueOnError: true
    condition: and(eq(variables['System.TeamProject'], 'public'), ne('${{ parameters.targetArchitecture }}', 'arm64'))

- ${{ if or(and(eq(parameters.enablePublishTestResults, 'true'), eq(parameters.testResultsFormat, '')), eq(parameters.testResultsFormat, 'vstest')) }}:
  - task: PublishTestResults@2
    displayName: Publish TRX Test Results
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '*.trx'
      searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
      testRunTitle: ${{ coalesce(parameters.testRunTitle, parameters.name, '$(System.JobName)') }}-trx
      mergeTestResults: ${{ parameters.mergeTestResults }}
    continueOnError: true
    condition: and(eq(variables['System.TeamProject'], 'public'), ne('${{ parameters.targetArchitecture }}', 'arm64'))