parameters:
  dependsOn: ''
  pool: ''
  CeapexPat: $(dn-bot-ceapex-package-r)
  GithubPat: $(BotAccount-dotnet-bot-repo-PAT)
  SourcesDirectory: $(Build.SourcesDirectory)
  CreatePr: true
  AutoCompletePr: false
  ReusePr: true
  UseLfLineEndings: true
  UseCheckedInLocProjectJson: false
  SkipLocProjectJsonGeneration: false
  LanguageSet: VS_Main_Languages
  LclSource: lclFilesInRepo
  LclPackageId: ''
  RepoType: gitHub
  GitHubOrg: dotnet
  MirrorRepo: ''
  MirrorBranch: main
  condition: ''
  JobNameSuffix: ''
jobs:
- job: OneLocBuild${{ parameters.JobNameSuffix }}
  dependsOn: ${{ parameters.dependsOn }}
  displayName: OneLocBuild${{ parameters.JobNameSuffix }}
  variables:
  - group: OneLocBuildVariables
  - name: _GenerateLocProjectArguments
    value: -SourcesDirectory ${{ parameters.SourcesDirectory }} -LanguageSet "${{ parameters.LanguageSet }}" -CreateNeutralXlfs
  - ${{ if eq(parameters.UseCheckedInLocProjectJson, 'true') }}:
    - name: _GenerateLocProjectArguments
      value: ${{ variables._GenerateLocProjectArguments }} -UseCheckedInLocProjectJson
  - template: /eng/common/templates/variables/pool-providers.yml@self
  ${{ if ne(parameters.pool, '') }}:
    pool: ${{ parameters.pool }}
  ${{ if eq(parameters.pool, '') }}:
    pool:
      ${{ if eq(variables['System.TeamProject'], 'DevDiv') }}:
        name: VSEngSS-MicroBuild2022-1ES
        demands: Cmd
      ${{ if ne(variables['System.TeamProject'], 'DevDiv') }}:
        name: $(DncEngInternalBuildPool)
        demands: ImageOverride -equals windows.vs2019.amd64
  templateContext:
    outputs:
    - output: pipelineArtifact
      displayName: 'Publish Localization Files'
      condition: ${{ parameters.condition }}
      targetPath: '$(Build.ArtifactStagingDirectory)/loc'
      publishLocation: Container
      artifactName: Loc
    - output: pipelineArtifact
      displayName: 'Publish LocProject.json'
      condition: ${{ parameters.condition }}
      targetPath: '$(Build.SourcesDirectory)/eng/Localize/'
      publishLocation: Container
      artifactName: Loc
  steps:
  - ${{ if ne(parameters.SkipLocProjectJsonGeneration, 'true') }}:
    - task: Powershell@2
      inputs:
        filePath: $(Build.SourcesDirectory)/eng/common/generate-locproject.ps1
        arguments: $(_GenerateLocProjectArguments)
      displayName: Generate LocProject.json
      condition: ${{ parameters.condition }}
  - task: OneLocBuild@2
    displayName: OneLocBuild
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    inputs:
      locProj: eng/Localize/LocProject.json
      outDir: $(Build.ArtifactStagingDirectory)
      lclSource: ${{ parameters.LclSource }}
      lclPackageId: ${{ parameters.LclPackageId }}
      isCreatePrSelected: ${{ parameters.CreatePr }}
      isAutoCompletePrSelected: ${{ parameters.AutoCompletePr }}
      ${{ if eq(parameters.CreatePr, true) }}:
        isUseLfLineEndingsSelected: ${{ parameters.UseLfLineEndings }}
        ${{ if eq(parameters.RepoType, 'gitHub') }}:
          isShouldReusePrSelected: ${{ parameters.ReusePr }}
      packageSourceAuth: patAuth
      patVariable: ${{ parameters.CeapexPat }}
      ${{ if eq(parameters.RepoType, 'gitHub') }}:
        repoType: ${{ parameters.RepoType }}
        gitHubPatVariable: "${{ parameters.GithubPat }}"
      ${{ if ne(parameters.MirrorRepo, '') }}:
        isMirrorRepoSelected: true
        gitHubOrganization: ${{ parameters.GitHubOrg }}
        mirrorRepo: ${{ parameters.MirrorRepo }}
        mirrorBranch: ${{ parameters.MirrorBranch }}
    condition: ${{ parameters.condition }}