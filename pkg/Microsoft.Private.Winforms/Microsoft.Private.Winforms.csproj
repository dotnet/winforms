<Project Sdk="Microsoft.NET.Sdk" InitialTargets="SetOutputItemType">
  <!-- 
    This project packages the output of the referenced projects into a single nupkg.

    There are two main ways to work around this: 
    
    1. A pull model where a single project pulls in everything that the package needs.
        a. This is the model we're using because it's less work and we only have a few more binaries coming in the future.
        b. An example of the pull model is at https://github.com/nuget/home/issues/3891#issuecomment-377319939, with official docs
        at https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets#targetsfortfmspecificbuildoutput

    2. A push model where projects control what they contribute to the package.
        a. An example of the push model is at https://github.com/dotnet/machinelearning/blob/master/pkg/Directory.Build.props. 
  -->

  <PropertyGroup>
    <TargetFramework>$(TargetFrameworkName)$(TargetFrameworkVersion)</TargetFramework>

    <!-- Suppress some nuget warnings that are breaking our build until https://github.com/dotnet/arcade/issues/4337 is resolved -->
    <NoWarn>$(NoWarn);NU5131;NU5128</NoWarn>

  </PropertyGroup>

  <!-- This is a Packaging Project -->
  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <IsShipping>false</IsShipping>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Don't include this project in the build output -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <PublishWindowsPdb>false</PublishWindowsPdb>
    <IncludeSymbols>false</IncludeSymbols>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Disable a VS-specific target that is failing when building this csproj -->
    <GenerateDependencyFile>false</GenerateDependencyFile>
  </PropertyGroup>

  <!-- nuspec properties -->
  <PropertyGroup>
    <PackageDescription>Private Windows Forms package, public consumption is not supported</PackageDescription>
    <PackageTags>WinForms Windows Forms</PackageTags>
  </PropertyGroup>

  <!-- Force project references to avoid packaging their dependencies -->
  <ItemDefinitionGroup>
    <ProjectReference>
      <PrivateAssets>All</PrivateAssets>
    </ProjectReference>
  </ItemDefinitionGroup>
  
  <ItemGroup>
    <None Include="FrameworkListFiles.props">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <!-- Any projects referenced here will have their outputs automatically put into the package -->
  <!-- If you add a new csproj, and you want the outputs in the package, you must add it here -->
  <ItemGroup>
    <!-- Facade for System.Drawing include -->
    <ProjectReference Include="..\..\src\System.Drawing\src\System.Drawing.Facade.csproj" />

    <!-- Facade for System.Design include -->
    <ProjectReference Include="..\..\src\System.Design\src\System.Design.Facade.csproj" />

    <!-- Facade for System.Drawing.Design include -->
    <ProjectReference Include="..\..\src\System.Drawing.Design\src\System.Drawing.Design.Facade.csproj" />

    <!-- Reference and Source System.Windows.Forms includes -->
    <ProjectReference Include="..\..\src\System.Windows.Forms\src\System.Windows.Forms.csproj" />

    <!-- Reference and Source System.Windows.Forms.Primitives includes -->
    <ProjectReference Include="..\..\src\System.Windows.Forms.Primitives\src\System.Windows.Forms.Primitives.csproj" />

    <!-- Reference and Source System.Windows.Forms.Design includes -->
    <ProjectReference Include="..\..\src\System.Windows.Forms.Design\src\System.Windows.Forms.Design.csproj" />

    <!-- Facade for System.Windows.Forms.Design.Editors includes -->
    <ProjectReference Include="..\..\src\System.Windows.Forms.Design.Editors\src\System.Windows.Forms.Design.Editors.Facade3x.csproj" />
    
    <!-- Facade for Microsoft.VisualBasic include -->
    <ProjectReference Include="..\..\src\Microsoft.VisualBasic\src\Microsoft.VisualBasic.Facade.csproj" />

    <!-- Reference and Source Microsoft.VisualBasic.Forms includes -->
    <ProjectReference Include="..\..\src\Microsoft.VisualBasic.Forms\src\Microsoft.VisualBasic.Forms.vbproj" />

    <ProjectReference Include="..\..\src\Accessibility\src\Accessibility.ilproj" />

  </ItemGroup>

  <!-- Force the output item type for all project references to "TfmSpecificPackageFile", which makes them get packed -->
  <Target Name="SetOutputItemType">
    <ItemGroup>
      <ProjectReference>
        <OutputItemType>TfmSpecificPackageFile</OutputItemType>
        <Targets>GetPackageContent</Targets>
        <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      </ProjectReference>
    </ItemGroup>
  </Target>

  <!-- Call custom targets (defined below) when creating the package -->
  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificBuildOutput);ResolveReferences</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>

</Project>
