<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnchorEditorAccName" xml:space="preserve">
    <value>Anchor Editor</value>
  </data>
  <data name="AnchorEditorBottomAccName" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="AnchorEditorLeftAccName" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="AnchorEditorRightAccName" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="AnchorEditorTopAccName" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="bitmapFileDescription" xml:space="preserve">
    <value>Bitmap files</value>
  </data>
  <data name="ColorEditorAccName" xml:space="preserve">
    <value>Color Picker</value>
  </data>
  <data name="ColorEditorPaletteTab" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="ColorEditorStandardTab" xml:space="preserve">
    <value>Web</value>
    <comment>{Locked="Web"}</comment>
  </data>
  <data name="ColorEditorSystemTab" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="DataSourceLocksItems" xml:space="preserve">
    <value>Items collection cannot be modified when the DataSource property is set.</value>
  </data>
  <data name="DockEditorAccName" xml:space="preserve">
    <value>Dock Picker</value>
  </data>
  <data name="DockEditorBottomAccName" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="DockEditorFillAccName" xml:space="preserve">
    <value>Fill</value>
  </data>
  <data name="DockEditorLeftAccName" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="DockEditorNoneAccName" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="DockEditorRightAccName" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="DockEditorTopAccName" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="GenericFileFilter" xml:space="preserve">
    <value>All Files(*.*)|*.*</value>
  </data>
  <data name="GenericOpenFile" xml:space="preserve">
    <value>Open File</value>
  </data>
  <data name="imageFileDescription" xml:space="preserve">
    <value>All image files</value>
  </data>
  <data name="ListViewSubItemBaseName" xml:space="preserve">
    <value>ListViewSubItem</value>
  </data>
  <data name="metafileFileDescription" xml:space="preserve">
    <value>Metafiles</value>
  </data>
  <data name="PlatformNotSupported_WinformsDesigner" xml:space="preserve">
    <value>Winforms Designer is not supported on this platform.</value>
  </data>
  <data name="ShortcutKeys_InvalidKey" xml:space="preserve">
    <value>(Unknown)</value>
  </data>
  <data name="CollectionEditorCantRemoveItem" xml:space="preserve">
    <value>The item '{0}' cannot be removed.</value>
  </data>
  <data name="CollectionEditorCaption" xml:space="preserve">
    <value>{0} Collection Editor</value>
  </data>
  <data name="CollectionEditorInheritedReadOnlySelection" xml:space="preserve">
    <value>Read-only component(s) selected.</value>
  </data>
  <data name="CollectionEditorProperties" xml:space="preserve">
    <value>{0} &amp;properties:</value>
  </data>
  <data name="CollectionEditorPropertiesMultiSelect" xml:space="preserve">
    <value>Multi-Select &amp;Properties:</value>
  </data>
  <data name="CollectionEditorPropertiesNone" xml:space="preserve">
    <value>&amp;Properties:</value>
  </data>
  <data name="CollectionEditorUndoBatchDesc" xml:space="preserve">
    <value>Add or remove {0} objects</value>
  </data>
  <data name="RTL" xml:space="preserve">
    <value>RTL_False</value>
  </data>
  <data name="MultilineStringEditorWatermark" xml:space="preserve">
    <value>Press Enter to begin a new line.
Press Ctrl+Enter to accept Text.</value>
  </data>
  <data name="ImageCollectionEditorFormText" xml:space="preserve">
    <value>Images Collection Editor</value>
  </data>
  <data name="ContentAlignmentEditorAccName" xml:space="preserve">
    <value>Alignment Picker</value>
  </data>
  <data name="ContentAlignmentEditorBottomCenterAccName" xml:space="preserve">
    <value>Bottom Middle</value>
  </data>
  <data name="ContentAlignmentEditorBottomLeftAccName" xml:space="preserve">
    <value>Bottom Left</value>
  </data>
  <data name="ContentAlignmentEditorBottomRightAccName" xml:space="preserve">
    <value>Bottom Right</value>
  </data>
  <data name="ContentAlignmentEditorMiddleCenterAccName" xml:space="preserve">
    <value>Middle Center</value>
  </data>
  <data name="ContentAlignmentEditorMiddleLeftAccName" xml:space="preserve">
    <value>Middle Left</value>
  </data>
  <data name="ContentAlignmentEditorMiddleRightAccName" xml:space="preserve">
    <value>Middle Right</value>
  </data>
  <data name="ContentAlignmentEditorTopCenterAccName" xml:space="preserve">
    <value>Top Center</value>
  </data>
  <data name="ContentAlignmentEditorTopLeftAccName" xml:space="preserve">
    <value>Top Left</value>
  </data>
  <data name="ContentAlignmentEditorTopRightAccName" xml:space="preserve">
    <value>Top Right</value>
  </data>
  <data name="iconFileDescription" xml:space="preserve">
    <value>Icon files</value>
  </data>
  <data name="BindingFormattingDialogAllTreeNode" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="BindingFormattingDialogBindingPickerAccName" xml:space="preserve">
    <value>Binding field</value>
  </data>
  <data name="BindingFormattingDialogCommonTreeNode" xml:space="preserve">
    <value>Common</value>
  </data>
  <data name="BindingFormattingDialogCustomFormat" xml:space="preserve">
    <value>Custo&amp;m format</value>
  </data>
  <data name="BindingFormattingDialogCustomFormatAccessibleDescription" xml:space="preserve">
    <value>Custom format</value>
  </data>
  <data name="BindingFormattingDialogDataSourcePickerDropDownAccName" xml:space="preserve">
    <value>Binding Drop Down Button</value>
  </data>
  <data name="BindingFormattingDialogDecimalPlaces" xml:space="preserve">
    <value>&amp;Decimal places</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeCurrency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeCurrencyExplanation" xml:space="preserve">
    <value>Specify the format for monetary values.</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeCustom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeCustomExplanation" xml:space="preserve">
    <value>Type a custom format string. A custom string may require extra handling unless it is a read-only value.</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeCustomInvalidFormat" xml:space="preserve">
    <value>Invalid format</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeDateTime" xml:space="preserve">
    <value>Date Time</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeDateTimeExplanation" xml:space="preserve">
    <value>Specify the format for date and time values.</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeNoFormatting" xml:space="preserve">
    <value>No Formatting</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeNoFormattingExplanation" xml:space="preserve">
    <value>Use no formatting to display the value from the source without adornment.</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeNumeric" xml:space="preserve">
    <value>Numeric</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeNumericExplanation" xml:space="preserve">
    <value>Specify the format for numbers. Note that the Currency format type offers specialized formatting for monetary values.</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeScientific" xml:space="preserve">
    <value>Scientific</value>
  </data>
  <data name="BindingFormattingDialogFormatTypeScientificExplanation" xml:space="preserve">
    <value>Specify the format for values that use scientific notation.</value>
  </data>
  <data name="BindingFormattingDialogList" xml:space="preserve">
    <value>(List)</value>
  </data>
  <data name="BindingFormattingDialogNullValue" xml:space="preserve">
    <value>&amp;Null value:</value>
  </data>
  <data name="BindingFormattingDialogType" xml:space="preserve">
    <value>&amp;Type</value>
  </data>
  <data name="DataGridNoneString" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="DataGridView_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DataGridView_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="DesignBindingPickerAccessibleName" xml:space="preserve">
    <value>Data binding editor</value>
  </data>
  <data name="DesignBindingPickerAddProjDataSourceLabel" xml:space="preserve">
    <value>Add Project Data Source...</value>
  </data>
  <data name="DesignBindingPickerTreeViewAccessibleName" xml:space="preserve">
    <value>Bindable data sources and data members</value>
  </data>
  <data name="FormatStringDialogTitle" xml:space="preserve">
    <value>Format String Dialog</value>
  </data>
</root>