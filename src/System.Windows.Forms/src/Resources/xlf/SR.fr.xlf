<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="fr" original="../SR.resx">
    <body>
      <trans-unit id="AXAddInvalidEvent">
        <source>Event {0} is not valid on this ActiveX control.</source>
        <target state="new">Event {0} is not valid on this ActiveX control.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXDuplicateControl">
        <source>ActiveX control named '{0}' already exists in this container. Change or set the "Name" property for this ActiveX control and try again.</source>
        <target state="new">ActiveX control named '{0}' already exists in this container. Change or set the "Name" property for this ActiveX control and try again.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXEditProperties">
        <source>Edit ActiveX component properties</source>
        <target state="new">Edit ActiveX component properties</target>
        <note />
      </trans-unit>
      <trans-unit id="AXFontUnitNotPoint">
        <source>ActiveX controls only accept fonts that are defined in GraphicsUnit.Point.</source>
        <target state="new">ActiveX controls only accept fonts that are defined in GraphicsUnit.Point.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXInvalidArgument">
        <source>Not a valid argument.</source>
        <target state="new">Not a valid argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXInvalidMethodInvoke">
        <source>Method '{0}' cannot be invoked at this time.</source>
        <target state="new">Method '{0}' cannot be invoked at this time.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXInvalidPropertyGet">
        <source>Property get of '{0}' cannot be invoked at this time.</source>
        <target state="new">Property get of '{0}' cannot be invoked at this time.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXInvalidPropertySet">
        <source>Property set of '{0}' cannot be invoked at this time.</source>
        <target state="new">Property set of '{0}' cannot be invoked at this time.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXMTAThread">
        <source>ActiveX control '{0}' cannot be instantiated because the current thread is not in a single-threaded apartment.</source>
        <target state="new">ActiveX control '{0}' cannot be instantiated because the current thread is not in a single-threaded apartment.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNoConnectionPoint">
        <source>Connection point for event interface '{0}' cannot be created.</source>
        <target state="new">Connection point for event interface '{0}' cannot be created.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNoConnectionPointContainer">
        <source>Source object does not expose IConnectionPointContainer.</source>
        <target state="new">Source object does not expose IConnectionPointContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNoEventInterface">
        <source>Source object does not expose '{0}' event interface.</source>
        <target state="new">Source object does not expose '{0}' event interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNoLicenseToUse">
        <source>You must have a license to use this ActiveX control.</source>
        <target state="new">You must have a license to use this ActiveX control.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNoSinkAdvise">
        <source>Could not Advise() the event interface '{0}'.</source>
        <target state="new">Could not Advise() the event interface '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNoSinkImplementation">
        <source>Given 'sink' object does not implement '{0}' event interface.</source>
        <target state="new">Given 'sink' object does not implement '{0}' event interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNoThreadInfo">
        <source>Unable to verify required threading model of apartment or free-threaded. This control cannot be hosted.</source>
        <target state="new">Unable to verify required threading model of apartment or free-threaded. This control cannot be hosted.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNoTopLevelContainerControl">
        <source>ActiveX control must have at least one ContainerControl in its parent hierarchy to be properly instantiated. Set the ContainingControl property on '{0}' to a non-null value and try again.</source>
        <target state="new">ActiveX control must have at least one ContainerControl in its parent hierarchy to be properly instantiated. Set the ContainingControl property on '{0}' to a non-null value and try again.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNohWnd">
        <source>Unable to get the window handle for the '{0}' control. Windowless ActiveX controls are not supported.</source>
        <target state="new">Unable to get the window handle for the '{0}' control. Windowless ActiveX controls are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXNotImplemented">
        <source>Not implemented.</source>
        <target state="new">Not implemented.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXOcxStateLoaded">
        <source>ActiveX control cannot be reloaded with an OcxState of a different storage type.</source>
        <target state="new">ActiveX control cannot be reloaded with an OcxState of a different storage type.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXProperties">
        <source>ActiveX - Properties...</source>
        <target state="new">ActiveX - Properties...</target>
        <note />
      </trans-unit>
      <trans-unit id="AXSingleThreaded">
        <source>Control is single threaded. It cannot be hosted.</source>
        <target state="new">Control is single threaded. It cannot be hosted.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXTopLevelSource">
        <source>Top-level Windows Forms control cannot be exposed as an ActiveX control.</source>
        <target state="new">Top-level Windows Forms control cannot be exposed as an ActiveX control.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXUnknownError">
        <source>Unknown error.</source>
        <target state="new">Unknown error.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXUnknownImage">
        <source>Unknown image type.</source>
        <target state="new">Unknown image type.</target>
        <note />
      </trans-unit>
      <trans-unit id="AXWindowlessControl">
        <source>ActiveX control is a windowless control. The control is not supported in this version of the .NET Framework.</source>
        <target state="new">ActiveX control is a windowless control. The control is not supported in this version of the .NET Framework.</target>
        <note />
      </trans-unit>
      <trans-unit id="AboutBoxDesc">
        <source>Displays the 'About' box for this component</source>
        <target state="new">Displays the 'About' box for this component</target>
        <note />
      </trans-unit>
      <trans-unit id="AccDGCollapse">
        <source>Collapse</source>
        <target state="new">Collapse</target>
        <note />
      </trans-unit>
      <trans-unit id="AccDGEdit">
        <source>Edit</source>
        <target state="new">Edit</target>
        <note />
      </trans-unit>
      <trans-unit id="AccDGExpand">
        <source>Expand</source>
        <target state="new">Expand</target>
        <note />
      </trans-unit>
      <trans-unit id="AccDGNavigate">
        <source>Navigate</source>
        <target state="new">Navigate</target>
        <note />
      </trans-unit>
      <trans-unit id="AccDGNavigateBack">
        <source>Navigate Back</source>
        <target state="new">Navigate Back</target>
        <note />
      </trans-unit>
      <trans-unit id="AccDGNewRow">
        <source>(Create New)</source>
        <target state="new">(Create New)</target>
        <note />
      </trans-unit>
      <trans-unit id="AccDGParentRow">
        <source>Parent Row</source>
        <target state="new">Parent Row</target>
        <note />
      </trans-unit>
      <trans-unit id="AccDGParentRows">
        <source>Parent Rows</source>
        <target state="new">Parent Rows</target>
        <note />
      </trans-unit>
      <trans-unit id="AccessibleActionCheck">
        <source>Check</source>
        <target state="new">Check</target>
        <note />
      </trans-unit>
      <trans-unit id="AccessibleActionClick">
        <source>Click</source>
        <target state="new">Click</target>
        <note />
      </trans-unit>
      <trans-unit id="AccessibleActionCollapse">
        <source>Collapse</source>
        <target state="new">Collapse</target>
        <note />
      </trans-unit>
      <trans-unit id="AccessibleActionExpand">
        <source>Expand</source>
        <target state="new">Expand</target>
        <note />
      </trans-unit>
      <trans-unit id="AccessibleActionPress">
        <source>Press</source>
        <target state="new">Press</target>
        <note />
      </trans-unit>
      <trans-unit id="AccessibleActionUncheck">
        <source>Uncheck</source>
        <target state="new">Uncheck</target>
        <note />
      </trans-unit>
      <trans-unit id="AccessibleObjectLiveRegionNotSupported">
        <source>The corresponding UI element is not a live region.</source>
        <target state="new">The corresponding UI element is not a live region.</target>
        <note />
      </trans-unit>
      <trans-unit id="AddDifferentThreads">
        <source>Controls created on one thread cannot be parented to a control on a different thread.</source>
        <target state="new">Controls created on one thread cannot be parented to a control on a different thread.</target>
        <note />
      </trans-unit>
      <trans-unit id="ApplicationCannotChangeApplicationExceptionMode">
        <source>Application exception mode cannot be changed once any Controls are created in the application.</source>
        <target state="new">Application exception mode cannot be changed once any Controls are created in the application.</target>
        <note />
      </trans-unit>
      <trans-unit id="ApplicationCannotChangeThreadExceptionMode">
        <source>Thread exception mode cannot be changed once any Controls are created on the thread.</source>
        <target state="new">Thread exception mode cannot be changed once any Controls are created on the thread.</target>
        <note />
      </trans-unit>
      <trans-unit id="ApplyCaption">
        <source>&amp;Apply</source>
        <target state="new">&amp;Apply</target>
        <note />
      </trans-unit>
      <trans-unit id="ArraysNotSameSize">
        <source>Arrays '{0}' and '{1}' must be the same size.</source>
        <target state="new">Arrays '{0}' and '{1}' must be the same size.</target>
        <note />
      </trans-unit>
      <trans-unit id="AutoCompleteFailure">
        <source>autoComplete cannot be initialized with given custom source.</source>
        <target state="new">autoComplete cannot be initialized with given custom source.</target>
        <note />
      </trans-unit>
      <trans-unit id="AutoCompleteFailureListItems">
        <source>autoComplete cannot be initialized with the list items.</source>
        <target state="new">autoComplete cannot be initialized with the list items.</target>
        <note />
      </trans-unit>
      <trans-unit id="AxInterfaceNotSupported">
        <source>Interface is not supported.</source>
        <target state="new">Interface is not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="BadDataSourceForComplexBinding">
        <source>Complex DataBinding accepts as a data source either an IList or an IListSource.</source>
        <target state="new">Complex DataBinding accepts as a data source either an IList or an IListSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingManagerBadIndex">
        <source>ListManager for {0} cannot be found.</source>
        <target state="new">ListManager for {0} cannot be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorAddNewItemPropDescr">
        <source>The ToolStripItem on the BindingNavigator that raises the 'Add new' action.</source>
        <target state="new">The ToolStripItem on the BindingNavigator that raises the 'Add new' action.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorAddNewItemText">
        <source>Add new</source>
        <target state="new">Add new</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorBindingSourcePropDescr">
        <source>The BindingSource that the BindingNavigator navigates.</source>
        <target state="new">The BindingSource that the BindingNavigator navigates.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorCountItemFormat">
        <source>of {0}</source>
        <target state="new">of {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorCountItemFormatPropDescr">
        <source>Formatting to apply to count displayed in the CountItem ToolStrip item.</source>
        <target state="new">Formatting to apply to count displayed in the CountItem ToolStrip item.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorCountItemPropDescr">
        <source>The ToolStripItem on the BindingNavigator that displays the total number of items.</source>
        <target state="new">The ToolStripItem on the BindingNavigator that displays the total number of items.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorCountItemTip">
        <source>Total number of items</source>
        <target state="new">Total number of items</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorDeleteItemPropDescr">
        <source>The ToolStripItem on the BindingNavigator that raises the 'Delete' action.</source>
        <target state="new">The ToolStripItem on the BindingNavigator that raises the 'Delete' action.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorDeleteItemText">
        <source>Delete</source>
        <target state="new">Delete</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorMoveFirstItemPropDescr">
        <source>The ToolStripItem on the BindingNavigator that raises the 'Move first' action.</source>
        <target state="new">The ToolStripItem on the BindingNavigator that raises the 'Move first' action.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorMoveFirstItemText">
        <source>Move first</source>
        <target state="new">Move first</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorMoveLastItemPropDescr">
        <source>The ToolStripItem on the BindingNavigator that raises the 'Move last' action.</source>
        <target state="new">The ToolStripItem on the BindingNavigator that raises the 'Move last' action.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorMoveLastItemText">
        <source>Move last</source>
        <target state="new">Move last</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorMoveNextItemPropDescr">
        <source>The ToolStripItem on the BindingNavigator that raises the 'Move next' action.</source>
        <target state="new">The ToolStripItem on the BindingNavigator that raises the 'Move next' action.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorMoveNextItemText">
        <source>Move next</source>
        <target state="new">Move next</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorMovePreviousItemPropDescr">
        <source>The ToolStripItem on the BindingNavigator that raises the 'Move previous' action.</source>
        <target state="new">The ToolStripItem on the BindingNavigator that raises the 'Move previous' action.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorMovePreviousItemText">
        <source>Move previous</source>
        <target state="new">Move previous</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorPositionAccessibleName">
        <source>Position</source>
        <target state="new">Position</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorPositionItemPropDescr">
        <source>The ToolStripItem on the BindingNavigator that displays the current position.</source>
        <target state="new">The ToolStripItem on the BindingNavigator that displays the current position.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorPositionItemTip">
        <source>Current position</source>
        <target state="new">Current position</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorRefreshItemsEventDescr">
        <source>Event raised when BindingNavigator ToolStrip items need to be refreshed to reflect current state of data.</source>
        <target state="new">Event raised when BindingNavigator ToolStrip items need to be refreshed to reflect current state of data.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingNavigatorToolStripName">
        <source>Binding Navigator</source>
        <target state="new">Binding Navigator</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceAddingNewEventHandlerDescr">
        <source>Event raised when the user calls AddNew on the BindingSource</source>
        <target state="new">Event raised when the user calls AddNew on the BindingSource</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceAllowNewDescr">
        <source>Determines whether the BindingSource allows new items to be added to the list.</source>
        <target state="new">Determines whether the BindingSource allows new items to be added to the list.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceBadSortString">
        <source>Sort string not valid.</source>
        <target state="new">Sort string not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceBindingCompleteEventHandlerDescr">
        <source>Event raised after data has been exchanged between the data source and a control property bound to that data source.</source>
        <target state="new">Event raised after data has been exchanged between the data source and a control property bound to that data source.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceBindingListWrapperAddToReadOnlyList">
        <source>Item cannot be added to a read-only or fixed-size list.</source>
        <target state="new">Item cannot be added to a read-only or fixed-size list.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceBindingListWrapperNeedAParameterlessConstructor">
        <source>AddNew cannot be called on the '{0}' type. This type does not have a public default constructor. You can call AddNew on the '{0}' type if you handle the AddingNew event and create the appropriate object.</source>
        <target state="new">AddNew cannot be called on the '{0}' type. This type does not have a public default constructor. You can call AddNew on the '{0}' type if you handle the AddingNew event and create the appropriate object.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceBindingListWrapperNeedToSetAllowNew">
        <source>AddNew cannot be called on the '{0}' type. This type does not have a public default constructor. You can call AddNew on the '{0}' type if you set AllowNew=true and handle the AddingNew event.</source>
        <target state="new">AddNew cannot be called on the '{0}' type. This type does not have a public default constructor. You can call AddNew on the '{0}' type if you set AllowNew=true and handle the AddingNew event.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceCurrentChangedEventHandlerDescr">
        <source>Event raised when the value of Current changes.</source>
        <target state="new">Event raised when the value of Current changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceCurrentItemChangedEventHandlerDescr">
        <source>Event raised when the value of Current changes, or a property of the current item changes.</source>
        <target state="new">Event raised when the value of Current changes, or a property of the current item changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceDataErrorEventHandlerDescr">
        <source>Event raised when an exception thrown during data binding is handled internally by the CurrencyManager.</source>
        <target state="new">Event raised when an exception thrown during data binding is handled internally by the CurrencyManager.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceDataMemberChangedEventHandlerDescr">
        <source>Event raised when the DataMember changes.</source>
        <target state="new">Event raised when the DataMember changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceDataMemberDescr">
        <source>Indicates a sub-list of the DataSource that the BindingSource is bound to.</source>
        <target state="new">Indicates a sub-list of the DataSource that the BindingSource is bound to.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceDataSourceChangedEventHandlerDescr">
        <source>Event raised when the DataSource changes.</source>
        <target state="new">Event raised when the DataSource changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceDataSourceDescr">
        <source>Indicates the source of data for the BindingSource.</source>
        <target state="new">Indicates the source of data for the BindingSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceFilterDescr">
        <source>Indicates a database column expression used to filter the set of rows returned by the data source.</source>
        <target state="new">Indicates a database column expression used to filter the set of rows returned by the data source.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceInstanceError">
        <source>BindingSource unable to create list based on the Type specified in the DataSource property.</source>
        <target state="new">BindingSource unable to create list based on the Type specified in the DataSource property.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceItemChangedEventModeDescr">
        <source>Controls how the BindingSource raises the ListChanged event as a result of changing an item in the BindingSource.</source>
        <target state="new">Controls how the BindingSource raises the ListChanged event as a result of changing an item in the BindingSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceItemTypeIsValueType">
        <source>Cannot add null to BindingSource if the underlying list stores value types.</source>
        <target state="new">Cannot add null to BindingSource if the underlying list stores value types.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceItemTypeMismatchOnAdd">
        <source>Objects added to a BindingSource's list must all be of the same type.</source>
        <target state="new">Objects added to a BindingSource's list must all be of the same type.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceListChangedEventHandlerDescr">
        <source>Event raised when a change occurs in the BindingSource's list.</source>
        <target state="new">Event raised when a change occurs in the BindingSource's list.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourcePositionChangedEventHandlerDescr">
        <source>Event raised when the value of Position changes.</source>
        <target state="new">Event raised when the value of Position changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceRecursionDetected">
        <source>BindingSource cannot be its own data source. Do not set the DataSource and DataMember properties to values that refer back to BindingSource.</source>
        <target state="new">BindingSource cannot be its own data source. Do not set the DataSource and DataMember properties to values that refer back to BindingSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceRemoveCurrentNoCurrentItem">
        <source>Current item cannot be removed from the list because there is no current item.</source>
        <target state="new">Current item cannot be removed from the list because there is no current item.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceRemoveCurrentNotAllowed">
        <source>Current item cannot be removed from the list because the list does not allow removal of items.</source>
        <target state="new">Current item cannot be removed from the list because the list does not allow removal of items.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceSortDescr">
        <source>Indicates names of database columns used to sort the set of rows returned by the data source.</source>
        <target state="new">Indicates names of database columns used to sort the set of rows returned by the data source.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingSourceSortStringPropertyNotInIBindingList">
        <source>Sort string contains a property that is not in the IBindingList.</source>
        <target state="new">Sort string contains a property that is not in the IBindingList.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingsCollectionAdd1">
        <source>dataBinding already belongs to this BindingsCollection.</source>
        <target state="new">dataBinding already belongs to this BindingsCollection.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingsCollectionAdd2">
        <source>dataBinding belongs to another BindingsCollection.</source>
        <target state="new">dataBinding belongs to another BindingsCollection.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingsCollectionBadIndex">
        <source>Binding {0       } cannot be found.</source>
        <target state="new">Binding {0       } cannot be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingsCollectionDup">
        <source>This causes two bindings in the collection to bind to the same property.</source>
        <target state="new">This causes two bindings in the collection to bind to the same property.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingsCollectionForeign">
        <source>Binding does not belong to this BindingsCollection.</source>
        <target state="new">Binding does not belong to this BindingsCollection.</target>
        <note />
      </trans-unit>
      <trans-unit id="BlinkRateMustBeZeroOrMore">
        <source>BlinkRate must be zero or greater. Negative values are not permitted.</source>
        <target state="new">BlinkRate must be zero or greater. Negative values are not permitted.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonAutoEllipsisDescr">
        <source>Enables the automatic handling of text that extends beyond the width of the button.</source>
        <target state="new">Enables the automatic handling of text that extends beyond the width of the button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonBorderColorDescr">
        <source>For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the color of the border around the button.</source>
        <target state="new">For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the color of the border around the button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonBorderSizeDescr">
        <source>For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the size, in pixels, of the border around the button.</source>
        <target state="new">For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the size, in pixels, of the border around the button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonCheckedBackColorDescr">
        <source>For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the color of the client area of the button when the button is checked and the mouse pointer is outside the bounds of the control.</source>
        <target state="new">For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the color of the client area of the button when the button is checked and the mouse pointer is outside the bounds of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonDialogResultDescr">
        <source>The dialog-box result produced in a modal form by clicking the button.</source>
        <target state="new">The dialog-box result produced in a modal form by clicking the button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonFlatAppearance">
        <source>For buttons whose FlatStyle is FlatStyle.Flat, determines the appearance of the border and the colors used to indicate check state and mouse state.</source>
        <target state="new">For buttons whose FlatStyle is FlatStyle.Flat, determines the appearance of the border and the colors used to indicate check state and mouse state.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonFlatAppearanceInvalidBorderColor">
        <source>ButtonBase controls do not support setting the BorderColor to Transparent.</source>
        <target state="new">ButtonBase controls do not support setting the BorderColor to Transparent.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonFlatStyleDescr">
        <source>Determines the appearance of the control when a user moves the mouse over the control and clicks.</source>
        <target state="new">Determines the appearance of the control when a user moves the mouse over the control and clicks.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonImageAlignDescr">
        <source>The alignment of the image that will be displayed on the control.</source>
        <target state="new">The alignment of the image that will be displayed on the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonImageDescr">
        <source>The image that will be displayed on the control.</source>
        <target state="new">The image that will be displayed on the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonImageIndexDescr">
        <source>The index of the image in the ImageList to display on the control.</source>
        <target state="new">The index of the image in the ImageList to display on the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonImageListDescr">
        <source>The ImageList to get the image to display on the control.</source>
        <target state="new">The ImageList to get the image to display on the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonMouseDownBackColorDescr">
        <source>For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the color of the client area of the button when the mouse is pressed within the bounds of the control.</source>
        <target state="new">For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the color of the client area of the button when the mouse is pressed within the bounds of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonMouseOverBackColorDescr">
        <source>For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the color of the client area of the button when the mouse pointer is within the bounds of the control.</source>
        <target state="new">For buttons whose FlatStyle is FlatStyle.Flat, this property specifies the color of the client area of the button when the mouse pointer is within the bounds of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonTextAlignDescr">
        <source>The alignment of the text that will be displayed on the control.</source>
        <target state="new">The alignment of the text that will be displayed on the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonTextImageRelationDescr">
        <source>Specifies the relative location of the image to the text on the button.</source>
        <target state="new">Specifies the relative location of the image to the text on the button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonUseMnemonicDescr">
        <source>If true, the first character preceded by an ampersand (&amp;&amp;) will be used as the button's mnemonic key.</source>
        <target state="new">If true, the first character preceded by an ampersand (&amp;&amp;) will be used as the button's mnemonic key.</target>
        <note />
      </trans-unit>
      <trans-unit id="ButtonUseVisualStyleBackColorDescr">
        <source>Determines whether the background is drawn using visual styles, if visual styles are supported.</source>
        <target state="new">Determines whether the background is drawn using visual styles, if visual styles are supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="CDallowFullOpenDescr">
        <source>Enables and disables the Define Custom Colors button.</source>
        <target state="new">Enables and disables the Define Custom Colors button.</target>
        <note />
      </trans-unit>
      <trans-unit id="CDanyColorDescr">
        <source>Indicates whether the dialog box displays all available colors in the set of basic colors.</source>
        <target state="new">Indicates whether the dialog box displays all available colors in the set of basic colors.</target>
        <note />
      </trans-unit>
      <trans-unit id="CDcolorDescr">
        <source>The color selected in the dialog box.</source>
        <target state="new">The color selected in the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="CDcustomColorsDescr">
        <source>The custom set of colors shown in the dialog box.</source>
        <target state="new">The custom set of colors shown in the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="CDfullOpenDescr">
        <source>Controls whether the custom color section of the dialog box is initially displayed.</source>
        <target state="new">Controls whether the custom color section of the dialog box is initially displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="CDshowHelpDescr">
        <source>Controls whether the Help button is displayed.</source>
        <target state="new">Controls whether the Help button is displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="CDsolidColorOnlyDescr">
        <source>Indicates whether the dialog box will restrict users to only selecting solid colors.</source>
        <target state="new">Indicates whether the dialog box will restrict users to only selecting solid colors.</target>
        <note />
      </trans-unit>
      <trans-unit id="COM2BadHandlerType">
        <source>Handler type ({0} != {1}) is not valid.</source>
        <target state="new">Handler type ({0} != {1}) is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="COM2NamesAndValuesNotEqual">
        <source>Names and values must be non-null and of same length.</source>
        <target state="new">Names and values must be non-null and of same length.</target>
        <note />
      </trans-unit>
      <trans-unit id="COM2ReadonlyProperty">
        <source>Property {0} is read-only.</source>
        <target state="new">Property {0} is read-only.</target>
        <note />
      </trans-unit>
      <trans-unit id="COM2UnhandledVT">
        <source>Unhandled VT: {0}.</source>
        <target state="new">Unhandled VT: {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="CancelCaption">
        <source>Cancel</source>
        <target state="new">Cancel</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotActivateControl">
        <source>Invisible or disabled control cannot be activated</source>
        <target state="new">Invisible or disabled control cannot be activated</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotChangePrintedDocument">
        <source>You cannot alter the document or add to it once you have printed it.</source>
        <target state="new">You cannot alter the document or add to it once you have printed it.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotConvertDoubleToDate">
        <source>Double cannot be converted to a date.</source>
        <target state="new">Double cannot be converted to a date.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotConvertIntToFloat">
        <source>Integer cannot be converted to a float.</source>
        <target state="new">Integer cannot be converted to a float.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantNestMessageLoops">
        <source>Starting a second message loop on a single thread is not a valid operation. Use Form.ShowDialog instead.</source>
        <target state="new">Starting a second message loop on a single thread is not a valid operation. Use Form.ShowDialog instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantShowMBServiceWithHelp">
        <source>Showing a service notification message box with a Help button is not a valid operation.</source>
        <target state="new">Showing a service notification message box with a Help button is not a valid operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantShowMBServiceWithOwner">
        <source>Showing a service notification message box with an owner window is not a valid operation. Use the Show method that does not take an owner.</source>
        <target state="new">Showing a service notification message box with an owner window is not a valid operation. Use the Show method that does not take an owner.</target>
        <note />
      </trans-unit>
      <trans-unit id="CantShowModalOnNonInteractive">
        <source>Showing a modal dialog box or form when the application is not running in UserInteractive mode is not a valid operation. Specify the ServiceNotification or DefaultDesktopOnly style to display a notification from a service application.</source>
        <target state="new">Showing a modal dialog box or form when the application is not running in UserInteractive mode is not a valid operation. Specify the ServiceNotification or DefaultDesktopOnly style to display a notification from a service application.</target>
        <note />
      </trans-unit>
      <trans-unit id="CatAccessibility">
        <source>Accessibility</source>
        <target state="new">Accessibility</target>
        <note />
      </trans-unit>
      <trans-unit id="CatAction">
        <source>Action</source>
        <target state="new">Action</target>
        <note />
      </trans-unit>
      <trans-unit id="CatAppearance">
        <source>Appearance</source>
        <target state="new">Appearance</target>
        <note />
      </trans-unit>
      <trans-unit id="CatAsynchronous">
        <source>Asynchronous</source>
        <target state="new">Asynchronous</target>
        <note />
      </trans-unit>
      <trans-unit id="CatBehavior">
        <source>Behavior</source>
        <target state="new">Behavior</target>
        <note />
      </trans-unit>
      <trans-unit id="CatColors">
        <source>Colors</source>
        <target state="new">Colors</target>
        <note />
      </trans-unit>
      <trans-unit id="CatData">
        <source>Data</source>
        <target state="new">Data</target>
        <note />
      </trans-unit>
      <trans-unit id="CatDisplay">
        <source>Display</source>
        <target state="new">Display</target>
        <note />
      </trans-unit>
      <trans-unit id="CatDragDrop">
        <source>Drag Drop</source>
        <target state="new">Drag Drop</target>
        <note />
      </trans-unit>
      <trans-unit id="CatFocus">
        <source>Focus</source>
        <target state="new">Focus</target>
        <note />
      </trans-unit>
      <trans-unit id="CatFolderBrowsing">
        <source>Folder Browsing</source>
        <target state="new">Folder Browsing</target>
        <note />
      </trans-unit>
      <trans-unit id="CatItems">
        <source>Items</source>
        <target state="new">Items</target>
        <note />
      </trans-unit>
      <trans-unit id="CatKey">
        <source>Key</source>
        <target state="new">Key</target>
        <note />
      </trans-unit>
      <trans-unit id="CatLayout">
        <source>Layout</source>
        <target state="new">Layout</target>
        <note />
      </trans-unit>
      <trans-unit id="CatMouse">
        <source>Mouse</source>
        <target state="new">Mouse</target>
        <note />
      </trans-unit>
      <trans-unit id="CatPrivate">
        <source>Private</source>
        <target state="new">Private</target>
        <note />
      </trans-unit>
      <trans-unit id="CatPropertyChanged">
        <source>Property Changed</source>
        <target state="new">Property Changed</target>
        <note />
      </trans-unit>
      <trans-unit id="CatWindowStyle">
        <source>Window Style</source>
        <target state="new">Window Style</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxAppearanceDescr">
        <source>Controls the appearance of the check box.</source>
        <target state="new">Controls the appearance of the check box.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxAutoCheckDescr">
        <source>Causes the check box to automatically change state when clicked.</source>
        <target state="new">Causes the check box to automatically change state when clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxCheckAlignDescr">
        <source>Determines the location of the check box inside the control.</source>
        <target state="new">Determines the location of the check box inside the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxCheckStateDescr">
        <source>Indicates the state of the component. </source>
        <target state="new">Indicates the state of the component. </target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxCheckedDescr">
        <source>Indicates whether the component is in the checked state. </source>
        <target state="new">Indicates whether the component is in the checked state. </target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxOnAppearanceChangedDescr">
        <source>Event raised when the value of the Appearance property is changed on CheckBox.</source>
        <target state="new">Event raised when the value of the Appearance property is changed on CheckBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxOnCheckStateChangedDescr">
        <source>Occurs whenever the CheckState property is changed.</source>
        <target state="new">Occurs whenever the CheckState property is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxOnCheckedChangedDescr">
        <source>Occurs whenever the Check property is changed.</source>
        <target state="new">Occurs whenever the Check property is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckBoxThreeStateDescr">
        <source>Indicates whether the CheckBox will allow three check states rather than two.</source>
        <target state="new">Indicates whether the CheckBox will allow three check states rather than two.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckedListBoxCheckOnClickDescr">
        <source>Indicates if the check box should be toggled with the first click on an item.</source>
        <target state="new">Indicates if the check box should be toggled with the first click on an item.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckedListBoxCheckedIndexCollectionIsReadOnly">
        <source>CheckedListBox.CheckedIndexCollection is read only.</source>
        <target state="new">CheckedListBox.CheckedIndexCollection is read only.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckedListBoxCheckedItemCollectionIsReadOnly">
        <source>CheckedListBox.CheckedItemCollection is read only.</source>
        <target state="new">CheckedListBox.CheckedItemCollection is read only.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckedListBoxInvalidSelectionMode">
        <source>Multi-selection is not supported on CheckedListBox.</source>
        <target state="new">Multi-selection is not supported on CheckedListBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckedListBoxItemCheckDescr">
        <source>Indicates that an item is about to have its checked state changed. The value is not updated until after the event occurs.</source>
        <target state="new">Indicates that an item is about to have its checked state changed. The value is not updated until after the event occurs.</target>
        <note />
      </trans-unit>
      <trans-unit id="CheckedListBoxThreeDCheckBoxesDescr">
        <source>Indicates whether check boxes have a ButtonState of Flat or Normal.</source>
        <target state="new">Indicates whether check boxes have a ButtonState of Flat or Normal.</target>
        <note />
      </trans-unit>
      <trans-unit id="CircularOwner">
        <source>A circular control reference has been made. A control cannot be owned by or parented to itself.</source>
        <target state="new">A circular control reference has been made. A control cannot be owned by or parented to itself.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClipboardOperationFailed">
        <source>Requested Clipboard operation did not succeed.</source>
        <target state="new">Requested Clipboard operation did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClipboardSecurityException">
        <source>Due to security restrictions on clipboard, the specified clipboard format cannot be set.</source>
        <target state="new">Due to security restrictions on clipboard, the specified clipboard format cannot be set.</target>
        <note />
      </trans-unit>
      <trans-unit id="Clipboard_InvalidPath">
        <source>Path "{0}" in the argument "{1}" is not valid.</source>
        <target state="new">Path "{0}" in the argument "{1}" is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="CloseCaption">
        <source>Close</source>
        <target state="new">Close</target>
        <note />
      </trans-unit>
      <trans-unit id="ClosingWhileCreatingHandle">
        <source>Value {0}() cannot be called while doing CreateHandle().</source>
        <target state="new">Value {0}() cannot be called while doing CreateHandle().</target>
        <note />
      </trans-unit>
      <trans-unit id="CollectionEmptyException">
        <source>Cannot operate with an empty collection.</source>
        <target state="new">Cannot operate with an empty collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="ColumnAlignment">
        <source>Indicates the horizontal alignment of the text displayed in the column header.</source>
        <target state="new">Indicates the horizontal alignment of the text displayed in the column header.</target>
        <note />
      </trans-unit>
      <trans-unit id="ColumnCaption">
        <source>The text displayed in the column header.</source>
        <target state="new">The text displayed in the column header.</target>
        <note />
      </trans-unit>
      <trans-unit id="ColumnHeaderBadDisplayIndex">
        <source>DisplayIndex value is out of bounds. Value must be greater than or equal to 0 and less than or equal to number of columns minus 1.</source>
        <target state="new">DisplayIndex value is out of bounds. Value must be greater than or equal to 0 and less than or equal to number of columns minus 1.</target>
        <note />
      </trans-unit>
      <trans-unit id="ColumnHeaderCollectionInvalidArgument">
        <source>Argument must be of type ColumnHeader.</source>
        <target state="new">Argument must be of type ColumnHeader.</target>
        <note />
      </trans-unit>
      <trans-unit id="ColumnHeaderDisplayIndexDescr">
        <source>The display index of the column</source>
        <target state="new">The display index of the column</target>
        <note />
      </trans-unit>
      <trans-unit id="ColumnHeaderNameDescr">
        <source>The name of the column header.</source>
        <target state="new">The name of the column header.</target>
        <note />
      </trans-unit>
      <trans-unit id="ColumnWidth">
        <source>The visual width of the column in pixels.</source>
        <target state="new">The visual width of the column in pixels.</target>
        <note />
      </trans-unit>
      <trans-unit id="CombinationOfAccessibilitySwitchesNotSupported">
        <source>Desktop applications are required to opt in to all earlier accessibility improvements to get the later improvements. To do this, ensure that if the AppContext switch 'Switch.UseLegacyAccessibilityFeatures.N' is set to 'false', then 'Switch.UseLegacyAccessibilityFeatures' and all 'Switch.UseLegacyAccessibilityFeatures.M' switches, when M &lt; N, evaluate to false as well. Note that, if a switch for a particular set of accessibility improvements is not present, its value is determined by the target framework version. You can remedy this by adding these switches and setting their value to false.</source>
        <target state="new">Desktop applications are required to opt in to all earlier accessibility improvements to get the later improvements. To do this, ensure that if the AppContext switch 'Switch.UseLegacyAccessibilityFeatures.N' is set to 'false', then 'Switch.UseLegacyAccessibilityFeatures' and all 'Switch.UseLegacyAccessibilityFeatures.M' switches, when M &lt; N, evaluate to false as well. Note that, if a switch for a particular set of accessibility improvements is not present, its value is determined by the target framework version. You can remedy this by adding these switches and setting their value to false.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxAutoCompleteCustomSourceDescr">
        <source>The autocomplete custom source, which is a custom StringCollection used when the AutoCompleteSource is CustomSource.</source>
        <target state="new">The autocomplete custom source, which is a custom StringCollection used when the AutoCompleteSource is CustomSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxAutoCompleteModeDescr">
        <source>Indicates the text completion behavior of the combo box.</source>
        <target state="new">Indicates the text completion behavior of the combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxAutoCompleteModeOnlyNoneAllowed">
        <source>Only the value AutoCompleteMode.None can be used when DropDownStyle is ComboBoxStyle.DropDownList and AutoCompleteSource is not AutoCompleteSource.ListItems.</source>
        <target state="new">Only the value AutoCompleteMode.None can be used when DropDownStyle is ComboBoxStyle.DropDownList and AutoCompleteSource is not AutoCompleteSource.ListItems.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxAutoCompleteSourceDescr">
        <source>The source of complete strings used for automatic completion.</source>
        <target state="new">The source of complete strings used for automatic completion.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxAutoCompleteSourceOnlyListItemsAllowed">
        <source>Only the value AutoCompleteSource.ListItems can be used when DropDownStyle is ComboBoxStyle.DropDownList and AutoCompleteMode is not AutoCompleteMode.None.</source>
        <target state="new">Only the value AutoCompleteSource.ListItems can be used when DropDownStyle is ComboBoxStyle.DropDownList and AutoCompleteMode is not AutoCompleteMode.None.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxDataSourceWithSort">
        <source>DataSource cannot be set in a combo box that is sorted.</source>
        <target state="new">DataSource cannot be set in a combo box that is sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxDrawModeDescr">
        <source>Indicates whether the code or the operating system will handle drawing of elements in the list.</source>
        <target state="new">Indicates whether the code or the operating system will handle drawing of elements in the list.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxDropDownHeightDescr">
        <source>The height, in pixels, of the drop-down box in a combo box.</source>
        <target state="new">The height, in pixels, of the drop-down box in a combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxDropDownStyleChangedDescr">
        <source>Occurs when the value of the DropDownStyle property changes.</source>
        <target state="new">Occurs when the value of the DropDownStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxDropDownWidthDescr">
        <source>The width, in pixels, of the drop-down box in a combo box.</source>
        <target state="new">The width, in pixels, of the drop-down box in a combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxDroppedDownDescr">
        <source>Indicates if the combo box is currently dropped down.</source>
        <target state="new">Indicates if the combo box is currently dropped down.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxFlatStyleDescr">
        <source>Determines the display of the control.</source>
        <target state="new">Determines the display of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxIntegralHeightDescr">
        <source>Indicates whether the combo box should resize to avoid showing partial items.</source>
        <target state="new">Indicates whether the combo box should resize to avoid showing partial items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxItemHeightDescr">
        <source>The height, in pixels, of items in an owner-draw combo box.</source>
        <target state="new">The height, in pixels, of items in an owner-draw combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxItemOverflow">
        <source>Too many items in the combo box.</source>
        <target state="new">Too many items in the combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxItemsDescr">
        <source>The items in the combo box.</source>
        <target state="new">The items in the combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxMaxDropDownItemsDescr">
        <source>The maximum number of entries to display in the drop-down list.</source>
        <target state="new">The maximum number of entries to display in the drop-down list.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxMaxLengthDescr">
        <source>Specifies the maximum number of characters that can be entered into the combo box.</source>
        <target state="new">Specifies the maximum number of characters that can be entered into the combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxOnDropDownClosedDescr">
        <source>Indicates that the drop-down portion of the combo box has closed.</source>
        <target state="new">Indicates that the drop-down portion of the combo box has closed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxOnDropDownDescr">
        <source>Occurs when the drop-down portion of the combo box is shown.</source>
        <target state="new">Occurs when the drop-down portion of the combo box is shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxOnTextUpdateDescr">
        <source>Occurs when the combo box text has changed.</source>
        <target state="new">Occurs when the combo box text has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxPreferredHeightDescr">
        <source>The preferred height of this control.</source>
        <target state="new">The preferred height of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxSelectedIndexDescr">
        <source>The index of the currently selected item of the combo box.</source>
        <target state="new">The index of the currently selected item of the combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxSelectedItemDescr">
        <source>The currently selected item in the combo box, or null.</source>
        <target state="new">The currently selected item in the combo box, or null.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxSelectedTextDescr">
        <source>The selected text in the edit component of the combo box.</source>
        <target state="new">The selected text in the edit component of the combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxSelectionLengthDescr">
        <source>The length of the selected text in the edit component of the combo box.</source>
        <target state="new">The length of the selected text in the edit component of the combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxSelectionStartDescr">
        <source>The index of the first character in the selected text.</source>
        <target state="new">The index of the first character in the selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxSortWithDataSource">
        <source>ComboBox that has a DataSource set cannot be sorted. Sort the data using the underlying data model.</source>
        <target state="new">ComboBox that has a DataSource set cannot be sorted. Sort the data using the underlying data model.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxSortedDescr">
        <source>Specifies whether items in the list portion of the combo box are sorted.</source>
        <target state="new">Specifies whether items in the list portion of the combo box are sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComboBoxStyleDescr">
        <source>Controls the appearance and functionality of the combo box.</source>
        <target state="new">Controls the appearance and functionality of the combo box.</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandIdNotAllocated">
        <source>New command ID cannot be allocated.</source>
        <target state="new">New command ID cannot be allocated.</target>
        <note />
      </trans-unit>
      <trans-unit id="CommonDialogHelpRequested">
        <source>Occurs when the user clicks the Help button.</source>
        <target state="new">Occurs when the user clicks the Help button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComponentEditorFormBadComponent">
        <source>Parameter must be of type IComponent.</source>
        <target state="new">Parameter must be of type IComponent.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComponentEditorFormProperties">
        <source>{0} Properties</source>
        <target state="new">{0} Properties</target>
        <note />
      </trans-unit>
      <trans-unit id="ComponentEditorFormPropertiesNoName">
        <source>Properties</source>
        <target state="new">Properties</target>
        <note />
      </trans-unit>
      <trans-unit id="ComponentManagerProxyOutOfMemory">
        <source>Unable to register the IMsoComponent.  The maximum number of registered IMsoComponents has been reached.</source>
        <target state="new">Unable to register the IMsoComponent.  The maximum number of registered IMsoComponents has been reached.</target>
        <note />
      </trans-unit>
      <trans-unit id="Config_base_unrecognized_attribute">
        <source>Server cannot recognize the attribute {0}.</source>
        <target state="new">Server cannot recognize the attribute {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConnPointAdviseFailed">
        <source>IConnectionPoint::Advise did not succeed with hr=0x{0:X} for event interface {1}.</source>
        <target state="new">IConnectionPoint::Advise did not succeed with hr=0x{0:X} for event interface {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConnPointCouldNotCreate">
        <source>Connection point for event interface '{0}' cannot be created.</source>
        <target state="new">Connection point for event interface '{0}' cannot be created.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConnPointSinkIF">
        <source>Sink object does not implement the event interface.</source>
        <target state="new">Sink object does not implement the event interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConnPointSourceIF">
        <source>Source object does not expose the {0} event interface.</source>
        <target state="new">Source object does not expose the {0} event interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConnPointUnhandledType">
        <source>Unhandled type {0}.</source>
        <target state="new">Unhandled type {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainerControlActiveControlDescr">
        <source>The currently active control.</source>
        <target state="new">The currently active control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainerControlAutoScaleModeDescr">
        <source>Determines how the form or control will scale when screen resolution or fonts change.</source>
        <target state="new">Determines how the form or control will scale when screen resolution or fonts change.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainerControlAutoValidate">
        <source>Indicates whether controls in the container will be automatically validated when the focus changes.</source>
        <target state="new">Indicates whether controls in the container will be automatically validated when the focus changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainerControlBindingContextDescr">
        <source>The binding manager for the container control.  This manages all bindings of child controls to lists.</source>
        <target state="new">The binding manager for the container control.  This manages all bindings of child controls to lists.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainerControlInvalidAutoScaleDimensions">
        <source>The width and height of AutoScaleDimensions must be greater than or equal to zero.</source>
        <target state="new">The width and height of AutoScaleDimensions must be greater than or equal to zero.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainerControlOnAutoValidateChangedDescr">
        <source>Occurs whenever the AutoValidate property is changed.</source>
        <target state="new">Occurs whenever the AutoValidate property is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainerControlParentFormDescr">
        <source>The parent form of this container control.</source>
        <target state="new">The parent form of this container control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContextMenuCollapseDescr">
        <source>Raised when the context menu collapses.</source>
        <target state="new">Raised when the context menu collapses.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContextMenuImageListDescr">
        <source>Gets or sets the ImageList associated with this context menu.</source>
        <target state="new">Gets or sets the ImageList associated with this context menu.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContextMenuInvalidParent">
        <source>ContextMenu cannot be shown on an invisible control.</source>
        <target state="new">ContextMenu cannot be shown on an invisible control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContextMenuIsImageMarginPresentDescr">
        <source>Gets or sets a value indicating whether the menu has an image margin.</source>
        <target state="new">Gets or sets a value indicating whether the menu has an image margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContextMenuSourceControlDescr">
        <source>The last control that caused this context menu to be displayed.</source>
        <target state="new">The last control that caused this context menu to be displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContextMenuStripSourceControlDescr">
        <source>The last control that caused this context menu strip to be displayed.</source>
        <target state="new">The last control that caused this context menu strip to be displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAccessibileObjectInvalid">
        <source>Control's accessible object is in an invalid state.</source>
        <target state="new">Control's accessible object is in an invalid state.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAccessibilityObjectDescr">
        <source>The accessibility object for this control.</source>
        <target state="new">The accessibility object for this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAccessibleDefaultActionDescr">
        <source>The default action description of the control.</source>
        <target state="new">The default action description of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAccessibleDescriptionDescr">
        <source>The description that will be reported to accessibility clients.</source>
        <target state="new">The description that will be reported to accessibility clients.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAccessibleNameDescr">
        <source>The name that will be reported to accessibility clients.</source>
        <target state="new">The name that will be reported to accessibility clients.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAccessibleRoleDescr">
        <source>The role that will be reported to accessibility clients.</source>
        <target state="new">The role that will be reported to accessibility clients.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAllowDropDescr">
        <source>Indicates whether the control can accept data that the user drags onto it.</source>
        <target state="new">Indicates whether the control can accept data that the user drags onto it.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAllowTransparencyDescr">
        <source>Indicates whether the opacity of the control can be adjusted. </source>
        <target state="new">Indicates whether the opacity of the control can be adjusted. </target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAnchorDescr">
        <source>Defines the edges of the container to which a certain control is bound. When a control is anchored to an edge, the distance between the control's closest edge and the specified edge will remain constant. </source>
        <target state="new">Defines the edges of the container to which a certain control is bound. When a control is anchored to an edge, the distance between the control's closest edge and the specified edge will remain constant. </target>
        <note />
      </trans-unit>
      <trans-unit id="ControlArrayCannotAddComponentArray">
        <source>Instance '{0}' cannot be added.  This instance is of a ComponentArrayBase type.</source>
        <target state="new">Instance '{0}' cannot be added.  This instance is of a ComponentArrayBase type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlArrayCannotPerformAddCopy">
        <source>Cannot perform ControlArray.AddCopy() because the ControlArray is empty.  Add the control you want copied to the first position in the ControlArray.</source>
        <target state="new">Cannot perform ControlArray.AddCopy() because the ControlArray is empty.  Add the control you want copied to the first position in the ControlArray.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlArrayCloningException">
        <source>Instance '{0}' must have a default constructor or one without parameters to be copied by the ControlArray.</source>
        <target state="new">Instance '{0}' must have a default constructor or one without parameters to be copied by the ControlArray.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlArrayDuplicateException">
        <source>Instance '{0}' cannot be added.  This instance already exists in the ControlArray '{1}'.</source>
        <target state="new">Instance '{0}' cannot be added.  This instance already exists in the ControlArray '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlArrayValidationException">
        <source>Type of '{0}' cannot be added to ControlArray.  Type of '{1}', or a type derived from that type, is expected.</source>
        <target state="new">Type of '{0}' cannot be added to ControlArray.  Type of '{1}', or a type derived from that type, is expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAutoRelocateDescr">
        <source>Specifies whether the control will be auto-relocated in response to the movement of peer controls.</source>
        <target state="new">Specifies whether the control will be auto-relocated in response to the movement of peer controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAutoSizeDescr">
        <source>Specifies whether a control will automatically size itself to fit its contents.</source>
        <target state="new">Specifies whether a control will automatically size itself to fit its contents.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlAutoSizeModeDescr">
        <source>Specifies the mode by which the user interface element automatically resizes itself.</source>
        <target state="new">Specifies the mode by which the user interface element automatically resizes itself.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBackColorDescr">
        <source>The background color of the component. </source>
        <target state="new">The background color of the component. </target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBackgroundImageDescr">
        <source>The background image used for the control.</source>
        <target state="new">The background image used for the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBackgroundImageLayoutDescr">
        <source>The background image layout used for the component.</source>
        <target state="new">The background image layout used for the component.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBadAsyncResult">
        <source>Parameter must be of type ThreadMethodEntry.</source>
        <target state="new">Parameter must be of type ThreadMethodEntry.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBadControl">
        <source>Parameter must be of type Control.</source>
        <target state="new">Parameter must be of type Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBindingContextDescr">
        <source>The binding context for the control.</source>
        <target state="new">The binding context for the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBindingsDescr">
        <source>The data bindings for the control.</source>
        <target state="new">The data bindings for the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBottomDescr">
        <source>The bottom of the control, in container coordinates.</source>
        <target state="new">The bottom of the control, in container coordinates.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlBoundsDescr">
        <source>The bounds of the control, in container coordinates.</source>
        <target state="new">The bounds of the control, in container coordinates.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCanFocusDescr">
        <source>Checks if this control can receive the focus.</source>
        <target state="new">Checks if this control can receive the focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCanSelectDescr">
        <source>Checks if this control can be selected.</source>
        <target state="new">Checks if this control can be selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCannotBeNull">
        <source>Control cannot be null.</source>
        <target state="new">Control cannot be null.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCaptureDescr">
        <source>Determines if this control is currently capturing all mouse input.</source>
        <target state="new">Determines if this control is currently capturing all mouse input.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCausesValidationDescr">
        <source>Indicates whether this component raises validation events. </source>
        <target state="new">Indicates whether this component raises validation events. </target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCheckForIllegalCrossThreadCalls">
        <source>Indicates whether illegal cross-thread calls raise exceptions. This can be used as a debugging aid.</source>
        <target state="new">Indicates whether illegal cross-thread calls raise exceptions. This can be used as a debugging aid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlClientRectangleDescr">
        <source>Retrieves the rectangle of the inner area of this control.</source>
        <target state="new">Retrieves the rectangle of the inner area of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlClientSizeDescr">
        <source>Determines the size of the inner area of this control.</source>
        <target state="new">Determines the size of the inner area of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCompanyNameDescr">
        <source>Retrieves the company name for this control.</source>
        <target state="new">Retrieves the company name for this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlContainsFocusDescr">
        <source>Determines if this control or one if its children currently has the focus.</source>
        <target state="new">Determines if this control or one if its children currently has the focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlContextMenuDescr">
        <source>The shortcut menu to display when the user right-clicks the control.</source>
        <target state="new">The shortcut menu to display when the user right-clicks the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlContextMenuStripChangedDescr">
        <source>Occurs when the value of the ContextMenuStrip property changes.</source>
        <target state="new">Occurs when the value of the ContextMenuStrip property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlControlsDescr">
        <source>The collection of child controls within this control.</source>
        <target state="new">The collection of child controls within this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCreatedDescr">
        <source>Determines if the control has been fully created.</source>
        <target state="new">Determines if the control has been fully created.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlCursorDescr">
        <source>The cursor that appears when the pointer moves over the control.</source>
        <target state="new">The cursor that appears when the pointer moves over the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlDisplayRectangleDescr">
        <source>Retrieves the display rectangle of this control.</source>
        <target state="new">Retrieves the display rectangle of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlDisposedDescr">
        <source>Determines if this control has been disposed.</source>
        <target state="new">Determines if this control has been disposed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlDisposingDescr">
        <source>Determines whether this control is in the process of being disposed. </source>
        <target state="new">Determines whether this control is in the process of being disposed. </target>
        <note />
      </trans-unit>
      <trans-unit id="ControlDockDescr">
        <source>Defines which borders of the control are bound to the container. </source>
        <target state="new">Defines which borders of the control are bound to the container. </target>
        <note />
      </trans-unit>
      <trans-unit id="ControlDoubleBufferedDescr">
        <source>Indicates whether the control will be double buffered.</source>
        <target state="new">Indicates whether the control will be double buffered.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlDpiChangeScale">
        <source>Enable or disable automatic scaling of this control when dpi changes.</source>
        <target state="new">Enable or disable automatic scaling of this control when dpi changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlEnabledDescr">
        <source>Indicates whether the control is enabled.</source>
        <target state="new">Indicates whether the control is enabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlFocusedDescr">
        <source>Determines if this control has focus.</source>
        <target state="new">Determines if this control has focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlFontDescr">
        <source>The font used to display text in the control.</source>
        <target state="new">The font used to display text in the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlForeColorDescr">
        <source>The foreground color of this component, which is used to display text.</source>
        <target state="new">The foreground color of this component, which is used to display text.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlHandleCreatedDescr">
        <source>Indicates whether the control has a handle associated with it.</source>
        <target state="new">Indicates whether the control has a handle associated with it.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlHandleDescr">
        <source>The native handle for this control.</source>
        <target state="new">The native handle for this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlHasChildrenDescr">
        <source>Indicates whether the control contains one or more child controls.</source>
        <target state="new">Indicates whether the control contains one or more child controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlHeightDescr">
        <source>The height of the user interface element, in pixels.</source>
        <target state="new">The height of the user interface element, in pixels.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlIMEModeDescr">
        <source>Determines the IME (Input Method Editor) status of the object when selected.</source>
        <target state="new">Determines the IME (Input Method Editor) status of the object when selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlInvalidLastScalingFactor">
        <source>Scaling factor cannot be zero or empty.</source>
        <target state="new">Scaling factor cannot be zero or empty.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlInvokeRequiredDescr">
        <source>Determines if Invoke or BeginInvoke should be used to access this control cross-thread.</source>
        <target state="new">Determines if Invoke or BeginInvoke should be used to access this control cross-thread.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlIsAccessibleDescr">
        <source>Indicates whether the control is visible to accessibility applications.</source>
        <target state="new">Indicates whether the control is visible to accessibility applications.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlIsKeyLockedNumCapsScrollLockKeysSupportedOnly">
        <source>Specified key is not supported.</source>
        <target state="new">Specified key is not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlLeftDescr">
        <source>The upper left of the control, in container coordinates.</source>
        <target state="new">The upper left of the control, in container coordinates.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlLocationDescr">
        <source>The coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</source>
        <target state="new">The coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlMarginDescr">
        <source>Specifies space between this control and another control's margin.</source>
        <target state="new">Specifies space between this control and another control's margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlMaximumSizeDescr">
        <source>Specifies the maximum size of the control.</source>
        <target state="new">Specifies the maximum size of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlMetaFileDCWrapperSizeInvalid">
        <source>Size cannot have negative width or height.</source>
        <target state="new">Size cannot have negative width or height.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlMinimumSizeDescr">
        <source>Specifies the minimum size of the control.</source>
        <target state="new">Specifies the minimum size of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlNotChild">
        <source>'child' is not a child control of this parent.</source>
        <target state="new">'child' is not a child control of this parent.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnAutoSizeChangedDescr">
        <source>Occurs when the AutoSize property has changed.</source>
        <target state="new">Occurs when the AutoSize property has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnBackColorChangedDescr">
        <source>Event raised when the value of the BackColor property is changed on Control.</source>
        <target state="new">Event raised when the value of the BackColor property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnBackgroundImageChangedDescr">
        <source>Event raised when the value of the BackgroundImage property is changed on Control.</source>
        <target state="new">Event raised when the value of the BackgroundImage property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnBackgroundImageLayoutChangedDescr">
        <source>Event raised when the value of the BackgroundImageLayout property is changed on Control.</source>
        <target state="new">Event raised when the value of the BackgroundImageLayout property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnBindingContextChangedDescr">
        <source>Event raised when the value of the BindingContext property is changed on Control.</source>
        <target state="new">Event raised when the value of the BindingContext property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnCausesValidationChangedDescr">
        <source>Event raised when the value of the CausesValidation property is changed on Control.</source>
        <target state="new">Event raised when the value of the CausesValidation property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnChangeUICuesDescr">
        <source>Occurs when focus rectangles and keyboard cue underlines are being shown or hidden.</source>
        <target state="new">Occurs when focus rectangles and keyboard cue underlines are being shown or hidden.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnClickDescr">
        <source>Occurs when the component is clicked.</source>
        <target state="new">Occurs when the component is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnClientSizeChangedDescr">
        <source>Event raised when the value of the ClientSize property is changed on Control.</source>
        <target state="new">Event raised when the value of the ClientSize property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnContextMenuChangedDescr">
        <source>Occurs when the value of the ContextMenu property changes.</source>
        <target state="new">Occurs when the value of the ContextMenu property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnControlAddedDescr">
        <source>Occurs when a control is added to this control.</source>
        <target state="new">Occurs when a control is added to this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnControlRemovedDescr">
        <source>Occurs when a control is removed from this control.</source>
        <target state="new">Occurs when a control is removed from this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnCreateHandleDescr">
        <source>Occurs when the control's native handle is created.</source>
        <target state="new">Occurs when the control's native handle is created.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnCursorChangedDescr">
        <source>Event raised when the value of the Cursor property is changed on Control.</source>
        <target state="new">Event raised when the value of the Cursor property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDestroyHandleDescr">
        <source>Occurs when the control's native handle is destroyed.</source>
        <target state="new">Occurs when the control's native handle is destroyed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDockChangedDescr">
        <source>Event raised when the value of the Dock property is changed on Control.</source>
        <target state="new">Event raised when the value of the Dock property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDoubleClickDescr">
        <source>Occurs when the component is double-clicked.</source>
        <target state="new">Occurs when the component is double-clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDpiChangedAfterParentDescr">
        <source>Occurs when the top level parent of this control is moved to a monitor with a different resolution and scaling level, or when parent's monitor scaling level is changed in Windows settings. Child windows receive this message after parent window receives DpiChanged event.</source>
        <target state="new">Occurs when the top level parent of this control is moved to a monitor with a different resolution and scaling level, or when parent's monitor scaling level is changed in Windows settings. Child windows receive this message after parent window receives DpiChanged event.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDpiChangedBeforeParentDescr">
        <source>Occurs when the top level parent of this control is moved to a monitor with a different resolution and scaling level, or when parent's monitor scaling level is changed in Windows settings. Child windows receive this message before parent window receives DpiChanged event.</source>
        <target state="new">Occurs when the top level parent of this control is moved to a monitor with a different resolution and scaling level, or when parent's monitor scaling level is changed in Windows settings. Child windows receive this message before parent window receives DpiChanged event.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDragDropDescr">
        <source>Occurs when a drag-and-drop operation is completed.</source>
        <target state="new">Occurs when a drag-and-drop operation is completed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDragEnterDescr">
        <source>Occurs when the mouse drags an item into the client area for this Control.</source>
        <target state="new">Occurs when the mouse drags an item into the client area for this Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDragLeaveDescr">
        <source>Occurs when an object is dragged out of the control's bounds.</source>
        <target state="new">Occurs when an object is dragged out of the control's bounds.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnDragOverDescr">
        <source>Occurs when an object is dragged over the control's bounds.</source>
        <target state="new">Occurs when an object is dragged over the control's bounds.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnEnabledChangedDescr">
        <source>Occurs when the control's enabled state changes.</source>
        <target state="new">Occurs when the control's enabled state changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnEnterDescr">
        <source>Occurs when the control becomes the active control of the form.</source>
        <target state="new">Occurs when the control becomes the active control of the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnFontChangedDescr">
        <source>Event raised when the value of the Font property is changed on Control.</source>
        <target state="new">Event raised when the value of the Font property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnForeColorChangedDescr">
        <source>Event raised when the value of the ForeColor property is changed on Control.</source>
        <target state="new">Event raised when the value of the ForeColor property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnGiveFeedbackDescr">
        <source>Occurs when the mouse drags an item. The system requests that the Control provide feedback to that effect.</source>
        <target state="new">Occurs when the mouse drags an item. The system requests that the Control provide feedback to that effect.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnGotFocusDescr">
        <source>Occurs when the control gets focus.</source>
        <target state="new">Occurs when the control gets focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnHelpDescr">
        <source>Occurs when the user invokes Help for the control.</source>
        <target state="new">Occurs when the user invokes Help for the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnImeModeChangedDescr">
        <source>Occurs when the control's input method editor (IME) mode changes.</source>
        <target state="new">Occurs when the control's input method editor (IME) mode changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnInvalidateDescr">
        <source>Occurs when a control's display requires redrawing.</source>
        <target state="new">Occurs when a control's display requires redrawing.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnKeyDownDescr">
        <source>Occurs when a key is first pressed.</source>
        <target state="new">Occurs when a key is first pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnKeyPressDescr">
        <source>Occurs when the control has focus and the user presses and releases a key.</source>
        <target state="new">Occurs when the control has focus and the user presses and releases a key.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnKeyUpDescr">
        <source>Occurs when a key is released.</source>
        <target state="new">Occurs when a key is released.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnLayoutDescr">
        <source>Occurs when the control is about to lay out its contents.</source>
        <target state="new">Occurs when the control is about to lay out its contents.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnLeaveDescr">
        <source>Occurs when the control is no longer the active control of the form.</source>
        <target state="new">Occurs when the control is no longer the active control of the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnLocationChangedDescr">
        <source>Event raised when the value of the Location property is changed on Control.</source>
        <target state="new">Event raised when the value of the Location property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnLostFocusDescr">
        <source>Occurs when the control loses focus.</source>
        <target state="new">Occurs when the control loses focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMarginChangedDescr">
        <source>Occurs when the Margin property has changed.</source>
        <target state="new">Occurs when the Margin property has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseCaptureChangedDescr">
        <source>Occurs after the mouse capture is changed.</source>
        <target state="new">Occurs after the mouse capture is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseClickDescr">
        <source>Occurs when the control is clicked by the mouse.</source>
        <target state="new">Occurs when the control is clicked by the mouse.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseDoubleClickDescr">
        <source>Occurs when the control is double clicked by the mouse.</source>
        <target state="new">Occurs when the control is double clicked by the mouse.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseDownDescr">
        <source>Occurs when the mouse pointer is over the component and a mouse button is pressed.</source>
        <target state="new">Occurs when the mouse pointer is over the component and a mouse button is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseEnterDescr">
        <source>Occurs when the mouse enters the visible part of the control.</source>
        <target state="new">Occurs when the mouse enters the visible part of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseHoverDescr">
        <source>Occurs when the mouse remains stationary inside of the control for an amount of time.</source>
        <target state="new">Occurs when the mouse remains stationary inside of the control for an amount of time.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseLeaveDescr">
        <source>Occurs when the mouse leaves the visible part of the control.</source>
        <target state="new">Occurs when the mouse leaves the visible part of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseMoveDescr">
        <source>Occurs when the mouse pointer is moved over the component.</source>
        <target state="new">Occurs when the mouse pointer is moved over the component.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseUpDescr">
        <source>Occurs when the mouse pointer is over the component and a mouse button is released.</source>
        <target state="new">Occurs when the mouse pointer is over the component and a mouse button is released.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMouseWheelDescr">
        <source>Occurs when the mouse wheel moves while the control has focus.</source>
        <target state="new">Occurs when the mouse wheel moves while the control has focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnMoveDescr">
        <source>Occurs when a control is moved.</source>
        <target state="new">Occurs when a control is moved.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnPaddingChangedDescr">
        <source>Occurs when the Padding property has changed.</source>
        <target state="new">Occurs when the Padding property has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnPaintDescr">
        <source>Occurs when a control needs repainting.</source>
        <target state="new">Occurs when a control needs repainting.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnParentChangedDescr">
        <source>Event raised when the value of the Parent property is changed on Control.</source>
        <target state="new">Event raised when the value of the Parent property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnQueryAccessibilityHelpDescr">
        <source>Occurs when an Accessibility client invokes Help for the control.</source>
        <target state="new">Occurs when an Accessibility client invokes Help for the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnQueryContinueDragDescr">
        <source>Occurs when the mouse drags an item. The system requests whether the drag-and-drop operation should be allowed to continue.</source>
        <target state="new">Occurs when the mouse drags an item. The system requests whether the drag-and-drop operation should be allowed to continue.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnResizeBeginDescr">
        <source>Occurs when the control enters the sizing modal loop.</source>
        <target state="new">Occurs when the control enters the sizing modal loop.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnResizeDescr">
        <source>Occurs when a control is resized.</source>
        <target state="new">Occurs when a control is resized.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnResizeEndDescr">
        <source>Occurs when the control exits the sizing modal loop.</source>
        <target state="new">Occurs when the control exits the sizing modal loop.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnRightToLeftChangedDescr">
        <source>Occurs when the value of the RightToLeft property changes.</source>
        <target state="new">Occurs when the value of the RightToLeft property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnRightToLeftLayoutChangedDescr">
        <source>Occurs when the value of the RightToLeftLayout property changes.</source>
        <target state="new">Occurs when the value of the RightToLeftLayout property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnSizeChangedDescr">
        <source>Event raised when the value of the Size property is changed on Control.</source>
        <target state="new">Event raised when the value of the Size property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnStyleChangedDescr">
        <source>Event raised when the window style of a Control is changed.</source>
        <target state="new">Event raised when the window style of a Control is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnSystemColorsChangedDescr">
        <source>Event raised when the system colors change.</source>
        <target state="new">Event raised when the system colors change.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnTabIndexChangedDescr">
        <source>Event raised when the value of the TabIndex property is changed.</source>
        <target state="new">Event raised when the value of the TabIndex property is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnTabStopChangedDescr">
        <source>Event raised when the value of the TabStop property is changed on Control.</source>
        <target state="new">Event raised when the value of the TabStop property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnTextChangedDescr">
        <source>Event raised when the value of the Text property is changed on Control.</source>
        <target state="new">Event raised when the value of the Text property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnValidatedDescr">
        <source>Occurs after a control has been successfully validated.</source>
        <target state="new">Occurs after a control has been successfully validated.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnValidatingDescr">
        <source>Occurs when the control is validating.</source>
        <target state="new">Occurs when the control is validating.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlOnVisibleChangedDescr">
        <source>Occurs when the control's visibility changes.</source>
        <target state="new">Occurs when the control's visibility changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlPaddingDescr">
        <source>Specifies the interior spacing of a control.</source>
        <target state="new">Specifies the interior spacing of a control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlParentDescr">
        <source>The parent of this control.</source>
        <target state="new">The parent of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlProductNameDescr">
        <source>Retrieves the name of the product associated with this component.</source>
        <target state="new">Retrieves the name of the product associated with this component.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlProductVersionDescr">
        <source>Retrieves the version of the product associated with this component.</source>
        <target state="new">Retrieves the version of the product associated with this component.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlRecreatingHandleDescr">
        <source>Determines if this control is in the process of recreating its handle.</source>
        <target state="new">Determines if this control is in the process of recreating its handle.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlRegionChangedDescr">
        <source>Event raised when the value of Region property is changed on Control.</source>
        <target state="new">Event raised when the value of Region property is changed on Control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlRegionDescr">
        <source>The region, or shape, of this control.</source>
        <target state="new">The region, or shape, of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlResizeRedrawDescr">
        <source>Indicates whether the control should redraw itself when resized.</source>
        <target state="new">Indicates whether the control should redraw itself when resized.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlRightDescr">
        <source>The distance, in pixels, between the right edge of the control and the left edge of its container's client area.</source>
        <target state="new">The distance, in pixels, between the right edge of the control and the left edge of its container's client area.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlRightToLeftDescr">
        <source>Indicates whether the component should draw right-to-left for RTL languages.</source>
        <target state="new">Indicates whether the component should draw right-to-left for RTL languages.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlRightToLeftLayoutDescr">
        <source>Indicates whether the control layout is right-to-left when the RightToLeft property is set to Yes.</source>
        <target state="new">Indicates whether the control layout is right-to-left when the RightToLeft property is set to Yes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlSizeDescr">
        <source>The size of the control in pixels.</source>
        <target state="new">The size of the control in pixels.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlTabIndexDescr">
        <source>Determines the index in the TAB order that this control will occupy.</source>
        <target state="new">Determines the index in the TAB order that this control will occupy.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlTabStopDescr">
        <source>Indicates whether the user can use the TAB key to give focus to the control.</source>
        <target state="new">Indicates whether the user can use the TAB key to give focus to the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlTagDescr">
        <source>User-defined data associated with the object.</source>
        <target state="new">User-defined data associated with the object.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlTextDescr">
        <source>The text associated with the control.</source>
        <target state="new">The text associated with the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlTopDescr">
        <source>The top of the control, in container coordinates.</source>
        <target state="new">The top of the control, in container coordinates.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlTopLevelControlDescr">
        <source>Retrieves the top-level control that contains this control.</source>
        <target state="new">Retrieves the top-level control that contains this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlUnsupportedProperty">
        <source>Getting value of property '{0}' is not supported by this method.</source>
        <target state="new">Getting value of property '{0}' is not supported by this method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlUseWaitCursorDescr">
        <source>When this property is true, the Cursor property of the control and its child controls is set to WaitCursor.</source>
        <target state="new">When this property is true, the Cursor property of the control and its child controls is set to WaitCursor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlUserPreferenceChangedDescr">
        <source>Event raised when SystemInformation UserPreference changed event is raised</source>
        <target state="new">Event raised when SystemInformation UserPreference changed event is raised</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlUserPreferenceChangingDescr">
        <source>Event raised when SystemInformation UserPreferenceChanging event is raised</source>
        <target state="new">Event raised when SystemInformation UserPreferenceChanging event is raised</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlVisibleDescr">
        <source>Determines whether the control is visible or hidden.</source>
        <target state="new">Determines whether the control is visible or hidden.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlWidthDescr">
        <source>The width of the control, in container coordinates.</source>
        <target state="new">The width of the control, in container coordinates.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlWindowTargetDescr">
        <source>The location where native messages will be routed.</source>
        <target state="new">The location where native messages will be routed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlWithScrollbarsPositionDescr">
        <source>The coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</source>
        <target state="new">The coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</target>
        <note />
      </trans-unit>
      <trans-unit id="ControlWithScrollbarsVirtualSizeDescr">
        <source>The size of the control if the screen were infinitely large.</source>
        <target state="new">The size of the control if the screen were infinitely large.</target>
        <note />
      </trans-unit>
      <trans-unit id="CurrencyManagerCantAddNew">
        <source>The list must be an IBindingList to AddNew.</source>
        <target state="new">The list must be an IBindingList to AddNew.</target>
        <note />
      </trans-unit>
      <trans-unit id="CursorCannotCovertToBytes">
        <source>System cursors cannot be converted to byte[].</source>
        <target state="new">System cursors cannot be converted to byte[].</target>
        <note />
      </trans-unit>
      <trans-unit id="CursorCannotCovertToString">
        <source>Custom cursors cannot be converted to string.</source>
        <target state="new">Custom cursors cannot be converted to string.</target>
        <note />
      </trans-unit>
      <trans-unit id="CursorNonSerializableHandle">
        <source>Stock cursors cannot be serialized.</source>
        <target state="new">Stock cursors cannot be serialized.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataBindingAddNewNotSupportedOnPropertyManager">
        <source>AddNew is not supported for property to property binding.</source>
        <target state="new">AddNew is not supported for property to property binding.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataBindingCycle">
        <source>Detected a property binding cycle for the property '{0}'</source>
        <target state="new">Detected a property binding cycle for the property '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="DataBindingPushDataException">
        <source>DataBinding cannot find a row in the list that is suitable for all bindings.</source>
        <target state="new">DataBinding cannot find a row in the list that is suitable for all bindings.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataBindingRemoveAtNotSupportedOnPropertyManager">
        <source>RemoveAt is not supported for property-to-property binding.</source>
        <target state="new">RemoveAt is not supported for property-to-property binding.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridAllowSortingDescr">
        <source>Indicates whether the grid can be re-sorted by clicking a column header.</source>
        <target state="new">Indicates whether the grid can be re-sorted by clicking a column header.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridAlternatingBackColorDescr">
        <source>Indicates the background color of alternating rows for a ledger appearance.</source>
        <target state="new">Indicates the background color of alternating rows for a ledger appearance.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridBackButtonClickDescr">
        <source>Occurs when the user clicks the Back button on a child table to return to the parent table.</source>
        <target state="new">Occurs when the user clicks the Back button on a child table to return to the parent table.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridBackgroundColorDescr">
        <source>Indicates the color of the DataGrid background.</source>
        <target state="new">Indicates the color of the DataGrid background.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridBeginInit">
        <source>BeginInit() has already been called without an EndInit().</source>
        <target state="new">BeginInit() has already been called without an EndInit().</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridBoolColumnAllowNullValue">
        <source>Specifies whether the DataGridBoolColumn allows null values.</source>
        <target state="new">Specifies whether the DataGridBoolColumn allows null values.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridBorderStyleDescr">
        <source>Indicates the border style for the DataGrid.</source>
        <target state="new">Indicates the border style for the DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridCaptionBackButtonToolTip">
        <source>Navigates back to the parent rows.</source>
        <target state="new">Navigates back to the parent rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridCaptionBackColorDescr">
        <source>Indicates the background color of the top caption.</source>
        <target state="new">Indicates the background color of the top caption.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridCaptionDetailsButtonToolTip">
        <source>Shows/Hides the parent rows for the current set of child rows.</source>
        <target state="new">Shows/Hides the parent rows for the current set of child rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridCaptionFontDescr">
        <source>Indicates the font of the top caption.</source>
        <target state="new">Indicates the font of the top caption.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridCaptionForeColorDescr">
        <source>Indicates the color of text that appears in the top caption.</source>
        <target state="new">Indicates the color of text that appears in the top caption.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridCaptionTextDescr">
        <source>Indicates the text displayed in the top caption.</source>
        <target state="new">Indicates the text displayed in the top caption.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridCaptionVisibleDescr">
        <source>Indicates whether the top caption is visible.</source>
        <target state="new">Indicates whether the top caption is visible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridColumnCollectionMissing">
        <source>DataGridColumn instance does not exist in the collection.</source>
        <target state="new">DataGridColumn instance does not exist in the collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridColumnHeadersVisibleDescr">
        <source>Indicates whether the column headers are visible.</source>
        <target state="new">Indicates whether the column headers are visible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridColumnListManagerPosition">
        <source>Position of ListManager must be equal to 'rowNum'.</source>
        <target state="new">Position of ListManager must be equal to 'rowNum'.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridColumnNoPropertyDescriptor">
        <source>PropertyDescriptor has not been set on this DataGridColumn.</source>
        <target state="new">PropertyDescriptor has not been set on this DataGridColumn.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridColumnStyleDuplicateMappingName">
        <source>Data grid column styles collection already contains a column style with the same mapping name.</source>
        <target state="new">Data grid column styles collection already contains a column style with the same mapping name.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridColumnUnbound">
        <source>DataGridColumnStyle of '{0}' cannot be used because it is not associated with a Property or Column in the DataSource.</source>
        <target state="new">DataGridColumnStyle of '{0}' cannot be used because it is not associated with a Property or Column in the DataSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridColumnWidth">
        <source>ColumnWidth must be greater than or equal to 0.</source>
        <target state="new">ColumnWidth must be greater than or equal to 0.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridCurrentCellDescr">
        <source>The currently selected cell in the DataGrid.</source>
        <target state="new">The currently selected cell in the DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridDataMemberDescr">
        <source>Indicates a sub-list of the DataSource to show in the DataGrid.</source>
        <target state="new">Indicates a sub-list of the DataSource to show in the DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridDataSourceDescr">
        <source>Indicates the source of data for the DataGrid.</source>
        <target state="new">Indicates the source of data for the DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridDefaultColumnCollectionChanged">
        <source>User cannot change the contents of the default GridColumnStylesCollection.</source>
        <target state="new">User cannot change the contents of the default GridColumnStylesCollection.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridDefaultTableSet">
        <source>Value of this property cannot be changed on the default DataGridTableStyle.</source>
        <target state="new">Value of this property cannot be changed on the default DataGridTableStyle.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridDownButtonClickDescr">
        <source>Occurs when the user clicks the "show/hide parent rows" icon. </source>
        <target state="new">Occurs when the user clicks the "show/hide parent rows" icon. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridEmptyColor">
        <source>Value '{0}' cannot be set to an empty value.</source>
        <target state="new">Value '{0}' cannot be set to an empty value.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridErrorMessageBoxCaption">
        <source>Committing the row to the original data store has caused an error.</source>
        <target state="new">Committing the row to the original data store has caused an error.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridExceptionInPaint">
        <source>DataGrid received an exception at design time. Reset the DataSource and DataMember property on the grid.</source>
        <target state="new">DataGrid received an exception at design time. Reset the DataSource and DataMember property on the grid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridFailedToGetRegionInfo">
        <source>Program cannot get information about the painting and scrolling region.</source>
        <target state="new">Program cannot get information about the painting and scrolling region.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridFirstVisibleColumnDescr">
        <source>Indicates the index of the column that is first shown.</source>
        <target state="new">Indicates the index of the column that is first shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridFlatModeDescr">
        <source>Indicates whether the grid has a flat appearance.</source>
        <target state="new">Indicates whether the grid has a flat appearance.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridGridLineColorDescr">
        <source>Indicates the color of the grid lines.</source>
        <target state="new">Indicates the color of the grid lines.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridGridLineStyleDescr">
        <source>Indicates the style of the grid lines.</source>
        <target state="new">Indicates the style of the grid lines.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridGridTablesDescr">
        <source>The collection of DataGridTableStyle objects that the DataGrid can render its data with.</source>
        <target state="new">The collection of DataGridTableStyle objects that the DataGrid can render its data with.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridHeaderBackColorDescr">
        <source>Indicates the background color of the column and row headers.</source>
        <target state="new">Indicates the background color of the column and row headers.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridHeaderFontDescr">
        <source>Indicates the font of the text in the column and row headers.</source>
        <target state="new">Indicates the font of the text in the column and row headers.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridHeaderForeColorDescr">
        <source>Indicates the color of the text in the column and row headers.</source>
        <target state="new">Indicates the color of the text in the column and row headers.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridHorizScrollBarDescr">
        <source>Returns the horizontal scroll bar used by the grid.</source>
        <target state="new">Returns the horizontal scroll bar used by the grid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridLinkColorDescr">
        <source>Indicates the color of the text that appears inside the child links.</source>
        <target state="new">Indicates the color of the text that appears inside the child links.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridLinkHoverColorDescr">
        <source>Indicates the color of the text that appears inside a child link when the mouse pointer moves over it.</source>
        <target state="new">Indicates the color of the text that appears inside a child link when the mouse pointer moves over it.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridListManagerDescr">
        <source>The CurrencyManager that the DataGrid uses to get data from the data source.</source>
        <target state="new">The CurrencyManager that the DataGrid uses to get data from the data source.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridNavigateEventDescr">
        <source>Occurs when the user navigates to the child rows or when the user navigates back to the parent rows.</source>
        <target state="new">Occurs when the user navigates to the child rows or when the user navigates back to the parent rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridNavigationModeDescr">
        <source>Indicates whether links to child tables are shown.</source>
        <target state="new">Indicates whether links to child tables are shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridNodeClickEventDescr">
        <source>Occurs when the user clicks on the expansion glyph on the row header.</source>
        <target state="new">Occurs when the user clicks on the expansion glyph on the row header.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridNullText">
        <source>(null)</source>
        <target state="new">(null)</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnBackgroundColorChangedDescr">
        <source>Event raised when the value of the BackgroundColor property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the BackgroundColor property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnBorderStyleChangedDescr">
        <source>Event raised when the value of the BorderStyle property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the BorderStyle property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnCaptionVisibleChangedDescr">
        <source>Event raised when the value of the CaptionVisible property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the CaptionVisible property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnCurrentCellChangedDescr">
        <source>Event raised when the value of the CurrentCell property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the CurrentCell property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnDataSourceChangedDescr">
        <source>Event raised when the value of the DataSource property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the DataSource property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnFlatModeChangedDescr">
        <source>Event raised when the value of the FlatMode property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the FlatMode property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnNavigationModeChangedDescr">
        <source>Event raised when the value of the NavigationMode property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the NavigationMode property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnParentRowsLabelStyleChangedDescr">
        <source>Event raised when the value of the ParentRowsLabelStyle property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the ParentRowsLabelStyle property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnParentRowsVisibleChangedDescr">
        <source>Event raised when the value of the ParentRowsVisible property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the ParentRowsVisible property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridOnReadOnlyChangedDescr">
        <source>Event raised when the value of the ReadOnly property is changed on DataGrid.</source>
        <target state="new">Event raised when the value of the ReadOnly property is changed on DataGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridParentRowsBackColorDescr">
        <source>Indicates the background color of the parent rows.</source>
        <target state="new">Indicates the background color of the parent rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridParentRowsForeColorDescr">
        <source>Indicates the color of the text in the parent rows.</source>
        <target state="new">Indicates the color of the text in the parent rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridParentRowsLabelStyleDescr">
        <source>Indicates whether the parent rows show labels for the table and for the columns.</source>
        <target state="new">Indicates whether the parent rows show labels for the table and for the columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridParentRowsVisibleDescr">
        <source>Indicates whether the parent rows area is visible.</source>
        <target state="new">Indicates whether the parent rows area is visible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridPreferredColumnWidthDescr">
        <source>Specifies what the default pixel widths of the grid columns are. The default value for PreferredColumnWidth is 75.</source>
        <target state="new">Specifies what the default pixel widths of the grid columns are. The default value for PreferredColumnWidth is 75.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridPreferredRowHeightDescr">
        <source>Indicates the preferred height of the rows.</source>
        <target state="new">Indicates the preferred height of the rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridPushedIncorrectValueIntoColumn">
        <source>Value {0} Do you want to correct this value?</source>
        <target state="new">Value {0} Do you want to correct this value?</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridReadOnlyDescr">
        <source>Indicates whether rows in the grid can be edited, added, or deleted.</source>
        <target state="new">Indicates whether rows in the grid can be edited, added, or deleted.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridRowHeaderWidthDescr">
        <source>Indicates the width of the row headers.</source>
        <target state="new">Indicates the width of the row headers.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridRowHeadersVisibleDescr">
        <source>Indicates whether the row headers are visible.</source>
        <target state="new">Indicates whether the row headers are visible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridRowRowHeight">
        <source>DataGridRow.Height cannot be negative.</source>
        <target state="new">DataGridRow.Height cannot be negative.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridRowRowNumber">
        <source>DataGridRow cannot have a negative row number.</source>
        <target state="new">DataGridRow cannot have a negative row number.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridScrollEventDescr">
        <source>Occurs when the user scrolls either the horizontal or vertical scroll bar.</source>
        <target state="new">Occurs when the user scrolls either the horizontal or vertical scroll bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridSelectedIndexDescr">
        <source>Indicates the index of the current row.</source>
        <target state="new">Indicates the index of the current row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridSelectionBackColorDescr">
        <source>Indicates the background color of any selected cells or rows.</source>
        <target state="new">Indicates the background color of any selected cells or rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridSelectionForeColorDescr">
        <source>Indicates the color of the text in any selected cells or rows.</source>
        <target state="new">Indicates the color of the text in any selected cells or rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridSetListManager">
        <source>ListManager can be set using the DataSource and DataMember properties.</source>
        <target state="new">ListManager can be set using the DataSource and DataMember properties.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridSetSelectIndex">
        <source>Position on a null ListManager cannot be set.</source>
        <target state="new">Position on a null ListManager cannot be set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridSettingCurrentCellNotGood">
        <source>CurrentCell cannot be set at this time. Moving your code to the Form.Load event should solve this problem.</source>
        <target state="new">CurrentCell cannot be set at this time. Moving your code to the Form.Load event should solve this problem.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTableCollectionMissingTable">
        <source>DataGridTable instance does not exist in the collection.</source>
        <target state="new">DataGridTable instance does not exist in the collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTableStyleCollectionAddedParentedTableStyle">
        <source>DataGridTableStyle that is already parented to another DataGrid cannot be added.</source>
        <target state="new">DataGridTableStyle that is already parented to another DataGrid cannot be added.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTableStyleDuplicateMappingName">
        <source>Data grid table styles collection already contains a table style with the same mapping name.</source>
        <target state="new">Data grid table styles collection already contains a table style with the same mapping name.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTableStyleTransparentAlternatingBackColorNotAllowed">
        <source>DataGridTableStyle does not support transparent AlternatingBackColor.</source>
        <target state="new">DataGridTableStyle does not support transparent AlternatingBackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTableStyleTransparentBackColorNotAllowed">
        <source>DataGridTableStyle does not support transparent BackColor.</source>
        <target state="new">DataGridTableStyle does not support transparent BackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTableStyleTransparentHeaderBackColorNotAllowed">
        <source>DataGridTableStyle does not support transparent HeaderBackColor.</source>
        <target state="new">DataGridTableStyle does not support transparent HeaderBackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTableStyleTransparentSelectionBackColorNotAllowed">
        <source>DataGridTableStyle does not support transparent SelectionBackColor.</source>
        <target state="new">DataGridTableStyle does not support transparent SelectionBackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridToolTipEmptyIcon">
        <source>null rectangle for icon bounds when adding tool tip.</source>
        <target state="new">null rectangle for icon bounds when adding tool tip.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTransparentAlternatingBackColorNotAllowed">
        <source>DataGrid control does not support transparent AlternatingBackColor.</source>
        <target state="new">DataGrid control does not support transparent AlternatingBackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTransparentBackColorNotAllowed">
        <source>DataGrid control does not support transparent BackColor.</source>
        <target state="new">DataGrid control does not support transparent BackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTransparentCaptionBackColorNotAllowed">
        <source>DataGrid control does not support transparent CaptionBackColor.</source>
        <target state="new">DataGrid control does not support transparent CaptionBackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTransparentHeaderBackColorNotAllowed">
        <source>DataGrid control does not support transparent HeaderBackColor.</source>
        <target state="new">DataGrid control does not support transparent HeaderBackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTransparentParentRowsBackColorNotAllowed">
        <source>DataGrid control does not support transparent ParentRowsBackColor.</source>
        <target state="new">DataGrid control does not support transparent ParentRowsBackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridTransparentSelectionBackColorNotAllowed">
        <source>DataGrid control does not support transparent SelectionBackColor.</source>
        <target state="new">DataGrid control does not support transparent SelectionBackColor.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridUnbound">
        <source>Data cannot be read from a DataGrid which is not bound to a DataTable.</source>
        <target state="new">Data cannot be read from a DataGrid which is not bound to a DataTable.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridVertScrollBarDescr">
        <source>Returns the vertical scroll bar used by the grid.</source>
        <target state="new">Returns the vertical scroll bar used by the grid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewAlternatingRowsDefaultCellStyleChangedDescr">
        <source>Occurs when the value of the AlternatingRowsDefaultCellStyle property changes.</source>
        <target state="new">Occurs when the value of the AlternatingRowsDefaultCellStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewAutoSizeColumnModeChangedDescr">
        <source>Occurs when the value of the AutoSizeMode property of a column changes.</source>
        <target state="new">Occurs when the value of the AutoSizeMode property of a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewAutoSizeColumnsModeChangedDescr">
        <source>Occurs when the value of the AutoSizeColumnsMode property changes.</source>
        <target state="new">Occurs when the value of the AutoSizeColumnsMode property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewAutoSizeRowsModeChangedDescr">
        <source>Occurs when the value of the AutoSizeRowsMode property changes.</source>
        <target state="new">Occurs when the value of the AutoSizeRowsMode property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewBackgroundColorChangedDescr">
        <source>Occurs when the value of the DataGridView.BackgroundColor property changes.</source>
        <target state="new">Occurs when the value of the DataGridView.BackgroundColor property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewBackgroundColorDescr">
        <source>The background color of the DataGridView.</source>
        <target state="new">The background color of the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewBand_CannotSelect">
        <source>Selected property cannot be altered before this object is added to a DataGridView control.</source>
        <target state="new">Selected property cannot be altered before this object is added to a DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewBand_MinimumHeightSmallerThanOne">
        <source>Minimum height provided cannot be smaller than {0}.</source>
        <target state="new">Minimum height provided cannot be smaller than {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewBand_MinimumWidthSmallerThanOne">
        <source>Minimum width provided cannot be smaller than {0}.</source>
        <target state="new">Minimum width provided cannot be smaller than {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewBand_NewRowCannotBeInvisible">
        <source>Uncommitted new row cannot be made invisible.</source>
        <target state="new">Uncommitted new row cannot be made invisible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewBeginInit">
        <source>BeginInit() has already been called without an EndInit().</source>
        <target state="new">BeginInit() has already been called without an EndInit().</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewBorderStyleChangedDescr">
        <source>Occurs when the value of the BorderStyle property changes.</source>
        <target state="new">Occurs when the value of the BorderStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellAccessibleObject_OwnerAlreadySet">
        <source>The owning DataGridViewCell object is already set.</source>
        <target state="new">The owning DataGridViewCell object is already set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellAccessibleObject_OwnerNotSet">
        <source>The owning DataGridViewCell object has not been set.</source>
        <target state="new">The owning DataGridViewCell object has not been set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellCollection_AtLeastOneCellIsNull">
        <source>At least one of the provided cells is null.</source>
        <target state="new">At least one of the provided cells is null.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellCollection_CannotAddIdenticalCells">
        <source>At least two provided cells are identical. Each provided cell must be unique.</source>
        <target state="new">At least two provided cells are identical. Each provided cell must be unique.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellCollection_CellAlreadyBelongsToDataGridView">
        <source>Cell provided already belongs to a grid. This operation is not valid.</source>
        <target state="new">Cell provided already belongs to a grid. This operation is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellCollection_CellAlreadyBelongsToDataGridViewRow">
        <source>Cell provided already belongs to a row. This operation is not valid.</source>
        <target state="new">Cell provided already belongs to a row. This operation is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellCollection_CellNotFound">
        <source>Cell provided cannot be found in the collection.</source>
        <target state="new">Cell provided cannot be found in the collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellCollection_OwningRowAlreadyBelongsToDataGridView">
        <source>Collection already belongs to a DataGridView control. This operation is no longer valid.</source>
        <target state="new">Collection already belongs to a DataGridView control. This operation is no longer valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellStyleAlignmentDescr">
        <source>Indicates the position of the content within a cell.</source>
        <target state="new">Indicates the position of the content within a cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCellStyle_TransparentColorNotAllowed">
        <source>DataGridViewCellStyle does not support transparent {0}.</source>
        <target state="new">DataGridViewCellStyle does not support transparent {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCell_CannotSetReadOnlyState">
        <source>ReadOnly property of a cell cannot be set before it is added to a row.</source>
        <target state="new">ReadOnly property of a cell cannot be set before it is added to a row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCell_CannotSetSelectedState">
        <source>Selected property of a cell cannot be set before the cell is added to a DataGridView control.</source>
        <target state="new">Selected property of a cell cannot be set before the cell is added to a DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCell_FormattedValueHasWrongType">
        <source>Formatted value of the cell has a wrong type.</source>
        <target state="new">Formatted value of the cell has a wrong type.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCell_FormattedValueTypeNull">
        <source>FormattedValueType property of a cell cannot be null.</source>
        <target state="new">FormattedValueType property of a cell cannot be null.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCell_ValueTypeNull">
        <source>ValueType property of a cell in a grid cannot be null.</source>
        <target state="new">ValueType property of a cell in a grid cannot be null.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCheckBoxCell_ClipboardChecked">
        <source>Selected</source>
        <target state="new">Selected</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCheckBoxCell_ClipboardFalse">
        <source>False</source>
        <target state="new">False</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCheckBoxCell_ClipboardIndeterminate">
        <source>Indeterminate</source>
        <target state="new">Indeterminate</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCheckBoxCell_ClipboardTrue">
        <source>True</source>
        <target state="new">True</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCheckBoxCell_ClipboardUnchecked">
        <source>Cleared</source>
        <target state="new">Cleared</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewCheckBoxCell_InvalidValueType">
        <source>The value provided for the DataGridViewCheckBoxCell has the wrong type.</source>
        <target state="new">The value provided for the DataGridViewCheckBoxCell has the wrong type.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumnCollection_ColumnNotFound">
        <source>Column named {0} cannot be found.</source>
        <target state="new">Column named {0} cannot be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumnHeaderCell_SortModeAndSortGlyphDirectionClash">
        <source>Column header's SortGlyphDirection cannot be set to {0} while the column's SortMode is set to NotSortable.</source>
        <target state="new">Column header's SortGlyphDirection cannot be set to {0} while the column's SortMode is set to NotSortable.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumnHeadersDefaultCellStyleChangedDescr">
        <source>Occurs when the value of the ColumnHeadersDefaultCellStyle property changes.</source>
        <target state="new">Occurs when the value of the ColumnHeadersDefaultCellStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumnHeadersHeightChangedDescr">
        <source>Occurs when the value of the ColumnHeadersHeight property changes.</source>
        <target state="new">Occurs when the value of the ColumnHeadersHeight property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumnHeadersVisibleDescr">
        <source>Indicates whether the column headers row is displayed.</source>
        <target state="new">Indicates whether the column headers row is displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumnSortModeChangedDescr">
        <source>Occurs when the value of the SortMode property for a column changes.</source>
        <target state="new">Occurs when the value of the SortMode property for a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_AutoSizeCriteriaCannotUseInvisibleHeaders">
        <source>Column AutoSize mode cannot be based on the column headers alone while they are invisible.</source>
        <target state="new">Column AutoSize mode cannot be based on the column headers alone while they are invisible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_AutoSizeModeDescr">
        <source>Determines the auto size mode for this column.</source>
        <target state="new">Determines the auto size mode for this column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_CellTemplateRequired">
        <source>Operation cannot be completed because this DataGridViewColumn does not have a CellTemplate.</source>
        <target state="new">Operation cannot be completed because this DataGridViewColumn does not have a CellTemplate.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_DisplayIndexExceedsColumnCount">
        <source>The DisplayIndex property of a DataGridViewColumn must be smaller than the number of columns.</source>
        <target state="new">The DisplayIndex property of a DataGridViewColumn must be smaller than the number of columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_DisplayIndexNegative">
        <source>DisplayIndex property of a DataGridViewColumn cannot be negative.</source>
        <target state="new">DisplayIndex property of a DataGridViewColumn cannot be negative.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_DisplayIndexTooLarge">
        <source>DisplayIndex property of a DataGridViewColumn must be smaller than {0}.</source>
        <target state="new">DisplayIndex property of a DataGridViewColumn must be smaller than {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_DisplayIndexTooNegative">
        <source>The DisplayIndex property of a detached DataGridViewColumn cannot be smaller than -1.</source>
        <target state="new">The DisplayIndex property of a detached DataGridViewColumn cannot be smaller than -1.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_FillWeightDescr">
        <source>The weight that is used when sizing this column in the Fill auto size mode.</source>
        <target state="new">The weight that is used when sizing this column in the Fill auto size mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_FrozenColumnCannotAutoFill">
        <source>Column's AutoSize mode cannot be set to Fill when it is also a frozen column.</source>
        <target state="new">Column's AutoSize mode cannot be set to Fill when it is also a frozen column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewColumn_SortModeAndSelectionModeClash">
        <source>Column's SortMode cannot be set to {0} while the DataGridView control's SelectionMode is set to {1}.</source>
        <target state="new">Column's SortMode cannot be set to {0} while the DataGridView control's SelectionMode is set to {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewComboBoxCell_DropDownWidthOutOfRange">
        <source>DropDownWidth value cannot be smaller than {0}.</source>
        <target state="new">DropDownWidth value cannot be smaller than {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewComboBoxCell_FieldNotFound">
        <source>Field called {0} does not exist.</source>
        <target state="new">Field called {0} does not exist.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewComboBoxCell_InvalidValue">
        <source>DataGridViewComboBoxCell value is not valid.</source>
        <target state="new">DataGridViewComboBoxCell value is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewComboBoxCell_MaxDropDownItemsOutOfRange">
        <source>MaxDropDownItems value cannot be smaller than {0} or larger than {1}.</source>
        <target state="new">MaxDropDownItems value cannot be smaller than {0} or larger than {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewDataMemberChangedDescr">
        <source>Occurs when the value of the DataMember property changes.</source>
        <target state="new">Occurs when the value of the DataMember property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewDataMemberDescr">
        <source>Indicates a sub-list of the DataSource to show in the DataGridView control.</source>
        <target state="new">Indicates a sub-list of the DataSource to show in the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewDataSourceChangedDescr">
        <source>Occurs when the value of the DataSource property changes.</source>
        <target state="new">Occurs when the value of the DataSource property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewDataSourceDescr">
        <source>Indicates the source of data for the DataGridView control.</source>
        <target state="new">Indicates the source of data for the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewDefaultCellStyleChangedDescr">
        <source>Occurs when the value of the DefaultCellStyle property changes.</source>
        <target state="new">Occurs when the value of the DefaultCellStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewEditingPanelUiaProviderDescription">
        <source>DataGridView EditingPanel UIA Provider</source>
        <target state="new">DataGridView EditingPanel UIA Provider</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewElementPaintingEventArgs_ColumnIndexOutOfRange">
        <source>ColumnIndex property is out of range.</source>
        <target state="new">ColumnIndex property is out of range.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewElementPaintingEventArgs_RowIndexOutOfRange">
        <source>RowIndex property is out of range.</source>
        <target state="new">RowIndex property is out of range.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewGridColorDescr">
        <source>The color of the grid lines separating the cells of the DataGridView.</source>
        <target state="new">The color of the grid lines separating the cells of the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewImageColumn_DescriptionDescr">
        <source>User-defined text associated with the image.</source>
        <target state="new">User-defined text associated with the image.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewImageColumn_IconDescr">
        <source>The icon displayed in the cells of this column when the cell's DataGridViewCell.Value property is not set and the cell's DataGridViewImageCell.ValueIsIcon property is set to true.</source>
        <target state="new">The icon displayed in the cells of this column when the cell's DataGridViewCell.Value property is not set and the cell's DataGridViewImageCell.ValueIsIcon property is set to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewImageColumn_ImageDescr">
        <source>The image displayed in the cells of this column when the cell's DataGridViewCell.Value property is not set and the cell's DataGridViewImageCell.ValueIsIcon property is set to false.</source>
        <target state="new">The image displayed in the cells of this column when the cell's DataGridViewCell.Value property is not set and the cell's DataGridViewImageCell.ValueIsIcon property is set to false.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewImageColumn_ImageLayoutDescr">
        <source>The image layout in the cells for this column.</source>
        <target state="new">The image layout in the cells for this column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewImageColumn_PaddingDescr">
        <source>ImageColumnPadding</source>
        <target state="new">ImageColumnPadding</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewImageColumn_ValuesAreIconsDescr">
        <source>Indicates whether cells in this column display System.Drawing.Icon values.</source>
        <target state="new">Indicates whether cells in this column display System.Drawing.Icon values.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewOnAllowUserToAddRowsChangedDescr">
        <source>Occurs when the value of the AllowUserToAddRows property changes.</source>
        <target state="new">Occurs when the value of the AllowUserToAddRows property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewOnAllowUserToDeleteRowsChangedDescr">
        <source>Occurs when the value of the AllowUserToDeleteRows property changes.</source>
        <target state="new">Occurs when the value of the AllowUserToDeleteRows property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewOnAllowUserToOrderColumnsChangedDescr">
        <source>Occurs when the value of the AllowUserToOrderColumns property changes.</source>
        <target state="new">Occurs when the value of the AllowUserToOrderColumns property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewOnAllowUserToResizeColumnsChangedDescr">
        <source>Occurs when the value of the AllowUserToResizeColumns property changes.</source>
        <target state="new">Occurs when the value of the AllowUserToResizeColumns property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewOnAllowUserToResizeRowsChangedDescr">
        <source>Occurs when the value of the AllowUserToResizeRows property changes.</source>
        <target state="new">Occurs when the value of the AllowUserToResizeRows property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewOnGridColorChangedDescr">
        <source>Occurs when the value of the GridColor property changes.</source>
        <target state="new">Occurs when the value of the GridColor property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewOnMultiSelectChangedDescr">
        <source>Occurs when the value of the MultiSelect property changes.</source>
        <target state="new">Occurs when the value of the MultiSelect property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewOnReadOnlyChangedDescr">
        <source>Occurs when the value of the ReadOnly property changes.</source>
        <target state="new">Occurs when the value of the ReadOnly property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowAccessibleObject_OwnerAlreadySet">
        <source>Owning DataGridViewRow object is already set.</source>
        <target state="new">Owning DataGridViewRow object is already set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowAccessibleObject_OwnerNotSet">
        <source>Owning DataGridViewRow object has not been set.</source>
        <target state="new">Owning DataGridViewRow object has not been set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_AddUnboundRow">
        <source>Rows cannot be programmatically added to the DataGridView's rows collection when the control is data-bound.</source>
        <target state="new">Rows cannot be programmatically added to the DataGridView's rows collection when the control is data-bound.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_CannotAddOrInsertSelectedRow">
        <source>Selected row cannot be added to or inserted into the DataGridView control. The row must be deselected first.</source>
        <target state="new">Selected row cannot be added to or inserted into the DataGridView control. The row must be deselected first.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_CannotDeleteNewRow">
        <source>Uncommitted new row cannot be deleted.</source>
        <target state="new">Uncommitted new row cannot be deleted.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_CantClearRowCollectionWithWrongSource">
        <source>Rows collection cannot be programmatically cleared when the DataGridView control is data-bound to anything else than an IBindingList that supports change notification and allows deletion.</source>
        <target state="new">Rows collection cannot be programmatically cleared when the DataGridView control is data-bound to anything else than an IBindingList that supports change notification and allows deletion.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_CantRemoveRowsWithWrongSource">
        <source>Rows cannot be programmatically removed unless the DataGridView is data-bound to an IBindingList that supports change notification and allows deletion.</source>
        <target state="new">Rows cannot be programmatically removed unless the DataGridView is data-bound to an IBindingList that supports change notification and allows deletion.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_CountOutOfRange">
        <source>Number of copies to create must be strictly positive.</source>
        <target state="new">Number of copies to create must be strictly positive.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_EnumFinished">
        <source>Enumeration already finished.</source>
        <target state="new">Enumeration already finished.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_EnumNotStarted">
        <source>Enumeration has not started. Call MoveNext.</source>
        <target state="new">Enumeration has not started. Call MoveNext.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_IndexDestinationOutOfRange">
        <source>Index of the destination row is out of range.</source>
        <target state="new">Index of the destination row is out of range.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_IndexSourceOutOfRange">
        <source>Index of the row to copy is out of range.</source>
        <target state="new">Index of the row to copy is out of range.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_NoColumns">
        <source>No row can be added to a DataGridView control that does not have columns. Columns must be added first.</source>
        <target state="new">No row can be added to a DataGridView control that does not have columns. Columns must be added first.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_NoInsertionAfterNewRow">
        <source>No row can be inserted after the uncommitted new row.</source>
        <target state="new">No row can be inserted after the uncommitted new row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_NoRowToDuplicate">
        <source>No row exists to make a copy of. A first row must be added to the DataGridView control before you can add copies of it.</source>
        <target state="new">No row exists to make a copy of. A first row must be added to the DataGridView control before you can add copies of it.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_RowIndexOutOfRange">
        <source>Row index provided is out of range.</source>
        <target state="new">Row index provided is out of range.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_RowTemplateTooManyCells">
        <source>The RowTemplate row contains more cells than there are columns.</source>
        <target state="new">The RowTemplate row contains more cells than there are columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowCollection_TooManyCells">
        <source>Provided row contains more cells than there are columns.</source>
        <target state="new">Provided row contains more cells than there are columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowHeadersDefaultCellStyleChangedDescr">
        <source>Occurs when the value of the RowHeadersDefaultCellStyle property changes.</source>
        <target state="new">Occurs when the value of the RowHeadersDefaultCellStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowHeadersVisibleDescr">
        <source>Indicates whether the column that contains row headers is displayed.</source>
        <target state="new">Indicates whether the column that contains row headers is displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowHeadersWidthChangedDescr">
        <source>Occurs when the value of the RowHeadersWidth property changes.</source>
        <target state="new">Occurs when the value of the RowHeadersWidth property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewRowsDefaultCellStyleChangedDescr">
        <source>Occurs when the value of the RowsDefaultCellStyle property changes.</source>
        <target state="new">Occurs when the value of the RowsDefaultCellStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewSortedAscendingAccessibleStatusFormat">
        <source>Sorted ascending by {0}.</source>
        <target state="new">Sorted ascending by {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewSortedDescendingAccessibleStatusFormat">
        <source>Sorted descending by {0}.</source>
        <target state="new">Sorted descending by {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewTopRowAccessibleObject_OwnerAlreadySet">
        <source>The owning DataGridView control is already set.</source>
        <target state="new">The owning DataGridView control is already set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewTopRowAccessibleObject_OwnerNotSet">
        <source>The owning DataGridView control has not been set.</source>
        <target state="new">The owning DataGridView control has not been set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewTypeColumn_WrongCellTemplateType">
        <source>Value provided for CellTemplate must be of type {0} or derive from it.</source>
        <target state="new">Value provided for CellTemplate must be of type {0} or derive from it.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridViewVirtualModeDescr">
        <source>Indicates whether you have provided your own data-management operations for the DataGridView control. </source>
        <target state="new">Indicates whether you have provided your own data-management operations for the DataGridView control. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AColumnHasNoCellTemplate">
        <source>At least one of the DataGridView control's columns has no cell template.</source>
        <target state="new">At least one of the DataGridView control's columns has no cell template.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccButtonCellDefaultAction">
        <source>Press</source>
        <target state="new">Press</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccCellDefaultAction">
        <source>Edit</source>
        <target state="new">Edit</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccCheckBoxCellDefaultActionCheck">
        <source>Press to check</source>
        <target state="new">Press to check</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccCheckBoxCellDefaultActionUncheck">
        <source>Press to uncheck</source>
        <target state="new">Press to uncheck</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccColumnHeaderCellDefaultAction">
        <source>Press to sort column</source>
        <target state="new">Press to sort column</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccColumnHeaderCellSelectDefaultAction">
        <source>Press to select column</source>
        <target state="new">Press to select column</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccDataGridViewCellName">
        <source>{0} Row {1}</source>
        <target state="new">{0} Row {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccEditingControlAccName">
        <source>Editing Control</source>
        <target state="new">Editing Control</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccEditingPanelAccName">
        <source>Editing Panel</source>
        <target state="new">Editing Panel</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccHorizontalScrollBarAccName">
        <source>Horizontal Scroll Bar</source>
        <target state="new">Horizontal Scroll Bar</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccLinkCellDefaultAction">
        <source>Click</source>
        <target state="new">Click</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccNullValue">
        <source>(null)</source>
        <target state="new">(null)</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccRowCreateNew">
        <source>(Create New)</source>
        <target state="new">(Create New)</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccRowName">
        <source>Row {0}</source>
        <target state="new">Row {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccSelectedCellsName">
        <source>Selected Cells</source>
        <target state="new">Selected Cells</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccSelectedRowCellsName">
        <source>Selected Row Cells</source>
        <target state="new">Selected Row Cells</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccTopLeftColumnHeaderCellDefaultAction">
        <source>Press to Select All</source>
        <target state="new">Press to Select All</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccTopLeftColumnHeaderCellName">
        <source>Top Left Header Cell</source>
        <target state="new">Top Left Header Cell</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccTopLeftColumnHeaderCellNameRTL">
        <source>Top Right Header Cell</source>
        <target state="new">Top Right Header Cell</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccTopRow">
        <source>Top Row</source>
        <target state="new">Top Row</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AccVerticalScrollBarAccName">
        <source>Vertical Scroll Bar</source>
        <target state="new">Vertical Scroll Bar</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AdvancedCellBorderStyleInvalid">
        <source>Property {0} cannot be set to the advanced cell border style provided.</source>
        <target state="new">Property {0} cannot be set to the advanced cell border style provided.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AllowUserToAddRowsDescr">
        <source>Indicates whether the option to add rows is displayed to the user.</source>
        <target state="new">Indicates whether the option to add rows is displayed to the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AllowUserToDeleteRowsDescr">
        <source>Indicates whether the user is allowed to delete rows from the DataGridView.</source>
        <target state="new">Indicates whether the user is allowed to delete rows from the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AllowUserToOrderColumnsDescr">
        <source>Indicates whether manual column repositioning is enabled. </source>
        <target state="new">Indicates whether manual column repositioning is enabled. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AllowUserToResizeColumnsDescr">
        <source>Indicates whether users can resize columns.</source>
        <target state="new">Indicates whether users can resize columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AllowUserToResizeRowsDescr">
        <source>Indicates whether users can resize rows.</source>
        <target state="new">Indicates whether users can resize rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AlternatingRowsDefaultCellStyleDescr">
        <source>The default cell style applied to odd-numbered rows. </source>
        <target state="new">The default cell style applied to odd-numbered rows. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AtLeastOneColumnIsNull">
        <source>At least one of the provided columns is null.</source>
        <target state="new">At least one of the provided columns is null.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AtLeastOneRowIsNull">
        <source>At least one of the provided rows is null.</source>
        <target state="new">At least one of the provided rows is null.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AutoSizeColumnsModeDescr">
        <source>Determines the auto size mode for the visible columns.</source>
        <target state="new">Determines the auto size mode for the visible columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_AutoSizeRowsModeDescr">
        <source>Determines the auto size mode for the visible rows.</source>
        <target state="new">Determines the auto size mode for the visible rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_BeginEditNotReentrant">
        <source>Operation is not valid because it results in a reentrant call to the BeginEdit function.</source>
        <target state="new">Operation is not valid because it results in a reentrant call to the BeginEdit function.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_BorderStyleDescr">
        <source>The border style for the DataGridView.</source>
        <target state="new">The border style for the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ButtonColumnFlatStyleDescr">
        <source>The flat style appearance of the button cells in the column.</source>
        <target state="new">The flat style appearance of the button cells in the column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ButtonColumnTextDescr">
        <source>The default text displayed on the button cell.</source>
        <target state="new">The default text displayed on the button cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ButtonColumnUseColumnTextForButtonValueDescr">
        <source>Indicates whether the DataGridViewButtonColumn.Text property value is displayed as the button text for cells in this column.</source>
        <target state="new">Indicates whether the DataGridViewButtonColumn.Text property value is displayed as the button text for cells in this column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CancelRowEditDescr">
        <source>Occurs when the DataGridView.VirtualMode property of a DataGridView control is true and a row edit should be canceled.</source>
        <target state="new">Occurs when the DataGridView.VirtualMode property of a DataGridView control is true and a row edit should be canceled.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddAutoFillColumn">
        <source>Visible column cannot be added because its AutoSize mode is Fill, and the column is frozen.</source>
        <target state="new">Visible column cannot be added because its AutoSize mode is Fill, and the column is frozen.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddAutoSizedColumn">
        <source>Visible column cannot be added because its AutoSize mode includes its header, and the column headers are invisible.</source>
        <target state="new">Visible column cannot be added because its AutoSize mode includes its header, and the column headers are invisible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddFrozenColumn">
        <source>Column cannot be added because it is frozen and placed after an unfrozen column.</source>
        <target state="new">Column cannot be added because it is frozen and placed after an unfrozen column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddFrozenRow">
        <source>Row cannot be added because it is frozen and placed after an unfrozen row.</source>
        <target state="new">Row cannot be added because it is frozen and placed after an unfrozen row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddIdenticalColumns">
        <source>At least two provided columns are identical. Each provided column must be unique.</source>
        <target state="new">At least two provided columns are identical. Each provided column must be unique.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddIdenticalRows">
        <source>At least two provided rows are identical. Each provided row must be unique.</source>
        <target state="new">At least two provided rows are identical. Each provided row must be unique.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddNonFrozenColumn">
        <source>Column cannot be added because it is unfrozen and placed before a frozen column.</source>
        <target state="new">Column cannot be added because it is unfrozen and placed before a frozen column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddNonFrozenRow">
        <source>Row cannot be added because it is unfrozen and placed before a frozen row.</source>
        <target state="new">Row cannot be added because it is unfrozen and placed before a frozen row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAddUntypedColumn">
        <source>Column cannot be added because its CellType property is null.</source>
        <target state="new">Column cannot be added because its CellType property is null.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAlterAutoFillColumnParameter">
        <source>This operation cannot be performed while an auto-filled column is being resized.</source>
        <target state="new">This operation cannot be performed while an auto-filled column is being resized.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAlterDisplayIndexWithinAdjustments">
        <source>This operation cannot be performed while the DisplayIndex of a column is being adjusted.</source>
        <target state="new">This operation cannot be performed while the DisplayIndex of a column is being adjusted.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAutoFillFrozenColumns">
        <source>Columns AutoSize mode cannot be set to Fill because at least one visible column would inherit this AutoSize mode and is frozen.</source>
        <target state="new">Columns AutoSize mode cannot be set to Fill because at least one visible column would inherit this AutoSize mode and is frozen.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAutoSizeColumnsInvisibleColumnHeaders">
        <source>Columns AutoSize mode cannot be based exclusively on the headers because the column headers are invisible and at least one visible column would inherit this AutoSize mode.</source>
        <target state="new">Columns AutoSize mode cannot be based exclusively on the headers because the column headers are invisible and at least one visible column would inherit this AutoSize mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAutoSizeInvisibleColumnHeader">
        <source>Column AutoSize mode cannot be based exclusively on the header because the column headers are invisible.</source>
        <target state="new">Column AutoSize mode cannot be based exclusively on the header because the column headers are invisible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAutoSizeRowInvisibleRowHeader">
        <source>Row AutoSize mode cannot be based on the row headers alone while they are invisible.</source>
        <target state="new">Row AutoSize mode cannot be based on the row headers alone while they are invisible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotAutoSizeRowsInvisibleRowHeader">
        <source>Rows AutoSize mode cannot be based on the row headers alone while they are invisible.</source>
        <target state="new">Rows AutoSize mode cannot be based on the row headers alone while they are invisible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotMakeAutoSizedColumnVisible">
        <source>Column cannot be made visible because its AutoSize mode includes its header and the column headers are invisible.</source>
        <target state="new">Column cannot be made visible because its AutoSize mode includes its header and the column headers are invisible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotMoveFrozenColumn">
        <source>Frozen column cannot be moved after an unfrozen column.</source>
        <target state="new">Frozen column cannot be moved after an unfrozen column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotMoveNonFrozenColumn">
        <source>Unfrozen column cannot be moved before a frozen column.</source>
        <target state="new">Unfrozen column cannot be moved before a frozen column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotSetColumnCountOnDataBoundDataGridView">
        <source>ColumnCount property cannot be set on a data-bound DataGridView control.</source>
        <target state="new">ColumnCount property cannot be set on a data-bound DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotSetRowCountOnDataBoundDataGridView">
        <source>RowCount property cannot be set on a data-bound DataGridView control.</source>
        <target state="new">RowCount property cannot be set on a data-bound DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotSortDataBoundDataGridViewBoundToNonIBindingList">
        <source>DataGridView control must be bound to an IBindingList object to be sorted.</source>
        <target state="new">DataGridView control must be bound to an IBindingList object to be sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotThrowNullException">
        <source>Exception property is not set to a valid exception. ThrowException cannot be set to true.</source>
        <target state="new">Exception property is not set to a valid exception. ThrowException cannot be set to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CannotUseAComparerToSortDataGridViewWhenDataBound">
        <source>DataGridView control is data-bound. The control cannot use the comparer to perform the sort operation.</source>
        <target state="new">DataGridView control is data-bound. The control cannot use the comparer to perform the sort operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellBeginEditDescr">
        <source>Occurs when edit mode starts for the selected cell.</source>
        <target state="new">Occurs when edit mode starts for the selected cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellBorderStyleChangedDescr">
        <source>Occurs when the border style of a cell changes.</source>
        <target state="new">Occurs when the border style of a cell changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellBorderStyleDescr">
        <source>The cell border style for the DataGridView.</source>
        <target state="new">The cell border style for the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellChangeCannotBeCommittedOrAborted">
        <source>Operation did not succeed because the program cannot commit or quit a cell value change.</source>
        <target state="new">Operation did not succeed because the program cannot commit or quit a cell value change.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellClickDescr">
        <source>Occurs when any part of the cell is clicked.</source>
        <target state="new">Occurs when any part of the cell is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellContentClick">
        <source>Occurs when the content within a cell is clicked.</source>
        <target state="new">Occurs when the content within a cell is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellContentDoubleClick">
        <source>Occurs when a user double-clicks a cell's contents.</source>
        <target state="new">Occurs when a user double-clicks a cell's contents.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellContextMenuStripChanged">
        <source>Occurs when the DataGridViewCell.ContextMenuStrip property changes. </source>
        <target state="new">Occurs when the DataGridViewCell.ContextMenuStrip property changes. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellContextMenuStripNeeded">
        <source>Occurs when a cell's context menu strip is needed. </source>
        <target state="new">Occurs when a cell's context menu strip is needed. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellDoesNotBelongToDataGridView">
        <source>Provided cell does not belong to this DataGridView control.</source>
        <target state="new">Provided cell does not belong to this DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellDoesNotYetBelongToDataGridView">
        <source>Operation can only be performed on cells that belong to a DataGridView control.</source>
        <target state="new">Operation can only be performed on cells that belong to a DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellDoubleClickDescr">
        <source>Occurs when the user double-clicks anywhere in a cell.</source>
        <target state="new">Occurs when the user double-clicks anywhere in a cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellEndEditDescr">
        <source>Occurs when edit mode stops for the currently selected cell.</source>
        <target state="new">Occurs when edit mode stops for the currently selected cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellEnterDescr">
        <source>Occurs when the cell receives input focus, becoming the current cell in the DataGridView.</source>
        <target state="new">Occurs when the cell receives input focus, becoming the current cell in the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellErrorTextChangedDescr">
        <source>Occurs when the value of the DataGridViewCell.ErrorText property of a cell changes.</source>
        <target state="new">Occurs when the value of the DataGridViewCell.ErrorText property of a cell changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellErrorTextNeededDescr">
        <source>Occurs when a cell's error text is needed.</source>
        <target state="new">Occurs when a cell's error text is needed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellFormattingDescr">
        <source>Occurs when the contents of a cell need to be formatted for display.</source>
        <target state="new">Occurs when the contents of a cell need to be formatted for display.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellLeaveDescr">
        <source>Occurs when a cell loses input focus and is no longer the current cell.</source>
        <target state="new">Occurs when a cell loses input focus and is no longer the current cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellMouseClickDescr">
        <source>Occurs whenever a mouse clicks anywhere on a cell.</source>
        <target state="new">Occurs whenever a mouse clicks anywhere on a cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellMouseDoubleClickDescr">
        <source>Occurs when a cell within the DataGridView is double-clicked.</source>
        <target state="new">Occurs when a cell within the DataGridView is double-clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellMouseDownDescr">
        <source>Occurs when the user presses a mouse button while the mouse pointer is within the boundaries of a cell.</source>
        <target state="new">Occurs when the user presses a mouse button while the mouse pointer is within the boundaries of a cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellMouseEnterDescr">
        <source>Occurs when the mouse pointer enters a cell.</source>
        <target state="new">Occurs when the mouse pointer enters a cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellMouseLeaveDescr">
        <source>Occurs when the mouse pointer leaves a cell.</source>
        <target state="new">Occurs when the mouse pointer leaves a cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellMouseMoveDescr">
        <source>Occurs when the mouse pointer moves over the DataGridView control.</source>
        <target state="new">Occurs when the mouse pointer moves over the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellMouseUpDescr">
        <source>Occurs when the user releases a mouse button while over a cell.</source>
        <target state="new">Occurs when the user releases a mouse button while over a cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellNeedsDataGridViewForInheritedStyle">
        <source>Cell is not in a DataGridView. The cell cannot retrieve the inherited cell style.</source>
        <target state="new">Cell is not in a DataGridView. The cell cannot retrieve the inherited cell style.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellPaintingDescr">
        <source>Occurs when a cell needs to be drawn.</source>
        <target state="new">Occurs when a cell needs to be drawn.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellParsingDescr">
        <source>Occurs when the user leaves edit mode, regardless of whether the value of the current cell has been modified.</source>
        <target state="new">Occurs when the user leaves edit mode, regardless of whether the value of the current cell has been modified.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellStateChangedDescr">
        <source>Occurs when a cell state changes, such as when the cell loses or gains focus.</source>
        <target state="new">Occurs when a cell state changes, such as when the cell loses or gains focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellStyleChangedDescr">
        <source>Occurs when the DataGridViewCell.Style property of a DataGridViewCell changes.</source>
        <target state="new">Occurs when the DataGridViewCell.Style property of a DataGridViewCell changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellStyleContentChangedDescr">
        <source>Occurs when one of the values of a cell style changes.</source>
        <target state="new">Occurs when one of the values of a cell style changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellToolTipTextChangedDescr">
        <source>Occurs when the DataGridViewCell.ToolTipText property value changes for a cell in the DataGridView.</source>
        <target state="new">Occurs when the DataGridViewCell.ToolTipText property value changes for a cell in the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellToolTipTextDescr">
        <source>The text displayed by the ToolTip associated with this cell.</source>
        <target state="new">The text displayed by the ToolTip associated with this cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellToolTipTextNeededDescr">
        <source>Occurs when a cell's ToolTip text is needed.</source>
        <target state="new">Occurs when a cell's ToolTip text is needed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellValidatedDescr">
        <source>Occurs after the cell has finished validating.</source>
        <target state="new">Occurs after the cell has finished validating.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellValidatingDescr">
        <source>Occurs when the cell is validating.</source>
        <target state="new">Occurs when the cell is validating.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellValueChangedDescr">
        <source>Occurs when the value of a cell changes.</source>
        <target state="new">Occurs when the value of a cell changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellValueNeededDescr">
        <source>Occurs when the DataGridView.VirtualMode property of the DataGridView control is true and the DataGridView requires a value for a cell in order to format and display the cell.</source>
        <target state="new">Occurs when the DataGridView.VirtualMode property of the DataGridView control is true and the DataGridView requires a value for a cell in order to format and display the cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CellValuePushedDescr">
        <source>Occurs when the DataGridView.VirtualMode property of the DataGridView control is true, and a cell value has changed and requires storage in the underlying data source.</source>
        <target state="new">Occurs when the DataGridView.VirtualMode property of the DataGridView control is true, and a cell value has changed and requires storage in the underlying data source.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CheckBoxColumnFalseValueDescr">
        <source>The underlying value corresponding to a cell value of false, which appears as an unchecked box.</source>
        <target state="new">The underlying value corresponding to a cell value of false, which appears as an unchecked box.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CheckBoxColumnFlatStyleDescr">
        <source>The flat style appearance of the check box cells.</source>
        <target state="new">The flat style appearance of the check box cells.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CheckBoxColumnIndeterminateValueDescr">
        <source>The underlying value corresponding to an indeterminate or null cell value, which appears as a disabled checkbox.</source>
        <target state="new">The underlying value corresponding to an indeterminate or null cell value, which appears as a disabled checkbox.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CheckBoxColumnThreeStateDescr">
        <source>Indicates whether the hosted check box cells will allow three check states rather than two.</source>
        <target state="new">Indicates whether the hosted check box cells will allow three check states rather than two.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CheckBoxColumnTrueValueDescr">
        <source>The underlying value corresponding to a cell value of true, which appears as a checked box.</source>
        <target state="new">The underlying value corresponding to a cell value of true, which appears as a checked box.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ClipboardCopyModeDescr">
        <source>Indicates whether users can copy cell text values to the Clipboard and whether row and column header text is included.</source>
        <target state="new">Indicates whether users can copy cell text values to the Clipboard and whether row and column header text is included.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnAddedDescr">
        <source>Occurs when a column is added to the control.</source>
        <target state="new">Occurs when a column is added to the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnAlreadyBelongsToDataGridView">
        <source>Provided column already belongs to the DataGridView control.</source>
        <target state="new">Provided column already belongs to the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnBoundToAReadOnlyFieldMustRemainReadOnly">
        <source>DataGridView column bound to a read-only field must have ReadOnly set to True.</source>
        <target state="new">DataGridView column bound to a read-only field must have ReadOnly set to True.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnContextMenuStripChangedDescr">
        <source>Occurs when the DataGridViewColumn.ContextMenuStrip property of a column changes.</source>
        <target state="new">Occurs when the DataGridViewColumn.ContextMenuStrip property of a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnContextMenuStripDescr">
        <source>The shortcut menu for the column.</source>
        <target state="new">The shortcut menu for the column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDataPropertyNameChangedDescr">
        <source>Occurs when the value of the DataGridViewColumn.DataPropertyName property for a column changes.</source>
        <target state="new">Occurs when the value of the DataGridViewColumn.DataPropertyName property for a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDataPropertyNameDescr">
        <source>The name of the data source property or database column to which the DataGridViewColumn is bound.</source>
        <target state="new">The name of the data source property or database column to which the DataGridViewColumn is bound.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDefaultCellStyleChangedDescr">
        <source>Occurs when the value of the DataGridViewBand.DefaultCellStyle property for a column changes.</source>
        <target state="new">Occurs when the value of the DataGridViewBand.DefaultCellStyle property for a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDefaultCellStyleDescr">
        <source>The column's default cell style.</source>
        <target state="new">The column's default cell style.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDisplayIndexChangedDescr">
        <source>Occurs when the value the DataGridViewColumn.DisplayIndex property for a column changes.</source>
        <target state="new">Occurs when the value the DataGridViewColumn.DisplayIndex property for a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDividerDoubleClickDescr">
        <source>Occurs when the user double-clicks a divider between two columns.</source>
        <target state="new">Occurs when the user double-clicks a divider between two columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDividerWidthChangedDescr">
        <source>Occurs when DataGridViewColumn.DividerWidth changes.</source>
        <target state="new">Occurs when DataGridViewColumn.DividerWidth changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDividerWidthDescr">
        <source>The width of the column divider in pixels.</source>
        <target state="new">The width of the column divider in pixels.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnDoesNotBelongToDataGridView">
        <source>Column provided does not belong to this DataGridView control.</source>
        <target state="new">Column provided does not belong to this DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnFrozenDescr">
        <source>Indicates whether a column will move when a user scrolls the DataGridView control horizontally.</source>
        <target state="new">Indicates whether a column will move when a user scrolls the DataGridView control horizontally.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeaderCellChangedDescr">
        <source>Occurs when the contents of a column header cell change.</source>
        <target state="new">Occurs when the contents of a column header cell change.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeaderMouseClickDescr">
        <source>Occurs when the user clicks a column header.</source>
        <target state="new">Occurs when the user clicks a column header.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeaderMouseDoubleClickDescr">
        <source>Occurs when a column header is double-clicked.</source>
        <target state="new">Occurs when a column header is double-clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeaderTextDescr">
        <source>The caption text on the column's header cell.</source>
        <target state="new">The caption text on the column's header cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeadersBorderStyleChangedDescr">
        <source>Occurs when the DataGridView.ColumnHeadersBorderStyle property changes.</source>
        <target state="new">Occurs when the DataGridView.ColumnHeadersBorderStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeadersBorderStyleDescr">
        <source>The border style applied to the column headers.</source>
        <target state="new">The border style applied to the column headers.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeadersCannotBeInvisible">
        <source>Column headers cannot be made invisible because at least one column uses its header in its AutoSize mode.</source>
        <target state="new">Column headers cannot be made invisible because at least one column uses its header in its AutoSize mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeadersDefaultCellStyleDescr">
        <source>The default column header style.</source>
        <target state="new">The default column header style.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeadersHeightDescr">
        <source>The height, in pixels, of the column headers row. </source>
        <target state="new">The height, in pixels, of the column headers row. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeadersHeightSizeModeChangedDescr">
        <source>Occurs when the value of the ColumnHeadersHeightSizeMode property changes.</source>
        <target state="new">Occurs when the value of the ColumnHeadersHeightSizeMode property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnHeadersHeightSizeModeDescr">
        <source>Determines the behavior for adjusting the column headers height.</source>
        <target state="new">Determines the behavior for adjusting the column headers height.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnMinimumWidthChangedDescr">
        <source>Occurs when the value of the DataGridViewColumn.MinimumWidth property for a column changes.</source>
        <target state="new">Occurs when the value of the DataGridViewColumn.MinimumWidth property for a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnMinimumWidthDescr">
        <source>The minimum width of the column in pixels.</source>
        <target state="new">The minimum width of the column in pixels.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnNameChangedDescr">
        <source>Occurs when the value of the DataGridViewColumn.Name property for a column changes.</source>
        <target state="new">Occurs when the value of the DataGridViewColumn.Name property for a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnNameDescr">
        <source>The name of the column.</source>
        <target state="new">The name of the column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnNeedsToBeDataBoundWhenSortingDataBoundDataGridView">
        <source>Data-bound DataGridView control can only be sorted on data-bound columns.</source>
        <target state="new">Data-bound DataGridView control can only be sorted on data-bound columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnReadOnlyDescr">
        <source>Indicates whether the user can edit the column's cells.</source>
        <target state="new">Indicates whether the user can edit the column's cells.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnRemovedDescr">
        <source>Occurs when a column is removed from the control.</source>
        <target state="new">Occurs when a column is removed from the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnResizableDescr">
        <source>Indicates whether the column is resizable.</source>
        <target state="new">Indicates whether the column is resizable.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnSortModeDescr">
        <source>The sort mode for the column. </source>
        <target state="new">The sort mode for the column. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnStateChangedDescr">
        <source>Occurs when a column changes state, such as gaining or losing focus.</source>
        <target state="new">Occurs when a column changes state, such as gaining or losing focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnToolTipTextChangedDescr">
        <source>Occurs when the DataGridViewColumn.ToolTipText property value changes for a column in the DataGridView.</source>
        <target state="new">Occurs when the DataGridViewColumn.ToolTipText property value changes for a column in the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnToolTipTextDescr">
        <source>The text used for ToolTips.</source>
        <target state="new">The text used for ToolTips.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnVisibleDescr">
        <source>Indicates whether the column is visible.</source>
        <target state="new">Indicates whether the column is visible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnWidthChangedDescr">
        <source>Occurs when the value of the DataGridViewColumn.Width property for a column changes.</source>
        <target state="new">Occurs when the value of the DataGridViewColumn.Width property for a column changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ColumnWidthDescr">
        <source>The current width of the column.</source>
        <target state="new">The current width of the column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnAutoCompleteDescr">
        <source>Indicates whether cells in the column will match the characters being entered in the cell with one from the possible selections. </source>
        <target state="new">Indicates whether cells in the column will match the characters being entered in the cell with one from the possible selections. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnDataSourceDescr">
        <source>The data source that populates the selections for the combo boxes.</source>
        <target state="new">The data source that populates the selections for the combo boxes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnDisplayMemberDescr">
        <source>A string that specifies the property or column from which to retrieve strings for display in the combo boxes.</source>
        <target state="new">A string that specifies the property or column from which to retrieve strings for display in the combo boxes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnDisplayStyleDescr">
        <source>Determines how the combo box is displayed when not editing.</source>
        <target state="new">Determines how the combo box is displayed when not editing.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnDisplayStyleForCurrentCellOnlyDescr">
        <source>Indicates if the display style only applies to the current cell.</source>
        <target state="new">Indicates if the display style only applies to the current cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnDropDownWidthDescr">
        <source>The width of the drop-down lists of the combo boxes.</source>
        <target state="new">The width of the drop-down lists of the combo boxes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnFlatStyleDescr">
        <source>The flat style appearance of the column's cells.</source>
        <target state="new">The flat style appearance of the column's cells.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnItemsDescr">
        <source>The collection of objects used as selections in the combo boxes.</source>
        <target state="new">The collection of objects used as selections in the combo boxes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnMaxDropDownItemsDescr">
        <source>The maximum number of items in the drop-down list of the cells in the column.</source>
        <target state="new">The maximum number of items in the drop-down list of the cells in the column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnSortedDescr">
        <source>Indicates whether the items in the combo box are sorted.</source>
        <target state="new">Indicates whether the items in the combo box are sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ComboBoxColumnValueMemberDescr">
        <source>A string that specifies the property or column from which to get values that correspond to the selections in the drop-down list.</source>
        <target state="new">A string that specifies the property or column from which to get values that correspond to the selections in the drop-down list.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CommitFailedCannotCompleteOperation">
        <source>Operation cannot be completed because the current cell could not be committed.</source>
        <target state="new">Operation cannot be completed because the current cell could not be committed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CurrencyManagerRowCannotBeInvisible">
        <source>Row associated with the currency manager's position cannot be made invisible.</source>
        <target state="new">Row associated with the currency manager's position cannot be made invisible.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CurrentCellCannotBeInvisible">
        <source>Current cell cannot be set to an invisible cell.</source>
        <target state="new">Current cell cannot be set to an invisible cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CurrentCellChangedDescr">
        <source>Occurs when DataGridView.CurrentCell changes.</source>
        <target state="new">Occurs when DataGridView.CurrentCell changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CurrentCellDirtyStateChangedDescr">
        <source>Occurs when the state of a cell changes in relation to a change in its contents.</source>
        <target state="new">Occurs when the state of a cell changes in relation to a change in its contents.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_CustomCellBorderStyleInvalid">
        <source>Value DataGridViewCellBorderStyle. Custom cannot be used to set the {0} property.</source>
        <target state="new">Value DataGridViewCellBorderStyle. Custom cannot be used to set the {0} property.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_DataBindingCompleteDescr">
        <source>Event raised whenever the data source list changes.</source>
        <target state="new">Event raised whenever the data source list changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_DataErrorDescr">
        <source>Occurs when an external data-parsing or validation operation throws an exception, or when an attempt to commit data to a data source does not succeed.</source>
        <target state="new">Occurs when an external data-parsing or validation operation throws an exception, or when an attempt to commit data to a data source does not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_DefaultCellStyleDescr">
        <source>The DataGridViewBand.DefaultCellStyle to be applied to the DataGridView if no other style is set.</source>
        <target state="new">The DataGridViewBand.DefaultCellStyle to be applied to the DataGridView if no other style is set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_DefaultValuesNeededDescr">
        <source>Occurs when the user enters the row for new records so that it can be populated with default values.</source>
        <target state="new">Occurs when the user enters the row for new records so that it can be populated with default values.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_DisabledClipboardCopy">
        <source>Generating Clipboard content is not supported when the ClipboardCopyMode property is Disable.</source>
        <target state="new">Generating Clipboard content is not supported when the ClipboardCopyMode property is Disable.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_EditModeChangedDescr">
        <source>Occurs when the value of the DataGridView.EditMode property changes.</source>
        <target state="new">Occurs when the value of the DataGridView.EditMode property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_EditModeDescr">
        <source>Identifies the mode that determines how cell editing is started.</source>
        <target state="new">Identifies the mode that determines how cell editing is started.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_EditingControlShowingDescr">
        <source>Occurs when a control for editing a cell is showing.</source>
        <target state="new">Occurs when a control for editing a cell is showing.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_EmptyColor">
        <source>Value '{0}' cannot be set to an empty value.</source>
        <target state="new">Value '{0}' cannot be set to an empty value.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_EnableHeadersVisualStylesDescr">
        <source>Indicates whether row and column headers use the visual styles of the user's current theme if visual styles are enabled for the application.</source>
        <target state="new">Indicates whether row and column headers use the visual styles of the user's current theme if visual styles are enabled for the application.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ErrorMessageCaption">
        <source>DataGridView Default Error Dialog</source>
        <target state="new">DataGridView Default Error Dialog</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ErrorMessageText_NoException">
        <source>Exception occurred in the DataGridView.\r\n\r\nTo replace this default dialog box, handle the DataError event.</source>
        <target state="new">Exception occurred in the DataGridView.\r\n\r\nTo replace this default dialog box, handle the DataError event.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ErrorMessageText_WithException">
        <source>The following exception occurred in the DataGridView:\r\n\r\n{0}\r\n\r\nTo replace this default dialog please handle the DataError event.</source>
        <target state="new">The following exception occurred in the DataGridView:\r\n\r\n{0}\r\n\r\nTo replace this default dialog please handle the DataError event.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_FirstDisplayedCellCannotBeAHeaderOrSharedCell">
        <source>First displayed cell cannot be set to a header or shared cell.</source>
        <target state="new">First displayed cell cannot be set to a header or shared cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_FirstDisplayedCellCannotBeInvisible">
        <source>First displayed cell cannot be set to an invisible cell.</source>
        <target state="new">First displayed cell cannot be set to an invisible cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_FirstDisplayedScrollingColumnCannotBeFrozen">
        <source>FirstDisplayedScrollingColumnIndex property cannot be set to a frozen column.</source>
        <target state="new">FirstDisplayedScrollingColumnIndex property cannot be set to a frozen column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_FirstDisplayedScrollingColumnCannotBeInvisible">
        <source>FirstDisplayedScrollingColumnIndex property cannot be set to an invisible column.</source>
        <target state="new">FirstDisplayedScrollingColumnIndex property cannot be set to an invisible column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_FirstDisplayedScrollingRowCannotBeFrozen">
        <source>FirstDisplayedScrollingRowIndex property cannot be set to a frozen row.</source>
        <target state="new">FirstDisplayedScrollingRowIndex property cannot be set to a frozen row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_FirstDisplayedScrollingRowCannotBeInvisible">
        <source>FirstDisplayedScrollingRowIndex property cannot be set to an invisible row.</source>
        <target state="new">FirstDisplayedScrollingRowIndex property cannot be set to an invisible row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ForbiddenOperationInEventHandler">
        <source>Operation cannot be performed in this event handler.</source>
        <target state="new">Operation cannot be performed in this event handler.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_FrozenColumnsPreventFirstDisplayedScrollingColumn">
        <source>The frozen columns do not leave any room for a scrolling column to be displayed.</source>
        <target state="new">The frozen columns do not leave any room for a scrolling column to be displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_FrozenRowsPreventFirstDisplayedScrollingRow">
        <source>The frozen rows do not leave any room for a scrolling row to be displayed.</source>
        <target state="new">The frozen rows do not leave any room for a scrolling row to be displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_HeaderCellReadOnlyProperty">
        <source>Property {0} of a DataGridViewHeaderCell cell cannot be set.</source>
        <target state="new">Property {0} of a DataGridViewHeaderCell cell cannot be set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_IBindingListNeedsToSupportSorting">
        <source>DataGridView control cannot be sorted if it is bound to an IBindingList that does not support sorting.</source>
        <target state="new">DataGridView control cannot be sorted if it is bound to an IBindingList that does not support sorting.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidDataGridViewElementStateCombination">
        <source>Parameter {0} is not a valid combination of DataGridViewElementState flags.</source>
        <target state="new">Parameter {0} is not a valid combination of DataGridViewElementState flags.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidDataGridViewPaintPartsCombination">
        <source>Parameter {0} is not a valid combination of DataGridViewPaintParts flags.</source>
        <target state="new">Parameter {0} is not a valid combination of DataGridViewPaintParts flags.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidEditingControl">
        <source>EditType property of the current cell does not point to a class that derives from System.Windows.Forms.Control and implements the interface IDataGridViewEditingControl.</source>
        <target state="new">EditType property of the current cell does not point to a class that derives from System.Windows.Forms.Control and implements the interface IDataGridViewEditingControl.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidOperationInVirtualMode">
        <source>Operation is not valid when the DataGridView control is in virtual mode.</source>
        <target state="new">Operation is not valid when the DataGridView control is in virtual mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidOperationOnSharedCell">
        <source>Operation cannot be performed on a cell of a shared row.</source>
        <target state="new">Operation cannot be performed on a cell of a shared row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidOperationOnSharedRow">
        <source>Operation cannot be performed on a shared row.</source>
        <target state="new">Operation cannot be performed on a shared row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidPropertyGetOnSharedCell">
        <source>Getting the {0} property of a cell in a shared row is not a valid operation.</source>
        <target state="new">Getting the {0} property of a cell in a shared row is not a valid operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidPropertyGetOnSharedRow">
        <source>Getting the {0} property of a shared row is not a valid operation.</source>
        <target state="new">Getting the {0} property of a shared row is not a valid operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_InvalidPropertySetOnSharedRow">
        <source>Setting the {0} property of a shared row is not a valid operation.</source>
        <target state="new">Setting the {0} property of a shared row is not a valid operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_LinkColumnActiveLinkColorDescr">
        <source>The color used to display an active link within cells in the column. </source>
        <target state="new">The color used to display an active link within cells in the column. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_LinkColumnLinkBehaviorDescr">
        <source>A value that represents the behavior of links within cells in the column.</source>
        <target state="new">A value that represents the behavior of links within cells in the column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_LinkColumnLinkColorDescr">
        <source>The color used to display an unselected link within cells in the column.</source>
        <target state="new">The color used to display an unselected link within cells in the column.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_LinkColumnTextDescr">
        <source>The link text displayed in all of the column's cells.</source>
        <target state="new">The link text displayed in all of the column's cells.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_LinkColumnTrackVisitedStateDescr">
        <source>Indicates whether the link changes color if it has been visited.</source>
        <target state="new">Indicates whether the link changes color if it has been visited.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_LinkColumnUseColumnTextForLinkValueDescr">
        <source>Indicates whether the DataGridViewLinkColumn.Text property value is displayed as the link text.</source>
        <target state="new">Indicates whether the DataGridViewLinkColumn.Text property value is displayed as the link text.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_LinkColumnVisitedLinkColorDescr">
        <source>The color used to display a link that has been previously visited.</source>
        <target state="new">The color used to display a link that has been previously visited.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_MultiSelectDescr">
        <source>Indicates whether the user is allowed to select more than one cell, row, or column of the DataGridView at a time.</source>
        <target state="new">Indicates whether the user is allowed to select more than one cell, row, or column of the DataGridView at a time.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_NeedAutoSizingCriteria">
        <source>Parameter {0} is not valid for this operation. This parameter value must specify a mode which AutoSizes.</source>
        <target state="new">Parameter {0} is not valid for this operation. This parameter value must specify a mode which AutoSizes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_NeedColumnAutoSizingCriteria">
        <source>Parameter {0} is not valid for this operation. It cannot be NotSet, None or Fill but needs to indicate a sizing criteria.</source>
        <target state="new">Parameter {0} is not valid for this operation. It cannot be NotSet, None or Fill but needs to indicate a sizing criteria.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_NewRowNeededDescr">
        <source>Occurs when the DataGridView.VirtualMode property of the DataGridView is true and the user navigates to the new row at the bottom of the DataGridView.</source>
        <target state="new">Occurs when the DataGridView.VirtualMode property of the DataGridView is true and the user navigates to the new row at the bottom of the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_NoCurrentCell">
        <source>Operation cannot be performed because there is no current cell. The CurrentCell property needs to be set first.</source>
        <target state="new">Operation cannot be performed because there is no current cell. The CurrentCell property needs to be set first.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_NoRoomForDisplayedColumns">
        <source>No room is available to display columns.</source>
        <target state="new">No room is available to display columns.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_NoRoomForDisplayedRows">
        <source>No room is available to display rows.</source>
        <target state="new">No room is available to display rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_OperationDisabledInVirtualMode">
        <source>Operation is not supported when VirtualMode is set to true.</source>
        <target state="new">Operation is not supported when VirtualMode is set to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_PreviousModesHasWrongLength">
        <source>PreviousModes array has the wrong length. Its length must be equal to the number of columns in the DataGridView control.</source>
        <target state="new">PreviousModes array has the wrong length. Its length must be equal to the number of columns in the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_PropertyMustBeZero">
        <source>Property {0} must be set to 0.</source>
        <target state="new">Property {0} must be set to 0.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ReadOnlyCollection">
        <source>Operation not supported. Collection is read-only.</source>
        <target state="new">Operation not supported. Collection is read-only.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ReadOnlyDescr">
        <source>Indicates whether the user can edit the cells of the DataGridView control.</source>
        <target state="new">Indicates whether the user can edit the cells of the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowAlreadyBelongsToDataGridView">
        <source>Row provided already belongs to a DataGridView control.</source>
        <target state="new">Row provided already belongs to a DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowContextMenuStripChangedDescr">
        <source>Occurs when DataGridViewRow.ContextMenuStrip changes.</source>
        <target state="new">Occurs when DataGridViewRow.ContextMenuStrip changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowContextMenuStripDescr">
        <source>The shortcut menu for the row.</source>
        <target state="new">The shortcut menu for the row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowContextMenuStripNeededDescr">
        <source>Occurs when the context menu strip is needed.</source>
        <target state="new">Occurs when the context menu strip is needed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowDefaultCellStyleChangedDescr">
        <source>Occurs when the value of the DataGridViewBand.DefaultCellStyle property for a row changes.</source>
        <target state="new">Occurs when the value of the DataGridViewBand.DefaultCellStyle property for a row changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowDefaultCellStyleDescr">
        <source>The default cell style to be applied to the DataGridViewRow if no other style is set.</source>
        <target state="new">The default cell style to be applied to the DataGridViewRow if no other style is set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowDirtyStateNeededDescr">
        <source>Occurs when the DataGridView.VirtualMode property of the DataGridView control is true and the DataGridView needs to determine whether the current row has uncommitted changes.</source>
        <target state="new">Occurs when the DataGridView.VirtualMode property of the DataGridView control is true and the DataGridView needs to determine whether the current row has uncommitted changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowDividerDoubleClickDescr">
        <source>Occurs when the user double-clicks the divider between two rows.</source>
        <target state="new">Occurs when the user double-clicks the divider between two rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowDividerHeightChangedDescr">
        <source>Occurs when the DataGridViewRow.DividerHeight property changes. </source>
        <target state="new">Occurs when the DataGridViewRow.DividerHeight property changes. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowDividerHeightDescr">
        <source>The height of the row divider in pixels.</source>
        <target state="new">The height of the row divider in pixels.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowDoesNotBelongToDataGridView">
        <source>Row provided does not belong to this DataGridView control.</source>
        <target state="new">Row provided does not belong to this DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowDoesNotYetBelongToDataGridView">
        <source>Operation can only be performed on rows that belong to a DataGridView control.</source>
        <target state="new">Operation can only be performed on rows that belong to a DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowEnterDescr">
        <source>Occurs when a row receives input focus and becomes the current row.</source>
        <target state="new">Occurs when a row receives input focus and becomes the current row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowErrorTextChangedDescr">
        <source>Occurs when the DataGridViewRow.ErrorText property of a row changes.</source>
        <target state="new">Occurs when the DataGridViewRow.ErrorText property of a row changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowErrorTextDescr">
        <source>The error message text for row-level errors.</source>
        <target state="new">The error message text for row-level errors.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowErrorTextNeededDescr">
        <source>Occurs when the DataGridView.VirtualMode property of the DataGridView control is true and the DataGridViewRow.ErrorText property for a row requires a value.</source>
        <target state="new">Occurs when the DataGridView.VirtualMode property of the DataGridView control is true and the DataGridViewRow.ErrorText property for a row requires a value.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeaderCellAccDefaultAction">
        <source>Press to select row</source>
        <target state="new">Press to select row</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeaderCellChangedDescr">
        <source>Occurs when the user changes the contents of a row header cell.</source>
        <target state="new">Occurs when the user changes the contents of a row header cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeaderMouseClickDescr">
        <source>Occurs when the user clicks within the boundaries of a row header.</source>
        <target state="new">Occurs when the user clicks within the boundaries of a row header.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeaderMouseDoubleClickDescr">
        <source>Occurs when a row header is double-clicked.</source>
        <target state="new">Occurs when a row header is double-clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeadersBorderStyleChangedDescr">
        <source>Occurs when the DataGridView.RowHeadersBorderStyle property changes.</source>
        <target state="new">Occurs when the DataGridView.RowHeadersBorderStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeadersBorderStyleDescr">
        <source>The border style of the row header cells.</source>
        <target state="new">The border style of the row header cells.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeadersCannotBeInvisible">
        <source>Row headers cannot be made invisible because the DataGridView control includes the row headers in its AutoSize mode.</source>
        <target state="new">Row headers cannot be made invisible because the DataGridView control includes the row headers in its AutoSize mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeadersDefaultCellStyleDescr">
        <source>The default style applied to the row header cells.</source>
        <target state="new">The default style applied to the row header cells.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeadersWidthDescr">
        <source>The width, in pixels, of the column that contains the row headers.</source>
        <target state="new">The width, in pixels, of the column that contains the row headers.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeadersWidthSizeModeChangedDescr">
        <source>Occurs when the value of the RowHeadersWidthSizeMode property changes.</source>
        <target state="new">Occurs when the value of the RowHeadersWidthSizeMode property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeadersWidthSizeModeDescr">
        <source>Determines the behavior for adjusting the row headers width.</source>
        <target state="new">Determines the behavior for adjusting the row headers width.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeightChangedDescr">
        <source>Occurs when the value of the DataGridViewRow.Height property for a row changes.</source>
        <target state="new">Occurs when the value of the DataGridViewRow.Height property for a row changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeightDescr">
        <source>The current height of the row.</source>
        <target state="new">The current height of the row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeightInfoNeededDescr">
        <source>Occurs when information about row height is requested. </source>
        <target state="new">Occurs when information about row height is requested. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowHeightInfoPushedDescr">
        <source>Occurs when the user changes the height of a row.</source>
        <target state="new">Occurs when the user changes the height of a row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowLeaveDescr">
        <source>Occurs when a row loses input focus and is no longer the current row.</source>
        <target state="new">Occurs when a row loses input focus and is no longer the current row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowMinimumHeightChangedDescr">
        <source>Occurs when the value of the DataGridViewRow.MinimumHeight property for a row changes.</source>
        <target state="new">Occurs when the value of the DataGridViewRow.MinimumHeight property for a row changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowMinimumHeightDescr">
        <source>The minimum height of the row.</source>
        <target state="new">The minimum height of the row.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowMustBeUnshared">
        <source>Row provided must be unshared first.</source>
        <target state="new">Row provided must be unshared first.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowPostPaintDescr">
        <source>Event raised to perform row level painting, after all cell painting has occurred.</source>
        <target state="new">Event raised to perform row level painting, after all cell painting has occurred.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowPrePaintDescr">
        <source>Event raised to perform row level painting, before any cell painting has occurred.</source>
        <target state="new">Event raised to perform row level painting, before any cell painting has occurred.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowReadOnlyDescr">
        <source>Indicates whether the row is read-only.</source>
        <target state="new">Indicates whether the row is read-only.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowResizableDescr">
        <source>Indicates whether users can resize the row or indicates that the behavior is inherited from the DataGridView.AllowUserToResizeRows property.</source>
        <target state="new">Indicates whether users can resize the row or indicates that the behavior is inherited from the DataGridView.AllowUserToResizeRows property.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowStateChangedDescr">
        <source>Occurs when a row changes state, such as losing or gaining input focus.</source>
        <target state="new">Occurs when a row changes state, such as losing or gaining input focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowTemplateDescr">
        <source>Identifies the template row whose characteristics are used as the basis for all new implicitly added rows.</source>
        <target state="new">Identifies the template row whose characteristics are used as the basis for all new implicitly added rows.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowUnsharedDescr">
        <source>Occurs when a row's state changes from shared to unshared.</source>
        <target state="new">Occurs when a row's state changes from shared to unshared.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowValidatedDescr">
        <source>Occurs after a row has finished validating.</source>
        <target state="new">Occurs after a row has finished validating.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowValidatingDescr">
        <source>Occurs when a row is validating.</source>
        <target state="new">Occurs when a row is validating.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowsAddedDescr">
        <source>Event raised when one or more rows are added to the rows collection.</source>
        <target state="new">Event raised when one or more rows are added to the rows collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowsDefaultCellStyleDescr">
        <source>The default style applied to the row cells of the DataGridView.</source>
        <target state="new">The default style applied to the row cells of the DataGridView.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_RowsRemovedDescr">
        <source>Event raised when one or more rows are removed from the rows collection.</source>
        <target state="new">Event raised when one or more rows are removed from the rows collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ScrollBarsDescr">
        <source>The type of scroll bars to display for the DataGridView control.</source>
        <target state="new">The type of scroll bars to display for the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ScrollDescr">
        <source>Event raised when the grid scrolls horizontally or vertically. Use the ScrollEventArgs.Orientation to determine the direction scrolled.</source>
        <target state="new">Event raised when the grid scrolls horizontally or vertically. Use the ScrollEventArgs.Orientation to determine the direction scrolled.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_SelectionChangedDescr">
        <source>Occurs when the current selection changes.</source>
        <target state="new">Occurs when the current selection changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_SelectionModeAndSortModeClash">
        <source>DataGridView control's SelectionMode cannot be set to {0} while it has a column with SortMode set to DataGridViewColumnSortMode.Automatic.</source>
        <target state="new">DataGridView control's SelectionMode cannot be set to {0} while it has a column with SortMode set to DataGridViewColumnSortMode.Automatic.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_SelectionModeDescr">
        <source>Indicates how the cells of the DataGridView can be selected.</source>
        <target state="new">Indicates how the cells of the DataGridView can be selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_SelectionModeReset">
        <source>{0} The SelectionMode property was reset to its default value {1}.</source>
        <target state="new">{0} The SelectionMode property was reset to its default value {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_SetCurrentCellAddressCoreNotReentrant">
        <source>Operation is not valid because it results in a reentrant call to the SetCurrentCellAddressCore function.</source>
        <target state="new">Operation is not valid because it results in a reentrant call to the SetCurrentCellAddressCore function.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ShowCellErrorsDescr">
        <source>Indicates whether to show cell errors.</source>
        <target state="new">Indicates whether to show cell errors.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ShowCellToolTipsDescr">
        <source>Indicates whether or not ToolTips will show when the mouse pointer pauses on a cell.</source>
        <target state="new">Indicates whether or not ToolTips will show when the mouse pointer pauses on a cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ShowEditingIconDescr">
        <source>Indicates whether or not the editing glyph is visible in the row header of the cell being edited.</source>
        <target state="new">Indicates whether or not the editing glyph is visible in the row header of the cell being edited.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_ShowRowErrorsDescr">
        <source>Indicates whether row headers will display error glyphs for each row that contains a data entry error. </source>
        <target state="new">Indicates whether row headers will display error glyphs for each row that contains a data entry error. </target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_SizeTooLarge">
        <source>Width and height of the control cannot be set to values larger than {0}.</source>
        <target state="new">Width and height of the control cannot be set to values larger than {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_SortCompareDescr">
        <source>Occurs when the DataGridView compares two cell values to perform a sort operation.</source>
        <target state="new">Occurs when the DataGridView compares two cell values to perform a sort operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_SortedDescr">
        <source>Occurs when the DataGridView compares two cell values to perform a sort operation.</source>
        <target state="new">Occurs when the DataGridView compares two cell values to perform a sort operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_StandardTabDescr">
        <source>Indicates whether the TAB key moves the focus to the next control in the tab order rather than moving focus to the next cell in the control.</source>
        <target state="new">Indicates whether the TAB key moves the focus to the next control in the tab order rather than moving focus to the next cell in the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_TextBoxColumnMaxInputLengthDescr">
        <source>Specifies the maximum number of characters that can be entered into the text box.</source>
        <target state="new">Specifies the maximum number of characters that can be entered into the text box.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_TransparentColor">
        <source>Color '{0}' cannot be set to a transparent color.</source>
        <target state="new">Color '{0}' cannot be set to a transparent color.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_UserAddedRowDescr">
        <source>Occurs when the user has finished adding a row to the DataGridView control.</source>
        <target state="new">Occurs when the user has finished adding a row to the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_UserDeletedRowDescr">
        <source>Occurs when the user has finished deleting a row from the DataGridView control.</source>
        <target state="new">Occurs when the user has finished deleting a row from the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_UserDeletingRowDescr">
        <source>Occurs when the user deletes a row from the DataGridView control.</source>
        <target state="new">Occurs when the user deletes a row from the DataGridView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_WeightSumCannotExceedLongMaxValue">
        <source>Sum of the columns' FillWeight values cannot exceed {0}.</source>
        <target state="new">Sum of the columns' FillWeight values cannot exceed {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridView_WrongType">
        <source>Provided {0} must be of type {1} or derive from it.</source>
        <target state="new">Provided {0} must be of type {1} or derive from it.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridVisibleColumnCountDescr">
        <source>Returns the count of visible columns in the grid.</source>
        <target state="new">Returns the count of visible columns in the grid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataGridVisibleRowCountDescr">
        <source>Returns the count of visible rows in the grid.</source>
        <target state="new">Returns the count of visible rows in the grid.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataObjectDibNotSupported">
        <source>Bitmap object does not directly support the device-independent bitmap format.  Either specify auto-conversion or perform a SetData with the Bitmap data format.</source>
        <target state="new">Bitmap object does not directly support the device-independent bitmap format.  Either specify auto-conversion or perform a SetData with the Bitmap data format.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataSourceDataMemberPropNotFound">
        <source>DataMember property '{0}' cannot be found on the DataSource.</source>
        <target state="new">DataMember property '{0}' cannot be found on the DataSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataSourceLocksItems">
        <source>Items collection cannot be modified when the DataSource property is set.</source>
        <target state="new">Items collection cannot be modified when the DataSource property is set.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataStreamWrite">
        <source>Requested number of bytes did not get written to the underlying IStream implementation.</source>
        <target state="new">Requested number of bytes did not get written to the underlying IStream implementation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerCalendarFontDescr">
        <source>The font used to display the calendar.</source>
        <target state="new">The font used to display the calendar.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerCalendarForeColorDescr">
        <source>The color used to display text within a month.</source>
        <target state="new">The color used to display text within a month.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerCalendarMonthBackgroundDescr">
        <source>The background color displayed within the month.</source>
        <target state="new">The background color displayed within the month.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerCalendarTitleBackColorDescr">
        <source>The background color displayed in the calendar's title.</source>
        <target state="new">The background color displayed in the calendar's title.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerCalendarTitleForeColorDescr">
        <source>The color used to display text within the calendar's title.</source>
        <target state="new">The color used to display text within the calendar's title.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerCalendarTrailingForeColorDescr">
        <source>The color used to display header day and trailing day text. Header and trailing days are the days from the previous and following months that appear on the current month calendar.</source>
        <target state="new">The color used to display header day and trailing day text. Header and trailing days are the days from the previous and following months that appear on the current month calendar.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerCheckedDescr">
        <source>When ShowSelectBox is true, determines if the check box is checked, indicating that the user has selected a value.</source>
        <target state="new">When ShowSelectBox is true, determines if the check box is checked, indicating that the user has selected a value.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerCustomFormatDescr">
        <source>The custom format string used to format the date and/or time displayed in the control.</source>
        <target state="new">The custom format string used to format the date and/or time displayed in the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerDropDownAlignDescr">
        <source>Controls how the month drop-down is aligned to the DateTimePicker. Can be LEFT or RIGHT.</source>
        <target state="new">Controls how the month drop-down is aligned to the DateTimePicker. Can be LEFT or RIGHT.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerFormatDescr">
        <source>Determines whether dates and times are displayed using standard or custom formatting.</source>
        <target state="new">Determines whether dates and times are displayed using standard or custom formatting.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerLocalizedControlType">
        <source>date and time picker</source>
        <target state="new">date and time picker</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerMaxDate">
        <source>DateTimePicker does not support dates after {0}.</source>
        <target state="new">DateTimePicker does not support dates after {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerMaxDateDescr">
        <source>The maximum date that can be selected.</source>
        <target state="new">The maximum date that can be selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerMinDate">
        <source>DateTimePicker does not support dates before {0}.</source>
        <target state="new">DateTimePicker does not support dates before {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerMinDateDescr">
        <source>The minimum date that can be selected.</source>
        <target state="new">The minimum date that can be selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerOnCloseUpDescr">
        <source>Occurs when the user is finished selecting a date from the drop-down calendar.</source>
        <target state="new">Occurs when the user is finished selecting a date from the drop-down calendar.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerOnDropDownDescr">
        <source>Occurs when the drop-down calendar is about to drop.</source>
        <target state="new">Occurs when the drop-down calendar is about to drop.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerOnFormatChangedDescr">
        <source>Event raised when the value of the Format property is changed on DateTimePicker.</source>
        <target state="new">Event raised when the value of the Format property is changed on DateTimePicker.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerShowNoneDescr">
        <source>Determines whether a check box is displayed in the control. When the box is unchecked, no value is selected.</source>
        <target state="new">Determines whether a check box is displayed in the control. When the box is unchecked, no value is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerShowUpDownDescr">
        <source>Indicates whether a spin box rather than a drop-down calendar is displayed for modifying the control value.</source>
        <target state="new">Indicates whether a spin box rather than a drop-down calendar is displayed for modifying the control value.</target>
        <note />
      </trans-unit>
      <trans-unit id="DateTimePickerValueDescr">
        <source>The current date/time value for this control.</source>
        <target state="new">The current date/time value for this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DebuggingExceptionOnly">
        <source>{0} This exception is only raised if a debugger is attached to the process.</source>
        <target state="new">{0} This exception is only raised if a debugger is attached to the process.</target>
        <note />
      </trans-unit>
      <trans-unit id="DefManifestNotFound">
        <source>Default manifest file required to enable visual styles cannot be found.</source>
        <target state="new">Default manifest file required to enable visual styles cannot be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionBindingNavigator">
        <source>Provides a user interface for navigation and manipulation of data bound to controls on a form.</source>
        <target state="new">Provides a user interface for navigation and manipulation of data bound to controls on a form.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionBindingSource">
        <source>Encapsulates a data source for a form and provides navigation, filtering, sorting, and updating capabilities.</source>
        <target state="new">Encapsulates a data source for a form and provides navigation, filtering, sorting, and updating capabilities.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionButton">
        <source>Raises an event when the user clicks it.</source>
        <target state="new">Raises an event when the user clicks it.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionCheckBox">
        <source>Enables the user to select or clear the associated option.</source>
        <target state="new">Enables the user to select or clear the associated option.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionCheckedListBox">
        <source>Displays a list of items with a check box on the left side of each item.</source>
        <target state="new">Displays a list of items with a check box on the left side of each item.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionColorDialog">
        <source>Displays available colors along with controls that enable the user to define custom colors.</source>
        <target state="new">Displays available colors along with controls that enable the user to define custom colors.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionComboBox">
        <source>Displays an editable text box with a drop-down list of permitted values.</source>
        <target state="new">Displays an editable text box with a drop-down list of permitted values.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionContextMenuStrip">
        <source>Displays a shortcut menu when the user right-clicks the associated control.</source>
        <target state="new">Displays a shortcut menu when the user right-clicks the associated control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionDataGridView">
        <source>Displays rows and columns of data in a grid you can customize.</source>
        <target state="new">Displays rows and columns of data in a grid you can customize.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionDateTimePicker">
        <source>Enables the user to select a date and time, and to display that date and time in a specified format.</source>
        <target state="new">Enables the user to select a date and time, and to display that date and time in a specified format.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionDomainUpDown">
        <source>Displays a single string value that the user selected from a list of items by clicking up and down buttons in the control.</source>
        <target state="new">Displays a single string value that the user selected from a list of items by clicking up and down buttons in the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionErrorProvider">
        <source>Provides a user interface to indicate to the user that a control on a form has an error associated with it.</source>
        <target state="new">Provides a user interface to indicate to the user that a control on a form has an error associated with it.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionFlowLayoutPanel">
        <source>Handles the layout of its components and arranges them in a flow layout automatically.</source>
        <target state="new">Handles the layout of its components and arranges them in a flow layout automatically.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionFolderBrowserDialog">
        <source>Displays a dialog box that prompts the user to select a folder.</source>
        <target state="new">Displays a dialog box that prompts the user to select a folder.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionFontDialog">
        <source>Displays a dialog box that prompts the user to choose a font from those installed on the local computer.</source>
        <target state="new">Displays a dialog box that prompts the user to choose a font from those installed on the local computer.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionGroupBox">
        <source>Displays a frame around a group of controls with an optional caption.</source>
        <target state="new">Displays a frame around a group of controls with an optional caption.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionHScrollBar">
        <source>Enables its parent component to scroll content horizontally. Unnecessary if the parent has an autoscroll attribute, and that attribute is enabled.</source>
        <target state="new">Enables its parent component to scroll content horizontally. Unnecessary if the parent has an autoscroll attribute, and that attribute is enabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionHelpProvider">
        <source>Provides pop-up or online Help for controls.</source>
        <target state="new">Provides pop-up or online Help for controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionImageList">
        <source>Manages a collection of images that are typically used by other controls such as ListView, TreeView, or ToolStrip.</source>
        <target state="new">Manages a collection of images that are typically used by other controls such as ListView, TreeView, or ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionLabel">
        <source>Provides run-time information or descriptive text for a control.</source>
        <target state="new">Provides run-time information or descriptive text for a control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionLinkLabel">
        <source>Displays a label control that supports hyperlink functionality, formatting, and tracking.</source>
        <target state="new">Displays a label control that supports hyperlink functionality, formatting, and tracking.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionListBox">
        <source>Displays a list from which the user can select items.</source>
        <target state="new">Displays a list from which the user can select items.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionListView">
        <source>Displays a collection of items in one of five different views.</source>
        <target state="new">Displays a collection of items in one of five different views.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionMaskedTextBox">
        <source>Uses a mask to distinguish between proper and improper user input.</source>
        <target state="new">Uses a mask to distinguish between proper and improper user input.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionMenuStrip">
        <source>Displays application commands and options grouped by functionality.</source>
        <target state="new">Displays application commands and options grouped by functionality.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionMonthCalendar">
        <source>Displays a monthly calendar from which the user can select a date.</source>
        <target state="new">Displays a monthly calendar from which the user can select a date.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionNotifyIcon">
        <source>Displays an icon in the notification area, on the right side of the Windows taskbar, during run time.</source>
        <target state="new">Displays an icon in the notification area, on the right side of the Windows taskbar, during run time.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionNumericUpDown">
        <source>Displays a single numeric value that the user can increment and decrement by clicking up and down buttons on the control.</source>
        <target state="new">Displays a single numeric value that the user can increment and decrement by clicking up and down buttons on the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionOpenFileDialog">
        <source>Displays a dialog box that prompts the user to open a file.</source>
        <target state="new">Displays a dialog box that prompts the user to open a file.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionPageSetupDialog">
        <source>Displays a dialog box that enables the user to change page-related print settings, including margins and paper orientation.</source>
        <target state="new">Displays a dialog box that enables the user to change page-related print settings, including margins and paper orientation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionPanel">
        <source>Enables you to group collections of controls.</source>
        <target state="new">Enables you to group collections of controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionPictureBox">
        <source>Displays an image.</source>
        <target state="new">Displays an image.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionPrintDialog">
        <source>Displays a dialog box that enables the user to select a printer and choose other print options such as the number of copies and page orientation.</source>
        <target state="new">Displays a dialog box that enables the user to select a printer and choose other print options such as the number of copies and page orientation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionPrintPreviewControl">
        <source>Represents only the portion of a print preview that shows the document being previewed. Does not contain any dialog boxes or buttons.</source>
        <target state="new">Represents only the portion of a print preview that shows the document being previewed. Does not contain any dialog boxes or buttons.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionPrintPreviewDialog">
        <source>Displays a dialog box that shows the user a preview of what the associated document will look like when printed.</source>
        <target state="new">Displays a dialog box that shows the user a preview of what the associated document will look like when printed.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionProgressBar">
        <source>Displays a bar that fills to indicate to the user the progress of an operation.</source>
        <target state="new">Displays a bar that fills to indicate to the user the progress of an operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionPropertyGrid">
        <source>Provides a user interface for browsing the properties of an object.</source>
        <target state="new">Provides a user interface for browsing the properties of an object.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionRadioButton">
        <source>Enables the user to select a single option from a group of choices when paired with other RadioButtons.</source>
        <target state="new">Enables the user to select a single option from a group of choices when paired with other RadioButtons.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionRichTextBox">
        <source>Provides advanced text entry and editing features such as character and paragraph formatting.</source>
        <target state="new">Provides advanced text entry and editing features such as character and paragraph formatting.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionSaveFileDialog">
        <source>Displays a dialog box that prompts the user to select a location for saving a file.</source>
        <target state="new">Displays a dialog box that prompts the user to select a location for saving a file.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionSplitContainer">
        <source>Divides a container's display area into two resizable panels to which you can add controls.</source>
        <target state="new">Divides a container's display area into two resizable panels to which you can add controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionSplitter">
        <source>Divides a container's display area into two areas which can be resized.</source>
        <target state="new">Divides a container's display area into two areas which can be resized.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionStatusStrip">
        <source>Displays information to the user about the object being viewed, the object's components, or the object's operation.</source>
        <target state="new">Displays information to the user about the object being viewed, the object's components, or the object's operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionTabControl">
        <source>Manages and displays to the user a related collection of tabs that can contain controls and components.</source>
        <target state="new">Manages and displays to the user a related collection of tabs that can contain controls and components.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionTableLayoutPanel">
        <source>Handles the layout of its components and arranges them in the format of a table automatically.</source>
        <target state="new">Handles the layout of its components and arranges them in the format of a table automatically.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionTextBox">
        <source>Enables the user to enter text, and provides multiline editing and password character masking.</source>
        <target state="new">Enables the user to enter text, and provides multiline editing and password character masking.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionTimer">
        <source>Component that raises an event at user defined intervals</source>
        <target state="new">Component that raises an event at user defined intervals</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionToolStrip">
        <source>Provides toolbars and other user interface elements that support many appearance options, and that support overflow and run-time item reordering.</source>
        <target state="new">Provides toolbars and other user interface elements that support many appearance options, and that support overflow and run-time item reordering.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionToolTip">
        <source>Displays information when the user moves the pointer over an associated control.</source>
        <target state="new">Displays information when the user moves the pointer over an associated control.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionTrackBar">
        <source>Enables the user to choose between a range of values by sliding a small bar along another bar.</source>
        <target state="new">Enables the user to choose between a range of values by sliding a small bar along another bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionTreeView">
        <source>Displays a hierarchical collection of labeled items to the user that optionally contain an image.</source>
        <target state="new">Displays a hierarchical collection of labeled items to the user that optionally contain an image.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionVScrollBar">
        <source>Enables its parent component to scroll content vertically. Unnecessary if the parent has an autoscroll attribute, and the attribute is enabled.</source>
        <target state="new">Enables its parent component to scroll content vertically. Unnecessary if the parent has an autoscroll attribute, and the attribute is enabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="DescriptionWebBrowser">
        <source>Enables the user to browse Web pages inside your form.</source>
        <target state="new">Enables the user to browse Web pages inside your form.</target>
        <note />
      </trans-unit>
      <trans-unit id="DispInvokeFailed">
        <source>Operation {0} on the component did not succeed, generating the error code 0x{1:X}.</source>
        <target state="new">Operation {0} on the component did not succeed, generating the error code 0x{1:X}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DomainUpDownItemsDescr">
        <source>The allowable values of the DomainUpDown.</source>
        <target state="new">The allowable values of the DomainUpDown.</target>
        <note />
      </trans-unit>
      <trans-unit id="DomainUpDownOnSelectedItemChangedDescr">
        <source>Occurs when the selected item in the control changes.</source>
        <target state="new">Occurs when the selected item in the control changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="DomainUpDownSelectedIndexDescr">
        <source>The index of the selected domain value.</source>
        <target state="new">The index of the selected domain value.</target>
        <note />
      </trans-unit>
      <trans-unit id="DomainUpDownSelectedItemDescr">
        <source>The currently selected domain value.</source>
        <target state="new">The currently selected domain value.</target>
        <note />
      </trans-unit>
      <trans-unit id="DomainUpDownSortedDescr">
        <source>Controls whether items in the domain list are sorted.</source>
        <target state="new">Controls whether items in the domain list are sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="DomainUpDownWrapDescr">
        <source>Indicates whether values wrap around at either end of the item list.</source>
        <target state="new">Indicates whether values wrap around at either end of the item list.</target>
        <note />
      </trans-unit>
      <trans-unit id="DragDropRegFailed">
        <source>DragDrop registration did not succeed.</source>
        <target state="new">DragDrop registration did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorBadInputLanguage">
        <source>inputLanguage is not recognized by the system.</source>
        <target state="new">inputLanguage is not recognized by the system.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorCollectionFull">
        <source>Collection has reached its maximum capacity.</source>
        <target state="new">Collection has reached its maximum capacity.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorCreatingHandle">
        <source>Error creating window handle.</source>
        <target state="new">Error creating window handle.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorNoMarshalingThread">
        <source>Invoke or BeginInvoke cannot be called on a control until the window handle has been created.</source>
        <target state="new">Invoke or BeginInvoke cannot be called on a control until the window handle has been created.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorPropertyPageFailed">
        <source>Component did not succeed to show the property page.</source>
        <target state="new">Component did not succeed to show the property page.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderBlinkRateDescr">
        <source>The rate in milliseconds at which the error icon blinks.</source>
        <target state="new">The rate in milliseconds at which the error icon blinks.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderBlinkStyleDescr">
        <source>Controls whether the error icon blinks when an error is set.</source>
        <target state="new">Controls whether the error icon blinks when an error is set.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderContainerControlDescr">
        <source>The parent control, usually the form, that contains the data-bound controls on which the ErrorProvider can display error icons.</source>
        <target state="new">The parent control, usually the form, that contains the data-bound controls on which the ErrorProvider can display error icons.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderDataMemberDescr">
        <source>Indicates the sub-list of data from the DataSource to bind errors against.</source>
        <target state="new">Indicates the sub-list of data from the DataSource to bind errors against.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderDataSourceDescr">
        <source>Indicates the source of data to bind errors against.</source>
        <target state="new">Indicates the source of data to bind errors against.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderErrorDescr">
        <source>The error description for a control.</source>
        <target state="new">The error description for a control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderIconAlignmentDescr">
        <source>The location of the error icon relative to the control.</source>
        <target state="new">The location of the error icon relative to the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderIconDescr">
        <source>The icon used to indicate an error.</source>
        <target state="new">The icon used to indicate an error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorProviderIconPaddingDescr">
        <source>The number of pixels to leave between the error icon and the control.</source>
        <target state="new">The number of pixels to leave between the error icon and the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorSettingWindowRegion">
        <source>Error occurred while trying to set the window region for the MDI client.</source>
        <target state="new">Error occurred while trying to set the window region for the MDI client.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorTypeConverterFailed">
        <source>Component did not succeed to show the editor.</source>
        <target state="new">Component did not succeed to show the editor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgCancel">
        <source>Cancel</source>
        <target state="new">Cancel</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgCaption">
        <source>Microsoft .NET Framework</source>
        <target state="new">Microsoft .NET Framework</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgCaption2">
        <source>{0}</source>
        <target state="new">{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgContinue">
        <source>&amp;Continue</source>
        <target state="new">&amp;Continue</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgContinueErrorText">
        <source>Unhandled exception has occurred in a component in your application. If you click Continue, the application will ignore this error and attempt to continue.\r\n\r\n{0}.</source>
        <target state="new">Unhandled exception has occurred in a component in your application. If you click Continue, the application will ignore this error and attempt to continue.\r\n\r\n{0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgDetailsText">
        <source>Error Text</source>
        <target state="new">Error Text</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgErrorText">
        <source>Unhandled exception has occurred in your application. If you click Continue, the application will ignore this error and attempt to continue. If you click Quit, the application will close immediately.\r\n\r\n{0}.</source>
        <target state="new">Unhandled exception has occurred in your application. If you click Continue, the application will ignore this error and attempt to continue. If you click Quit, the application will close immediately.\r\n\r\n{0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgHelp">
        <source>&amp;Help</source>
        <target state="new">&amp;Help</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgExceptionSection">
        <source>Exception Text</source>
        <target state="new">Exception Text</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgFooterNonSwitchable">
        <source>Application does not support Windows Forms just-in-time (JIT)\r\ndebugging. Contact the application author for more\r\ninformation.\r\n</source>
        <target state="new">Application does not support Windows Forms just-in-time (JIT)\r\ndebugging. Contact the application author for more\r\ninformation.\r\n</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgHeaderNonSwitchable">
        <source>Application does not support just-in-time (JIT)\r\ndebugging. See the end of this message for details.\r\n</source>
        <target state="new">Application does not support just-in-time (JIT)\r\ndebugging. See the end of this message for details.\r\n</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgHeaderSwitchable">
        <source>See the end of this message for details on invoking \r\njust-in-time (JIT) debugging instead of this dialog box.\r\n</source>
        <target state="new">See the end of this message for details on invoking \r\njust-in-time (JIT) debugging instead of this dialog box.\r\n</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgJITDebuggingSection">
        <source>JIT Debugging</source>
        <target state="new">JIT Debugging</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgLoadedAssembliesEntry">
        <source>{0}\r\n    Assembly Version: {1}\r\n    Win32 Version: {2}\r\n    CodeBase: {3}\r\n</source>
        <target state="new">{0}\r\n    Assembly Version: {1}\r\n    Win32 Version: {2}\r\n    CodeBase: {3}\r\n</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgLoadedAssembliesSection">
        <source>Loaded Assemblies</source>
        <target state="new">Loaded Assemblies</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgSectionSeperator">
        <source>\r\n************** {0} **************\r\n</source>
        <target state="new">\r\n************** {0} **************\r\n</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgMsgSeperator">
        <source>----------------------------------------\r\n</source>
        <target state="new">----------------------------------------\r\n</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgOk">
        <source>OK</source>
        <target state="new">OK</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgQuit">
        <source>&amp;Quit</source>
        <target state="new">&amp;Quit</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgSecurityContinueErrorText">
        <source>Application attempted to perform an operation not allowed by the security policy. To grant this application the required permission, contact your system administrator, or use the Microsoft .NET Framework Configuration tool.\r\n\r\nIf you click Continue, the application will ignore this error and attempt to continue.\r\n\r\n{1}.</source>
        <target state="new">Application attempted to perform an operation not allowed by the security policy. To grant this application the required permission, contact your system administrator, or use the Microsoft .NET Framework Configuration tool.\r\n\r\nIf you click Continue, the application will ignore this error and attempt to continue.\r\n\r\n{1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgSecurityErrorText">
        <source>Application attempted to perform an operation not allowed by the security policy. To grant this application the required permission, contact your system administrator, or use the Microsoft .NET Framework Configuration tool.\r\n\r\nIf you click Continue, the application will ignore this error and attempt to continue. If you click Quit, the application will close immediately.\r\n\r\n{1}.</source>
        <target state="new">Application attempted to perform an operation not allowed by the security policy. To grant this application the required permission, contact your system administrator, or use the Microsoft .NET Framework Configuration tool.\r\n\r\nIf you click Continue, the application will ignore this error and attempt to continue. If you click Quit, the application will close immediately.\r\n\r\n{1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgShowDetails">
        <source>&amp;Details</source>
        <target state="new">&amp;Details</target>
        <note />
      </trans-unit>
      <trans-unit id="ExDlgWarningText">
        <source>{0}.</source>
        <target state="new">{0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExceptionCreatingCompEditorControl">
        <source>ComponentEditorControl: {0} cannot be created.</source>
        <target state="new">ComponentEditorControl: {0} cannot be created.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExceptionCreatingObject">
        <source>Exception occurred while trying to create an instance of {0}. The exception was "{1}".</source>
        <target state="new">Exception occurred while trying to create an instance of {0}. The exception was "{1}".</target>
        <note />
      </trans-unit>
      <trans-unit id="ExternalException">
        <source>External exception</source>
        <target state="new">External exception</target>
        <note />
      </trans-unit>
      <trans-unit id="FDFileNamesDescr">
        <source>Retrieves the file names of all selected files in the dialog box.</source>
        <target state="new">Retrieves the file names of all selected files in the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDaddExtensionDescr">
        <source>Controls whether extensions are automatically added to file names.</source>
        <target state="new">Controls whether extensions are automatically added to file names.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDcheckFileExistsDescr">
        <source>Checks that the specified file exists before returning from the dialog.</source>
        <target state="new">Checks that the specified file exists before returning from the dialog.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDcheckPathExistsDescr">
        <source>Checks that the specified path exists before returning from the dialog.</source>
        <target state="new">Checks that the specified path exists before returning from the dialog.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDdefaultExtDescr">
        <source>The default file name extension. If the user types a file name, this extension is added at the end of the file name if one is not specified.</source>
        <target state="new">The default file name extension. If the user types a file name, this extension is added at the end of the file name if one is not specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDdereferenceLinksDescr">
        <source>Controls whether shortcuts are dereferenced before returning from the dialog.</source>
        <target state="new">Controls whether shortcuts are dereferenced before returning from the dialog.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDfileNameDescr">
        <source>The file first shown in the dialog box, or the last one selected by the user.</source>
        <target state="new">The file first shown in the dialog box, or the last one selected by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDfileOkDescr">
        <source>Occurs when the user clicks the Open or Save button in the dialog box.</source>
        <target state="new">Occurs when the user clicks the Open or Save button in the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDfilterDescr">
        <source>The file filters to display in the dialog box, for example, "C# files|*.cs|All files|*.*".</source>
        <target state="new">The file filters to display in the dialog box, for example, "C# files|*.cs|All files|*.*".</target>
        <note />
      </trans-unit>
      <trans-unit id="FDfilterIndexDescr">
        <source>The index of the file filter selected in the dialog box. The first item has an index of 1.</source>
        <target state="new">The index of the file filter selected in the dialog box. The first item has an index of 1.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDinitialDirDescr">
        <source>The initial directory for the dialog box.</source>
        <target state="new">The initial directory for the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDrestoreDirectoryDescr">
        <source>Controls whether the dialog box restores the current directory before closing.</source>
        <target state="new">Controls whether the dialog box restores the current directory before closing.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDshowHelpDescr">
        <source>Enables the Help button.</source>
        <target state="new">Enables the Help button.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDsupportMultiDottedExtensionsDescr">
        <source>Controls whether multi-dotted extensions are supported.</source>
        <target state="new">Controls whether multi-dotted extensions are supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDtitleDescr">
        <source>The string to display in the title bar of the dialog box.</source>
        <target state="new">The string to display in the title bar of the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FDvalidateNamesDescr">
        <source>Controls whether the dialog box ensures that file names do not contain invalid characters or sequences.</source>
        <target state="new">Controls whether the dialog box ensures that file names do not contain invalid characters or sequences.</target>
        <note />
      </trans-unit>
      <trans-unit id="FileDialogBufferTooSmall">
        <source>Too many files selected. Select fewer files and try again.</source>
        <target state="new">Too many files selected. Select fewer files and try again.</target>
        <note />
      </trans-unit>
      <trans-unit id="FileDialogCreatePrompt">
        <source>File {0} does not exist.\r\nDo you want to create it?</source>
        <target state="new">File {0} does not exist.\r\nDo you want to create it?</target>
        <note />
      </trans-unit>
      <trans-unit id="FileDialogFileNotFound">
        <source>File {0} does not exist.\r\nVerify that the correct file name was given.</source>
        <target state="new">File {0} does not exist.\r\nVerify that the correct file name was given.</target>
        <note />
      </trans-unit>
      <trans-unit id="FileDialogInvalidFileName">
        <source>File {0} is not a valid file name.</source>
        <target state="new">File {0} is not a valid file name.</target>
        <note />
      </trans-unit>
      <trans-unit id="FileDialogInvalidFilter">
        <source>Filter string you provided is not valid. The filter string must contain a description of the filter, followed by the vertical bar (|) and the filter pattern. The strings for different filtering options must also be separated by the vertical bar. Example: "Text files (*.txt)|*.txt|All files (*.*)|*.*"</source>
        <target state="new">Filter string you provided is not valid. The filter string must contain a description of the filter, followed by the vertical bar (|) and the filter pattern. The strings for different filtering options must also be separated by the vertical bar. Example: "Text files (*.txt)|*.txt|All files (*.*)|*.*"</target>
        <note />
      </trans-unit>
      <trans-unit id="FileDialogInvalidFilterIndex">
        <source>Filter index not valid.</source>
        <target state="new">Filter index not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="FileDialogOverwritePrompt">
        <source>File {0} already exists.\r\nDo you want to replace it?</source>
        <target state="new">File {0} already exists.\r\nDo you want to replace it?</target>
        <note />
      </trans-unit>
      <trans-unit id="FileDialogSubLassFailure">
        <source>Attempt to subclass a list box did not succeed. Not enough memory is available.</source>
        <target state="new">Attempt to subclass a list box did not succeed. Not enough memory is available.</target>
        <note />
      </trans-unit>
      <trans-unit id="FilterRequiresIBindingListView">
        <source>Can only set filter on an IBindingListView where SupportsFiltering is true.</source>
        <target state="new">Can only set filter on an IBindingListView where SupportsFiltering is true.</target>
        <note />
      </trans-unit>
      <trans-unit id="FindKeyMayNotBeEmptyOrNull">
        <source>Key specified was either empty or null.</source>
        <target state="new">Key specified was either empty or null.</target>
        <note />
      </trans-unit>
      <trans-unit id="FlowPanelFlowDirectionDescr">
        <source>Specifies the direction in which controls are laid out.</source>
        <target state="new">Specifies the direction in which controls are laid out.</target>
        <note />
      </trans-unit>
      <trans-unit id="FlowPanelWrapContentsDescr">
        <source>Indicates whether contents are wrapped or clipped at the control boundary.</source>
        <target state="new">Indicates whether contents are wrapped or clipped at the control boundary.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDallowScriptChangeDescr">
        <source>Controls whether the character set of the font can be changed.</source>
        <target state="new">Controls whether the character set of the font can be changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDallowSimulationsDescr">
        <source>Controls whether GDI font simulations are allowed.</source>
        <target state="new">Controls whether GDI font simulations are allowed.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDallowVectorFontsDescr">
        <source>Controls whether vector fonts can be selected.</source>
        <target state="new">Controls whether vector fonts can be selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDallowVerticalFontsDescr">
        <source>Controls whether vertical fonts can be selected.</source>
        <target state="new">Controls whether vertical fonts can be selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDapplyDescr">
        <source>Occurs when the user clicks the Apply button.</source>
        <target state="new">Occurs when the user clicks the Apply button.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDcolorDescr">
        <source>The color selected in the dialog box.</source>
        <target state="new">The color selected in the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDfixedPitchOnlyDescr">
        <source>Controls whether only fixed pitch fonts can be selected.</source>
        <target state="new">Controls whether only fixed pitch fonts can be selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDfontDescr">
        <source>The font selected in the dialog box.</source>
        <target state="new">The font selected in the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDfontMustExistDescr">
        <source>Controls whether to report an error if the selected font does not exist.</source>
        <target state="new">Controls whether to report an error if the selected font does not exist.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDmaxSizeDescr">
        <source>The maximum point size that can be Selected (or zero to disable).</source>
        <target state="new">The maximum point size that can be Selected (or zero to disable).</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDminSizeDescr">
        <source>The minimum point size that can be Selected (or zero to disable).</source>
        <target state="new">The minimum point size that can be Selected (or zero to disable).</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDscriptsOnlyDescr">
        <source>Controls whether to exclude OEM and Symbol character sets.</source>
        <target state="new">Controls whether to exclude OEM and Symbol character sets.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDshowApplyDescr">
        <source>Controls whether to show the Apply button.</source>
        <target state="new">Controls whether to show the Apply button.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDshowColorDescr">
        <source>Controls whether to show a color choice.</source>
        <target state="new">Controls whether to show a color choice.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDshowEffectsDescr">
        <source>Controls whether to show the underline, strikeout, and font color selections.</source>
        <target state="new">Controls whether to show the underline, strikeout, and font color selections.</target>
        <note />
      </trans-unit>
      <trans-unit id="FnDshowHelpDescr">
        <source>Controls whether to show the Help button.</source>
        <target state="new">Controls whether to show the Help button.</target>
        <note />
      </trans-unit>
      <trans-unit id="FolderBrowserDialogDescription">
        <source>The string that is displayed above the tree view control in the dialog box. This string can be used to specify instructions to the user.</source>
        <target state="new">The string that is displayed above the tree view control in the dialog box. This string can be used to specify instructions to the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="FolderBrowserDialogNoRootFolder">
        <source>Unable to retrieve the root folder.</source>
        <target state="new">Unable to retrieve the root folder.</target>
        <note />
      </trans-unit>
      <trans-unit id="FolderBrowserDialogRootFolder">
        <source>The location of the root folder from which to start browsing. Only the specified folder and any subfolders that are beneath it will appear in the dialog box.</source>
        <target state="new">The location of the root folder from which to start browsing. Only the specified folder and any subfolders that are beneath it will appear in the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FolderBrowserDialogSelectedPath">
        <source>The path of the folder first selected in the dialog or the last one selected by the user.</source>
        <target state="new">The path of the folder first selected in the dialog or the last one selected by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="FolderBrowserDialogShowNewFolderButton">
        <source>Include the New Folder button in the dialog box.</source>
        <target state="new">Include the New Folder button in the dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FolderBrowserDialogUseDescriptionForTitle">
        <source>A value that indicates whether to use the value of the Description property as the dialog title for Vista style dialogs. This property has no effect on old style dialogs.</source>
        <target state="new">A value that indicates whether to use the value of the Description property as the dialog title for Vista style dialogs. This property has no effect on old style dialogs.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormAcceptButtonDescr">
        <source>The accept button of the form. If this is set, the button is 'clicked' whenever the user presses the 'ENTER' key.</source>
        <target state="new">The accept button of the form. If this is set, the button is 'clicked' whenever the user presses the 'ENTER' key.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormActiveMDIChildDescr">
        <source>The currently active MDI child form.</source>
        <target state="new">The currently active MDI child form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormAutoScaleDescr">
        <source>If set to true, the form will automatically scale with the screen font.</source>
        <target state="new">If set to true, the form will automatically scale with the screen font.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormAutoScrollDescr">
        <source>Indicates whether scroll bars automatically appear when the control contents are larger than its visible area.</source>
        <target state="new">Indicates whether scroll bars automatically appear when the control contents are larger than its visible area.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormAutoScrollMarginDescr">
        <source>The margin around controls during auto scroll.</source>
        <target state="new">The margin around controls during auto scroll.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormAutoScrollMinSizeDescr">
        <source>The minimum logical size for the auto scroll region.</source>
        <target state="new">The minimum logical size for the auto scroll region.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormAutoScrollPositionDescr">
        <source>The current position of the auto-scrolling scroll bar.</source>
        <target state="new">The current position of the auto-scrolling scroll bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormBorderStyleDescr">
        <source>Indicates the appearance and behavior of the border and title bar of the form.</source>
        <target state="new">Indicates the appearance and behavior of the border and title bar of the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormCancelButtonDescr">
        <source>The cancel button of the form. If this property is set, the button is 'clicked' whenever the user presses the 'ESC' key.</source>
        <target state="new">The cancel button of the form. If this property is set, the button is 'clicked' whenever the user presses the 'ESC' key.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormControlBoxDescr">
        <source>Determines whether a form has a Control/System menu box.</source>
        <target state="new">Determines whether a form has a Control/System menu box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormDesktopBoundsDescr">
        <source>The bounds of this form in desktop coordinates.</source>
        <target state="new">The bounds of this form in desktop coordinates.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormDesktopLocationDescr">
        <source>The location of this form in desktop coordinates.</source>
        <target state="new">The location of this form in desktop coordinates.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormDialogResultDescr">
        <source>The value this form will return if displayed as a dialog box.</source>
        <target state="new">The value this form will return if displayed as a dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormHelpButtonClickedDescr">
        <source>Event raised when the help button is clicked.</source>
        <target state="new">Event raised when the help button is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormHelpButtonDescr">
        <source>Determines whether a form has a Help button on the caption bar.</source>
        <target state="new">Determines whether a form has a Help button on the caption bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormIconDescr">
        <source>Indicates the icon for a form. This icon is displayed in the form's system menu box and when the form is minimized.</source>
        <target state="new">Indicates the icon for a form. This icon is displayed in the form's system menu box and when the form is minimized.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormIsMDIChildDescr">
        <source>Determines whether the form is a child of a MDI container.</source>
        <target state="new">Determines whether the form is a child of a MDI container.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormIsMDIContainerDescr">
        <source>Determines whether the form is an MDI container.</source>
        <target state="new">Determines whether the form is an MDI container.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormKeyPreviewDescr">
        <source>Determines whether keyboard events for controls on the form are registered with the form.</source>
        <target state="new">Determines whether keyboard events for controls on the form are registered with the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMDIChildrenDescr">
        <source>Retrieves the MDI children of this form.</source>
        <target state="new">Retrieves the MDI children of this form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMDIParentAndChild">
        <source>Form cannot be both an MDI child and MDI parent.</source>
        <target state="new">Form cannot be both an MDI child and MDI parent.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMDIParentCannotAdd">
        <source>Form cannot be added to the Controls collection that has a valid MDI parent.</source>
        <target state="new">Form cannot be added to the Controls collection that has a valid MDI parent.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMDIParentDescr">
        <source>Retrieves the MDI parent of this form.</source>
        <target state="new">Retrieves the MDI parent of this form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMaximizeBoxDescr">
        <source>Determines whether a form has a maximize box in the upper-right corner of its caption bar.</source>
        <target state="new">Determines whether a form has a maximize box in the upper-right corner of its caption bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMaximumSizeDescr">
        <source>The maximum size the form can be resized to.</source>
        <target state="new">The maximum size the form can be resized to.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMenuDescr">
        <source>The main menu of the form. This must be set to a component of type MainMenu.</source>
        <target state="new">The main menu of the form. This must be set to a component of type MainMenu.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMenuStripDescr">
        <source>Specifies the primary MenuStrip for the Form. This property is used for keyboard activation and automatic merging in MDI.</source>
        <target state="new">Specifies the primary MenuStrip for the Form. This property is used for keyboard activation and automatic merging in MDI.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMergedMenuDescr">
        <source>The merged menu of this form, which is used when displaying a single merged MDI menu.</source>
        <target state="new">The merged menu of this form, which is used when displaying a single merged MDI menu.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMinimizeBoxDescr">
        <source>Determines whether a form has a minimize box in the upper-right corner of its caption bar.</source>
        <target state="new">Determines whether a form has a minimize box in the upper-right corner of its caption bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormMinimumSizeDescr">
        <source>The minimum size the form can be resized to.</source>
        <target state="new">The minimum size the form can be resized to.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormModalDescr">
        <source>Indicates if this form is currently being displayed as a modal dialog box.</source>
        <target state="new">Indicates if this form is currently being displayed as a modal dialog box.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnActivateDescr">
        <source>Occurs whenever the form is activated.</source>
        <target state="new">Occurs whenever the form is activated.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnClosedDescr">
        <source>Occurs whenever the user closes the form, after the form has been closed.</source>
        <target state="new">Occurs whenever the user closes the form, after the form has been closed.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnClosingDescr">
        <source>Occurs whenever the user closes the form, before the form has been closed.</source>
        <target state="new">Occurs whenever the user closes the form, before the form has been closed.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnDeactivateDescr">
        <source>Occurs whenever the form is deactivated.</source>
        <target state="new">Occurs whenever the form is deactivated.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnDpiChangedDescr">
        <source>Occurs when form is moved to a monitor with a different resolution and scaling level, or when form's monitor scaling level is changed in the Windows settings.</source>
        <target state="new">Occurs when form is moved to a monitor with a different resolution and scaling level, or when form's monitor scaling level is changed in the Windows settings.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnFormClosedDescr">
        <source>Occurs whenever the user closes the form, after the form has been closed and specifies the close reason.</source>
        <target state="new">Occurs whenever the user closes the form, after the form has been closed and specifies the close reason.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnFormClosingDescr">
        <source>Occurs whenever the user closes the form, before the form has been closed and specifies the close reason.</source>
        <target state="new">Occurs whenever the user closes the form, before the form has been closed and specifies the close reason.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnInputLangChangeDescr">
        <source>Occurs whenever the language used for input for this form changes.</source>
        <target state="new">Occurs whenever the language used for input for this form changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnInputLangChangeRequestDescr">
        <source>A request by the system to change the input language for this form. This request can be refused.</source>
        <target state="new">A request by the system to change the input language for this form. This request can be refused.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnLoadDescr">
        <source>Occurs whenever the user loads the form.</source>
        <target state="new">Occurs whenever the user loads the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnMDIChildActivateDescr">
        <source>Occurs when an MDI Child window is activated.</source>
        <target state="new">Occurs when an MDI Child window is activated.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnMaximizedBoundsChangedDescr">
        <source>Event raised when the value of the MaximizedBounds property is changed on Form.</source>
        <target state="new">Event raised when the value of the MaximizedBounds property is changed on Form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnMaximumSizeChangedDescr">
        <source>Event raised when the value of the MaximumSize property is changed on Form.</source>
        <target state="new">Event raised when the value of the MaximumSize property is changed on Form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnMenuCompleteDescr">
        <source>Occurs when menu selection is completed and menu modal message loop has exited.</source>
        <target state="new">Occurs when menu selection is completed and menu modal message loop has exited.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnMenuStartDescr">
        <source>Occurs when any menu is displayed and menu modal message loop is entered.</source>
        <target state="new">Occurs when any menu is displayed and menu modal message loop is entered.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnMinimumSizeChangedDescr">
        <source>Event raised when the value of the MinimumSize property is changed on Form.</source>
        <target state="new">Event raised when the value of the MinimumSize property is changed on Form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnResizeBeginDescr">
        <source>Occurs when the form enters the sizing modal loop.</source>
        <target state="new">Occurs when the form enters the sizing modal loop.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnResizeEndDescr">
        <source>Occurs when the form exits the sizing modal loop.</source>
        <target state="new">Occurs when the form exits the sizing modal loop.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOnShownDescr">
        <source>Occurs whenever the form is first shown.</source>
        <target state="new">Occurs whenever the form is first shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOpacityDescr">
        <source>The opacity percentage of the control. </source>
        <target state="new">The opacity percentage of the control. </target>
        <note />
      </trans-unit>
      <trans-unit id="FormOwnedFormsDescr">
        <source>Array of forms owned by this form.</source>
        <target state="new">Array of forms owned by this form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormOwnerDescr">
        <source>The owner of this form.</source>
        <target state="new">The owner of this form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormShowIconDescr">
        <source>Indicates whether an icon is displayed in the title bar of the form.</source>
        <target state="new">Indicates whether an icon is displayed in the title bar of the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormShowInTaskbarDescr">
        <source>Determines whether the form appears in the Windows Taskbar.</source>
        <target state="new">Determines whether the form appears in the Windows Taskbar.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormSizeGripStyleDescr">
        <source>Determines when the SizeGrip will be displayed for the form.</source>
        <target state="new">Determines when the SizeGrip will be displayed for the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormStartPositionDescr">
        <source>Determines the position of a form when it first appears.</source>
        <target state="new">Determines the position of a form when it first appears.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormTopMostDescr">
        <source>Indicates whether the form always appears above all other forms that do not have this property set to true.</source>
        <target state="new">Indicates whether the form always appears above all other forms that do not have this property set to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormTransparencyKeyDescr">
        <source>A color which will appear transparent when painted on the form.</source>
        <target state="new">A color which will appear transparent when painted on the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormWindowStateDescr">
        <source>Determines the initial visual state of the form.</source>
        <target state="new">Determines the initial visual state of the form.</target>
        <note />
      </trans-unit>
      <trans-unit id="FormatControlFormatDescr">
        <source>Indicates the Format object that this control is currently using to format its values.</source>
        <target state="new">Indicates the Format object that this control is currently using to format its values.</target>
        <note />
      </trans-unit>
      <trans-unit id="Formatter_CantConvert">
        <source>Value '{0}' cannot be converted to type '{1}'.</source>
        <target state="new">Value '{0}' cannot be converted to type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="Formatter_CantConvertNull">
        <source>Null value cannot be converted to type '{1}'.</source>
        <target state="new">Null value cannot be converted to type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridItemDisposed">
        <source>The GridItem has been disposed and is no longer usable.</source>
        <target state="new">The GridItem has been disposed and is no longer usable.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridItemNotExpandable">
        <source>The GridItem cannot be expanded.</source>
        <target state="new">The GridItem cannot be expanded.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelCellPositionDescr">
        <source>Specifies the Row and Column position of the control.</source>
        <target state="new">Specifies the Row and Column position of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelColumnDescr">
        <source>The column position of the specified child control.</source>
        <target state="new">The column position of the specified child control.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelColumnStylesDescr">
        <source>The column styles of the table.</source>
        <target state="new">The column styles of the table.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelColumnsDescr">
        <source>The number of columns on the table.</source>
        <target state="new">The number of columns on the table.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelGetAlignmentDescr">
        <source>The alignment of the control.</source>
        <target state="new">The alignment of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelGetBoxStretchDescr">
        <source>The box stretch of the control.</source>
        <target state="new">The box stretch of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelGetColumnSpanDescr">
        <source>The column span of the control.</source>
        <target state="new">The column span of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelGetRowSpanDescr">
        <source>The row span of the control.</source>
        <target state="new">The row span of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelRowDescr">
        <source>The row position of the absolutely positioned element.</source>
        <target state="new">The row position of the absolutely positioned element.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelRowStylesDescr">
        <source>The row styles of the table.</source>
        <target state="new">The row styles of the table.</target>
        <note />
      </trans-unit>
      <trans-unit id="GridPanelRowsDescr">
        <source>The number of rows on the table.</source>
        <target state="new">The number of rows on the table.</target>
        <note />
      </trans-unit>
      <trans-unit id="HandleAlreadyExists">
        <source>Window handle already exists.</source>
        <target state="new">Window handle already exists.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpCaption">
        <source>Help</source>
        <target state="new">Help</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpInvalidURL">
        <source>Help URL '{0}' is not valid.</source>
        <target state="new">Help URL '{0}' is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpProviderHelpKeywordDescr">
        <source>Determines the Help keyword associated with this control.</source>
        <target state="new">Determines the Help keyword associated with this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpProviderHelpNamespaceDescr">
        <source>The Help namespace (for example HTML 1.0 Help file) that will be used. It is only used for controls that have the HelpKeyword set.</source>
        <target state="new">The Help namespace (for example HTML 1.0 Help file) that will be used. It is only used for controls that have the HelpKeyword set.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpProviderHelpStringDescr">
        <source>Determines the Help string associated with this control.</source>
        <target state="new">Determines the Help string associated with this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpProviderNavigatorDescr">
        <source>Determines the kind of Help associated with this control.</source>
        <target state="new">Determines the kind of Help associated with this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpProviderShowHelpDescr">
        <source>Determines if Help should be displayed for this control.</source>
        <target state="new">Determines if Help should be displayed for this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="HtmlDocumentInvalidDomain">
        <source>Argument for the Domain property must be a fully qualified domain name using Domain Name System (DNS) conventions.</source>
        <target state="new">Argument for the Domain property must be a fully qualified domain name using Domain Name System (DNS) conventions.</target>
        <note />
      </trans-unit>
      <trans-unit id="HtmlElementAttributeNotSupported">
        <source>The attribute you specified is not supported on this element.</source>
        <target state="new">The attribute you specified is not supported on this element.</target>
        <note />
      </trans-unit>
      <trans-unit id="HtmlElementMethodNotSupported">
        <source>Method is not supported on this type of HtmlElement.</source>
        <target state="new">Method is not supported on this type of HtmlElement.</target>
        <note />
      </trans-unit>
      <trans-unit id="HtmlElementPropertyNotSupported">
        <source>Property is not supported on this type of HtmlElement.</source>
        <target state="new">Property is not supported on this type of HtmlElement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ICurrencyManagerProviderDescr">
        <source>Provides custom binding management for components.</source>
        <target state="new">Provides custom binding management for components.</target>
        <note />
      </trans-unit>
      <trans-unit id="ISupportInitializeDescr">
        <source>Specifies support for transacted initialization. </source>
        <target state="new">Specifies support for transacted initialization. </target>
        <note />
      </trans-unit>
      <trans-unit id="IllegalCrossThreadCall">
        <source>Cross-thread operation not valid: Control '{0}' accessed from a thread other than the thread it was created on.</source>
        <target state="new">Cross-thread operation not valid: Control '{0}' accessed from a thread other than the thread it was created on.</target>
        <note />
      </trans-unit>
      <trans-unit id="IllegalCrossThreadCallWithStack">
        <source>Cross-thread operation not valid: Control '{0}' accessed from a thread other than the thread it was created on.\r\nStack trace where the illegal operation occurred was:\r\n{1}"</source>
        <target state="new">Cross-thread operation not valid: Control '{0}' accessed from a thread other than the thread it was created on.\r\nStack trace where the illegal operation occurred was:\r\n{1}"</target>
        <note />
      </trans-unit>
      <trans-unit id="IllegalState">
        <source>Internal state of the {1} class is not valid.</source>
        <target state="new">Internal state of the {1} class is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListAddFailed">
        <source>Image cannot be added to the ImageList.</source>
        <target state="new">Image cannot be added to the ImageList.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListAllowMirroringDescr">
        <source>Indicates whether the images in the list should be mirrored.</source>
        <target state="new">Indicates whether the images in the list should be mirrored.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListBadImage">
        <source>Parameter must be of type Image.</source>
        <target state="new">Parameter must be of type Image.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListBitmap">
        <source>Image must be a Bitmap.</source>
        <target state="new">Image must be a Bitmap.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListCantRecreate">
        <source>Unless the list is empty, '{0}' cannot be changed once the ImageList has been used.</source>
        <target state="new">Unless the list is empty, '{0}' cannot be changed once the ImageList has been used.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListColorDepthDescr">
        <source>The number of colors to use to render images.</source>
        <target state="new">The number of colors to use to render images.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListCreateFailed">
        <source>Creation of the ImageList handle did not succeed.</source>
        <target state="new">Creation of the ImageList handle did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListEntryType">
        <source>Image added to an ImageList must either derive from Image or be an Icon.</source>
        <target state="new">Image added to an ImageList must either derive from Image or be an Icon.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListGetFailed">
        <source>Retrieval of the image from ImageList did not succeed.</source>
        <target state="new">Retrieval of the image from ImageList did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListHandleCreatedDescr">
        <source>Indicates if the native handle has been created for this ImageList.</source>
        <target state="new">Indicates if the native handle has been created for this ImageList.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListHandleDescr">
        <source>The native handle of the ImageList.</source>
        <target state="new">The native handle of the ImageList.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListImageStreamDescr">
        <source>Retrieves an ImageList streamer for persisting images.</source>
        <target state="new">Retrieves an ImageList streamer for persisting images.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListImageTooShort">
        <source>Image strip shorter than the ImageSize property cannot be added.</source>
        <target state="new">Image strip shorter than the ImageSize property cannot be added.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListImagesDescr">
        <source>The images stored in this ImageList.</source>
        <target state="new">The images stored in this ImageList.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListOnRecreateHandleDescr">
        <source>Occurs when the ImageList needs to recreate its handle.</source>
        <target state="new">Occurs when the ImageList needs to recreate its handle.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListRemoveFailed">
        <source>Removal of the image from ImageList did not succeed.</source>
        <target state="new">Removal of the image from ImageList did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListReplaceFailed">
        <source>Replacement of the image in ImageList did not succeed.</source>
        <target state="new">Replacement of the image in ImageList did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListRightToLeftInvalidArgument">
        <source>'Inherit' is not a valid value for this property.  Must be set to 'Yes' or 'No'.</source>
        <target state="new">'Inherit' is not a valid value for this property.  Must be set to 'Yes' or 'No'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListSizeDescr">
        <source>The size of individual images in the ImageList.</source>
        <target state="new">The size of individual images in the ImageList.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListStreamerLoadFailed">
        <source>Loading of the ImageList did not succeed.</source>
        <target state="new">Loading of the ImageList did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListStreamerSaveFailed">
        <source>Saving of the ImageList did not succeed.</source>
        <target state="new">Saving of the ImageList did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListStripBadWidth">
        <source>Width of the image strip must be a positive multiple of ImageSize.Width.</source>
        <target state="new">Width of the image strip must be a positive multiple of ImageSize.Width.</target>
        <note />
      </trans-unit>
      <trans-unit id="ImageListTransparentColorDescr">
        <source>The color that is treated as transparent.</source>
        <target state="new">The color that is treated as transparent.</target>
        <note />
      </trans-unit>
      <trans-unit id="IndexOutOfRange">
        <source>Index {0} is out of range.</source>
        <target state="new">Index {0} is out of range.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidArgument">
        <source>InvalidArgument=Value of '{1}' is not valid for '{0}'.</source>
        <target state="new">InvalidArgument=Value of '{1}' is not valid for '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidBoundArgument">
        <source>Value of '{1}' is not valid for '{0}'. '{0}' should be between {2} and {3}.</source>
        <target state="new">Value of '{1}' is not valid for '{0}'. '{0}' should be between {2} and {3}.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCrossThreadControlCall">
        <source>Action being performed on this control is being called from the wrong thread. Marshal to the correct thread using Control.Invoke or Control.BeginInvoke to perform this action.</source>
        <target state="new">Action being performed on this control is being called from the wrong thread. Marshal to the correct thread using Control.Invoke or Control.BeginInvoke to perform this action.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidExBoundArgument">
        <source>Value of '{1}' is not valid for '{0}'. '{0}' should be greater than {2} and less than {3}.</source>
        <target state="new">Value of '{1}' is not valid for '{0}'. '{0}' should be greater than {2} and less than {3}.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidFileFormat">
        <source>File format is not valid.</source>
        <target state="new">File format is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidFileType">
        <source>File type is not valid.</source>
        <target state="new">File type is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGDIHandle">
        <source>Win32 handle passed to {0} is not valid or is the wrong type.</source>
        <target state="new">Win32 handle passed to {0} is not valid or is the wrong type.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidHighBoundArgument">
        <source>Value of '{1}' is not valid for '{0}'. '{0}' must be less than {2}.</source>
        <target state="new">Value of '{1}' is not valid for '{0}'. '{0}' must be less than {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidHighBoundArgumentEx">
        <source>Value of '{1}' is not valid for '{0}'. '{0}' must be less than or equal to {2}.</source>
        <target state="new">Value of '{1}' is not valid for '{0}'. '{0}' must be less than or equal to {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidLowBoundArgument">
        <source>Value of '{1}' is not valid for '{0}'. '{0}' must be greater than {2}.</source>
        <target state="new">Value of '{1}' is not valid for '{0}'. '{0}' must be greater than {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidLowBoundArgumentEx">
        <source>Value of '{1}' is not valid for '{0}'. '{0}' must be greater than or equal to {2}.</source>
        <target state="new">Value of '{1}' is not valid for '{0}'. '{0}' must be greater than or equal to {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidNullArgument">
        <source>Null is not a valid value for '{0}'.</source>
        <target state="new">Null is not a valid value for '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidNullItemInCollection">
        <source>One or more items in the collection are null.</source>
        <target state="new">One or more items in the collection are null.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidPictureFormat">
        <source>Image format is not valid. The image file may be corrupted.</source>
        <target state="new">Image format is not valid. The image file may be corrupted.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidPictureType">
        <source>Argument '{0}' must be a picture that can be used as a {1}.</source>
        <target state="new">Argument '{0}' must be a picture that can be used as a {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidResXBasePathOperation">
        <source>Property can be changed only before the enumeration.</source>
        <target state="new">Property can be changed only before the enumeration.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidResXFile">
        <source>ResX file {0} cannot be parsed.</source>
        <target state="new">ResX file {0} cannot be parsed.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidResXFileReaderWriterTypes">
        <source>ResX input is not valid. Cannot find valid "resheader" tags for the ResX reader and writer type names.</source>
        <target state="new">ResX input is not valid. Cannot find valid "resheader" tags for the ResX reader and writer type names.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidResXNoType">
        <source>Could not find a type for a name.  The type name was '{0}'.</source>
        <target state="new">Could not find a type for a name.  The type name was '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidResXResourceNoName">
        <source>Cannot find a name for the resource with the value '{0}'.</source>
        <target state="new">Cannot find a name for the resource with the value '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidSendKeysKeyword">
        <source>Keyword "{0}" is not valid.</source>
        <target state="new">Keyword "{0}" is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidSendKeysRepeat">
        <source>Specified repeat count is not valid.</source>
        <target state="new">Specified repeat count is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidSendKeysString">
        <source>SendKeys string '{0}' is not valid.</source>
        <target state="new">SendKeys string '{0}' is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidSingleMonthSize">
        <source>MonthCalendar size information cannot be retrieved.</source>
        <target state="new">MonthCalendar size information cannot be retrieved.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidWndClsName">
        <source>Window class name is not valid.</source>
        <target state="new">Window class name is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="Invalid_boolean_attribute">
        <source>Attribute {0} must be set to true or false.</source>
        <target state="new">Attribute {0} must be set to true or false.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvocationException">
        <source>Type {0} in the data at line {1}, position {2}, cannot be loaded because it threw the following exception during construction: {3}</source>
        <target state="new">Type {0} in the data at line {1}, position {2}, cannot be loaded because it threw the following exception during construction: {3}</target>
        <note />
      </trans-unit>
      <trans-unit id="IsMirroredDescr">
        <source>Indicates whether the control is mirrored.</source>
        <target state="new">Indicates whether the control is mirrored.</target>
        <note />
      </trans-unit>
      <trans-unit id="KeyboardToolTipDisplayBehaviorRequiresAccessibilityImprovementsLevel3">
        <source>ToolTips display on keyboard focus requires the following AppContextSwitchOverrides: 'Switch.UseLegacyAccessibilityFeatures.3' and 'Switch.System.Windows.Forms.UseLegacyToolTipDisplay'</source>
        <target state="new">ToolTips display on keyboard focus requires the following AppContextSwitchOverrides: 'Switch.UseLegacyAccessibilityFeatures.3' and 'Switch.System.Windows.Forms.UseLegacyToolTipDisplay'</target>
        <note />
      </trans-unit>
      <trans-unit id="KeysConverterInvalidKeyCombination">
        <source>Key combination is not valid.</source>
        <target state="new">Key combination is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="KeysConverterInvalidKeyName">
        <source>Key name is not valid.</source>
        <target state="new">Key name is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelAutoEllipsisDescr">
        <source>Enables the automatic handling of text that extends beyond the width of the label control.</source>
        <target state="new">Enables the automatic handling of text that extends beyond the width of the label control.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelAutoSizeDescr">
        <source>Enables automatic resizing based on font size. Note that this is only valid for label controls that do not wrap text.</source>
        <target state="new">Enables automatic resizing based on font size. Note that this is only valid for label controls that do not wrap text.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelBackgroundImageDescr">
        <source>The background image of this control.</source>
        <target state="new">The background image of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelBorderDescr">
        <source>Determines if the label has a visible border.</source>
        <target state="new">Determines if the label has a visible border.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelOnTextAlignChangedDescr">
        <source>Event raised when the value of the TextAlign property is changed on Label.</source>
        <target state="new">Event raised when the value of the TextAlign property is changed on Label.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelPreferredHeightDescr">
        <source>The preferred height of this control.</source>
        <target state="new">The preferred height of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelPreferredWidthDescr">
        <source>The preferred width of this control.</source>
        <target state="new">The preferred width of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelTextAlignDescr">
        <source>Determines the position of the text within the label.</source>
        <target state="new">Determines the position of the text within the label.</target>
        <note />
      </trans-unit>
      <trans-unit id="LabelUseMnemonicDescr">
        <source>If true, the first character preceded by an ampersand (&amp;&amp;) will be used as the label's mnemonic key.</source>
        <target state="new">If true, the first character preceded by an ampersand (&amp;&amp;) will be used as the label's mnemonic key.</target>
        <note />
      </trans-unit>
      <trans-unit id="LayoutEngineUnsupportedType">
        <source>LayoutEngine cannot arrange objects of type '{0}'.</source>
        <target state="new">LayoutEngine cannot arrange objects of type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelActiveLinkColorDescr">
        <source>Determines the color of the hyperlink when the user clicks the link.</source>
        <target state="new">Determines the color of the hyperlink when the user clicks the link.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelAreaLength">
        <source>LinkArea length cannot be negative.</source>
        <target state="new">LinkArea length cannot be negative.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelAreaStart">
        <source>LinkArea start cannot be negative.</source>
        <target state="new">LinkArea start cannot be negative.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelBadLink">
        <source>Parameter must be of type Link.</source>
        <target state="new">Parameter must be of type Link.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelDisabledLinkColorDescr">
        <source>Determines the color of the hyperlink when disabled.</source>
        <target state="new">Determines the color of the hyperlink when disabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelLinkAreaDescr">
        <source>Portion of the text in the label to render as a hyperlink.</source>
        <target state="new">Portion of the text in the label to render as a hyperlink.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelLinkBehaviorDescr">
        <source>Determines the underline behavior of the hyperlink.</source>
        <target state="new">Determines the underline behavior of the hyperlink.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelLinkClickedDescr">
        <source>Occurs when the link is clicked.</source>
        <target state="new">Occurs when the link is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelLinkColorDescr">
        <source>Determines the color of the hyperlink in its default state.</source>
        <target state="new">Determines the color of the hyperlink in its default state.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelLinkVisitedDescr">
        <source>Determines if the hyperlink should be rendered as visited.</source>
        <target state="new">Determines if the hyperlink should be rendered as visited.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelOverlap">
        <source>Overlapping link regions.</source>
        <target state="new">Overlapping link regions.</target>
        <note />
      </trans-unit>
      <trans-unit id="LinkLabelVisitedLinkColorDescr">
        <source>Determines the color of the hyperlink when the LinkVisited property is set to true.</source>
        <target state="new">Determines the color of the hyperlink when the LinkVisited property is set to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBindingBindField">
        <source>Cannot bind to the property or column {0} on the DataSource.</source>
        <target state="new">Cannot bind to the property or column {0} on the DataSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBindingBindProperty">
        <source>Cannot bind to the property '{0}' on the target control.</source>
        <target state="new">Cannot bind to the property '{0}' on the target control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBindingBindPropertyReadOnly">
        <source>Cannot bind to property '{0}' because it is read-only.</source>
        <target state="new">Cannot bind to property '{0}' because it is read-only.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBindingFormatFailed">
        <source>Cannot format the value to the desired type.</source>
        <target state="new">Cannot format the value to the desired type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxBorderDescr">
        <source>Controls what type of border is drawn around the ListBox.</source>
        <target state="new">Controls what type of border is drawn around the ListBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxCantInsertIntoIntegerCollection">
        <source>ListBox.IntegerCollection is sorted, and items cannot be inserted into it.</source>
        <target state="new">ListBox.IntegerCollection is sorted, and items cannot be inserted into it.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxColumnWidthDescr">
        <source>Indicates how wide each column should be in a multicolumn ListBox.</source>
        <target state="new">Indicates how wide each column should be in a multicolumn ListBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxCustomTabOffsetsDescr">
        <source>The collection of pixel offsets each corresponding TAB character will be placed from the near edge of the client area.</source>
        <target state="new">The collection of pixel offsets each corresponding TAB character will be placed from the near edge of the client area.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxDrawModeDescr">
        <source>Controls list box painting. Either the system [NORMAL] or the user [OWNERDRAW] paints each item.</source>
        <target state="new">Controls list box painting. Either the system [NORMAL] or the user [OWNERDRAW] paints each item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxHorizontalExtentDescr">
        <source>The width, in pixels, by which a list box can be scrolled horizontally. Only valid if HorizontalScrollBars is true.</source>
        <target state="new">The width, in pixels, by which a list box can be scrolled horizontally. Only valid if HorizontalScrollBars is true.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxHorizontalScrollbarDescr">
        <source>Indicates whether the ListBox will display a horizontal scroll bar for items beyond the right edge of the ListBox.</source>
        <target state="new">Indicates whether the ListBox will display a horizontal scroll bar for items beyond the right edge of the ListBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxIntegralHeightDescr">
        <source>Indicates whether the list can contain only complete items.</source>
        <target state="new">Indicates whether the list can contain only complete items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxInvalidSelectionMode">
        <source>Cannot call this method when SelectionMode is SelectionMode.NONE.</source>
        <target state="new">Cannot call this method when SelectionMode is SelectionMode.NONE.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxItemHeightDescr">
        <source>The height, in pixels, of items in a fixed-height owner-draw list box.</source>
        <target state="new">The height, in pixels, of items in a fixed-height owner-draw list box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxItemOverflow">
        <source>List box contains too many items.</source>
        <target state="new">List box contains too many items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxItemsDescr">
        <source>The items in the list box.</source>
        <target state="new">The items in the list box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxMultiColumnDescr">
        <source>Indicates if values should be displayed in columns horizontally.</source>
        <target state="new">Indicates if values should be displayed in columns horizontally.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxPreferredHeightDescr">
        <source>The preferred height of this control.</source>
        <target state="new">The preferred height of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxScrollIsVisibleDescr">
        <source>Indicates if the list box should always have a scroll bar present, regardless of how many items are in it.</source>
        <target state="new">Indicates if the list box should always have a scroll bar present, regardless of how many items are in it.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxSelectedIndexCollectionIsReadOnly">
        <source>ListBox.SelectedIndexCollection is read only.</source>
        <target state="new">ListBox.SelectedIndexCollection is read only.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxSelectedIndexDescr">
        <source>Retrieves the index of the first selection in the list box, or -1 if there is no selection.</source>
        <target state="new">Retrieves the index of the first selection in the list box, or -1 if there is no selection.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxSelectedIndicesDescr">
        <source>A collection of indexes for the currently selected items in the list box.</source>
        <target state="new">A collection of indexes for the currently selected items in the list box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxSelectedItemDescr">
        <source>The currently selected item in the list box, or null.</source>
        <target state="new">The currently selected item in the list box, or null.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxSelectedItemsDescr">
        <source>A collection of currently selected items.</source>
        <target state="new">A collection of currently selected items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxSelectedObjectCollectionIsReadOnly">
        <source>ListBox.SelectedObjectCollection is read only.</source>
        <target state="new">ListBox.SelectedObjectCollection is read only.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxSelectionModeDescr">
        <source>Indicates if the list box is to be single-select, multi-select, or not selectable.</source>
        <target state="new">Indicates if the list box is to be single-select, multi-select, or not selectable.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxSortedDescr">
        <source>Controls whether the list is sorted.</source>
        <target state="new">Controls whether the list is sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxTopIndexDescr">
        <source>The index of the first visible item in the list box.</source>
        <target state="new">The index of the first visible item in the list box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxUseTabStopsDescr">
        <source>Indicates if TAB characters should be expanded into full spacing.</source>
        <target state="new">Indicates if TAB characters should be expanded into full spacing.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListBoxVarHeightMultiCol">
        <source>ListBox cannot have variable height and be multicolumn. Either make the ListBox owner-draw fixed height, or make the ListBox single column.</source>
        <target state="new">ListBox cannot have variable height and be multicolumn. Either make the ListBox owner-draw fixed height, or make the ListBox single column.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlDataSourceDescr">
        <source>Indicates the list that this control will use to get its items.</source>
        <target state="new">Indicates the list that this control will use to get its items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlDisplayMemberDescr">
        <source>Indicates the property to display for the items in this control.</source>
        <target state="new">Indicates the property to display for the items in this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlEmptyValueMemberInSettingSelectedValue">
        <source>Cannot set the SelectedValue in a ListControl with an empty ValueMember.</source>
        <target state="new">Cannot set the SelectedValue in a ListControl with an empty ValueMember.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlFormatDescr">
        <source>Event raised to allow you to convert the value to a value suitable for display.</source>
        <target state="new">Event raised to allow you to convert the value to a value suitable for display.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlFormatInfoChangedDescr">
        <source>Event raised when the value of the FormatInfo property changed.</source>
        <target state="new">Event raised when the value of the FormatInfo property changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlFormatStringChangedDescr">
        <source>Event raised when the value of the FormatString property is changed.</source>
        <target state="new">Event raised when the value of the FormatString property is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlFormatStringDescr">
        <source>The format specifier characters that indicate how a value is to be displayed.</source>
        <target state="new">The format specifier characters that indicate how a value is to be displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlFormattingEnabledChangedDescr">
        <source>Event raised when the value of the FormattingEnabled property is changed.</source>
        <target state="new">Event raised when the value of the FormattingEnabled property is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlFormattingEnabledDescr">
        <source>If this property is true, the value of FormatString is used to convert the value of DisplayMember into a value that can be displayed.</source>
        <target state="new">If this property is true, the value of FormatString is used to convert the value of DisplayMember into a value that can be displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlOnDataSourceChangedDescr">
        <source>Event raised when the value of the DataSource property is changed on ListControl.</source>
        <target state="new">Event raised when the value of the DataSource property is changed on ListControl.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlOnDisplayMemberChangedDescr">
        <source>Event raised when the value of the DisplayMember property is changed on ListControl.</source>
        <target state="new">Event raised when the value of the DisplayMember property is changed on ListControl.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlOnSelectedValueChangedDescr">
        <source>Event raised when the value of the SelectedValue property is changed on ListControl.</source>
        <target state="new">Event raised when the value of the SelectedValue property is changed on ListControl.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlOnValueMemberChangedDescr">
        <source>Event raised when the value of the ValueMember property is changed on ListControl.</source>
        <target state="new">Event raised when the value of the ValueMember property is changed on ListControl.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlSelectedValueDescr">
        <source>Indicates the actual value of the currently selected item. Setting it will cause the item whose actual value is equal to become selected.</source>
        <target state="new">Indicates the actual value of the currently selected item. Setting it will cause the item whose actual value is equal to become selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlValueMemberDescr">
        <source>Indicates the property to use as the actual value for the items in the control.</source>
        <target state="new">Indicates the property to use as the actual value for the items in the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlWrongDisplayMember">
        <source>Cannot bind to the new display member.</source>
        <target state="new">Cannot bind to the new display member.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListControlWrongValueMember">
        <source>Cannot bind to the new value member.</source>
        <target state="new">Cannot bind to the new value member.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListEnumCurrentOutOfRange">
        <source>Enumerator's current position is out of the bounds of the list.</source>
        <target state="new">Enumerator's current position is out of the bounds of the list.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListEnumVersionMismatch">
        <source>List that this enumerator is bound to has been modified. An enumerator can only be used if the list does not change.</source>
        <target state="new">List that this enumerator is bound to has been modified. An enumerator can only be used if the list does not change.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListManagerBadPosition">
        <source>Position is either less than 0 or greater than the number of items in the data source.</source>
        <target state="new">Position is either less than 0 or greater than the number of items in the data source.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListManagerEmptyList">
        <source>Cannot operate with an empty list.</source>
        <target state="new">Cannot operate with an empty list.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListManagerNoValue">
        <source>Index {0} does not have a value.</source>
        <target state="new">Index {0} does not have a value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListManagerSetDataSource">
        <source>Data sources of type {0} are not supported.</source>
        <target state="new">Data sources of type {0} are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewActivationDescr">
        <source>Indicates the type of action required by the user to activate an item, and the feedback given.</source>
        <target state="new">Indicates the type of action required by the user to activate an item, and the feedback given.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewActivationMustBeOnWhenHotTrackingIsOn">
        <source>When HotTracking is on, activation must be ItemActivation.OneClick.</source>
        <target state="new">When HotTracking is on, activation must be ItemActivation.OneClick.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewAddColumnFailed">
        <source>Column cannot be added to ListView.</source>
        <target state="new">Column cannot be added to ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewAddItemFailed">
        <source>Item cannot be added to ListView.</source>
        <target state="new">Item cannot be added to ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewAfterLabelEditDescr">
        <source>Occurs when the text of an item has been edited by the user.</source>
        <target state="new">Occurs when the text of an item has been edited by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewAlignmentDescr">
        <source>Indicates how items are aligned within the ListView.</source>
        <target state="new">Indicates how items are aligned within the ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewAllowColumnReorderDescr">
        <source>Indicates whether the user can reorder columns in Details view.</source>
        <target state="new">Indicates whether the user can reorder columns in Details view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewAutoArrangeDescr">
        <source>Indicates whether items are kept arranged automatically when in LargeIcon or SmallIcon view.</source>
        <target state="new">Indicates whether items are kept arranged automatically when in LargeIcon or SmallIcon view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewBackgroundImageTiledDescr">
        <source>Indicates whether the background image will be tiled to fill the entire background of the control.</source>
        <target state="new">Indicates whether the background image will be tiled to fill the entire background of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewBadListViewSubItem">
        <source>Parameter must be of type ListViewSubItem.</source>
        <target state="new">Parameter must be of type ListViewSubItem.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewBeforeLabelEditDescr">
        <source>Occurs when the text of an item is about to be edited by the user.</source>
        <target state="new">Occurs when the text of an item is about to be edited by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewBeginEditFailed">
        <source>BeginEdit did not succeed because the LabelEdit property is false.</source>
        <target state="new">BeginEdit did not succeed because the LabelEdit property is false.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCacheVirtualItemsEventDescr">
        <source>Notifies users of virtual ListView controls that they should prepare their cache.</source>
        <target state="new">Notifies users of virtual ListView controls that they should prepare their cache.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCantAccessCheckedItemsCollectionWhenInVirtualMode">
        <source>Cannot access the checked items collection when the ListView is in virtual mode.</source>
        <target state="new">Cannot access the checked items collection when the ListView is in virtual mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCantAccessSelectedItemsCollectionWhenInVirtualMode">
        <source>Cannot access the selected items collection when the ListView is in virtual mode.</source>
        <target state="new">Cannot access the selected items collection when the ListView is in virtual mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCantAddItemsToAVirtualListView">
        <source>When the ListView is in virtual mode, you cannot add items to the ListView items collection. Use  the VirtualListSize property instead to change the size of the ListView items collection.</source>
        <target state="new">When the ListView is in virtual mode, you cannot add items to the ListView items collection. Use  the VirtualListSize property instead to change the size of the ListView items collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCantGetEnumeratorInVirtualMode">
        <source>When the ListView is in virtual mode, you cannot enumerate through the ListView items collection using an enumerator or call GetEnumerator. Use the ListView items indexer instead and access an item by index value.</source>
        <target state="new">When the ListView is in virtual mode, you cannot enumerate through the ListView items collection using an enumerator or call GetEnumerator. Use the ListView items indexer instead and access an item by index value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCantModifyTheItemCollInAVirtualListView">
        <source>Cannot modify the items collection in a virtual ListView.</source>
        <target state="new">Cannot modify the items collection in a virtual ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCantRemoveItemsFromAVirtualListView">
        <source>When the ListView is in virtual mode, you cannot remove items from the ListView items collection. Use the VirtualListSize property instead to change the size of the ListView items collection.</source>
        <target state="new">When the ListView is in virtual mode, you cannot remove items from the ListView items collection. Use the VirtualListSize property instead to change the size of the ListView items collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCantSetViewToTileViewInVirtualMode">
        <source>Tile view is not supported in VirtualMode.</source>
        <target state="new">Tile view is not supported in VirtualMode.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCantSetVirtualModeWhenInTileView">
        <source>VirtualMode is not supported in Tile view.</source>
        <target state="new">VirtualMode is not supported in Tile view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCheckBoxesDescr">
        <source>Indicates whether check boxes are displayed beside items.</source>
        <target state="new">Indicates whether check boxes are displayed beside items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewCheckBoxesNotSupportedInTileView">
        <source>CheckBoxes are not supported in Tile view. Choose a different view or set CheckBoxes to false.</source>
        <target state="new">CheckBoxes are not supported in Tile view. Choose a different view or set CheckBoxes to false.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewColumnClickDescr">
        <source>Occurs when a column header is clicked.</source>
        <target state="new">Occurs when a column header is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewColumnInfoSet">
        <source>ColumnInfo cannot be set.</source>
        <target state="new">ColumnInfo cannot be set.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewColumnReorderedDscr">
        <source>Occurs when the ListView column header has been reordered.</source>
        <target state="new">Occurs when the ListView column header has been reordered.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewColumnWidthChangedDscr">
        <source>Occurs when the user stops dragging the column header divider. Works only in Details mode.</source>
        <target state="new">Occurs when the user stops dragging the column header divider. Works only in Details mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewColumnWidthChangingDscr">
        <source>Occurs when the user drags the column header divider. Works only in Details mode.</source>
        <target state="new">Occurs when the user drags the column header divider. Works only in Details mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewColumnsDescr">
        <source>The columns shown in Details view.</source>
        <target state="new">The columns shown in Details view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewDrawColumnHeaderEventDescr">
        <source>Occurs in owner draw mode, when a column header needs to be drawn.</source>
        <target state="new">Occurs in owner draw mode, when a column header needs to be drawn.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewDrawItemEventDescr">
        <source>Occurs in owner-draw mode, when an item needs to be drawn.</source>
        <target state="new">Occurs in owner-draw mode, when an item needs to be drawn.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewDrawSubItemEventDescr">
        <source>Occurs in owner-draw mode, when a SubItem (Details view only) needs to be drawn.</source>
        <target state="new">Occurs in owner-draw mode, when a SubItem (Details view only) needs to be drawn.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewFindNearestItemWorksOnlyInIconView">
        <source>FindNearestItem is supported only when the ListView is in SMALLICON or LARGEICON view.</source>
        <target state="new">FindNearestItem is supported only when the ListView is in SMALLICON or LARGEICON view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewFocusedItemDescr">
        <source>The ListView item that currently has the user focus.</source>
        <target state="new">The ListView item that currently has the user focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewFullRowSelectDescr">
        <source>Indicates whether all SubItems are highlighted along with the item when selected.</source>
        <target state="new">Indicates whether all SubItems are highlighted along with the item when selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewGetTopItem">
        <source>Cannot get the top item in LargeIcon, SmallIcon, or Tile view.</source>
        <target state="new">Cannot get the top item in LargeIcon, SmallIcon, or Tile view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewGridLinesDescr">
        <source>Displays grid lines around items and SubItems. Only shown when in Details view.</source>
        <target state="new">Displays grid lines around items and SubItems. Only shown when in Details view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewGroupDefaultGroup">
        <source>Default</source>
        <target state="new">Default</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewGroupDefaultHeader">
        <source>ListViewGroup</source>
        <target state="new">ListViewGroup</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewGroupNameDescr">
        <source>The name of this group.</source>
        <target state="new">The name of this group.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewGroupsDescr">
        <source>The groups in the ListView.</source>
        <target state="new">The groups in the ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewHeaderStyleDescr">
        <source>The style of the column headers in Details view.</source>
        <target state="new">The style of the column headers in Details view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewHideSelectionDescr">
        <source>Removes highlighting from the selected item when the control does not have focus.</source>
        <target state="new">Removes highlighting from the selected item when the control does not have focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewHotTrackingDescr">
        <source>Allows items to appear as hyperlinks when the mouse hovers over them.</source>
        <target state="new">Allows items to appear as hyperlinks when the mouse hovers over them.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewHoverMustBeOnWhenHotTrackingIsOn">
        <source>When HotTracking is on, HoverSelection must also be enabled.</source>
        <target state="new">When HotTracking is on, HoverSelection must also be enabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewHoverSelectDescr">
        <source>Allows items to be selected by hovering over them with the mouse.</source>
        <target state="new">Allows items to be selected by hovering over them with the mouse.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewIndentCountCantBeNegative">
        <source>IndentCount property on the ListViewItem class does not accept negative values.</source>
        <target state="new">IndentCount property on the ListViewItem class does not accept negative values.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewInsertionMarkDescr">
        <source>Allows insertion mark attributes to be changed.</source>
        <target state="new">Allows insertion mark attributes to be changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemCheckedDescr">
        <source>Event raised when the checked property of a ListView item changes.</source>
        <target state="new">Event raised when the checked property of a ListView item changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemClickDescr">
        <source>Occurs when an item is activated.</source>
        <target state="new">Occurs when an item is activated.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemDragDescr">
        <source>Occurs when the user begins dragging an item.</source>
        <target state="new">Occurs when the user begins dragging an item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemImageIndexDescr">
        <source>The ImageList index value of the image displayed when the list view item is in the unselected state.</source>
        <target state="new">The ImageList index value of the image displayed when the list view item is in the unselected state.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemImageKeyDescr">
        <source>The key in the image-list value that represents the image to display. when the list view item is in the unselected state.</source>
        <target state="new">The key in the image-list value that represents the image to display. when the list view item is in the unselected state.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemIndentCountDescr">
        <source>Number of indents for a list ListViewItem</source>
        <target state="new">Number of indents for a list ListViewItem</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemMouseHoverDescr">
        <source>Occurs when the mouse hovers over an item.</source>
        <target state="new">Occurs when the mouse hovers over an item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemSelectionChangedDescr">
        <source>Event raised when the selection state of an item has changed.</source>
        <target state="new">Event raised when the selection state of an item has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemSorterDescr">
        <source>The sorting comparer for this view.</source>
        <target state="new">The sorting comparer for this view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemStateImageIndexDescr">
        <source>The image-list index value of the state image displayed.</source>
        <target state="new">The image-list index value of the state image displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemStateImageKeyDescr">
        <source>The key in the image-list value that represents the image to display.</source>
        <target state="new">The key in the image-list value that represents the image to display.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemSubItemsDescr">
        <source>The SubItems for this ListViewItem.</source>
        <target state="new">The SubItems for this ListViewItem.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewItemsDescr">
        <source>The items in the ListView.</source>
        <target state="new">The items in the ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewLabelEditDescr">
        <source>Allows item labels to be edited in place by the user.</source>
        <target state="new">Allows item labels to be edited in place by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewLabelWrapDescr">
        <source>Determines whether label text can wrap to a new line.</source>
        <target state="new">Determines whether label text can wrap to a new line.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewLargeImageListDescr">
        <source>The ImageList control used by the ListView for images in Large Icon View.</source>
        <target state="new">The ImageList control used by the ListView for images in Large Icon View.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewMultiSelectDescr">
        <source>Allows multiple items to be selected.</source>
        <target state="new">Allows multiple items to be selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewOwnerDrawDescr">
        <source>Controls whether the system or the user paints items/SubItems.</source>
        <target state="new">Controls whether the system or the user paints items/SubItems.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewRetrieveVirtualItemEventDescr">
        <source>Retrieves the virtual item from the user.</source>
        <target state="new">Retrieves the virtual item from the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewScrollableDescr">
        <source>Indicates whether the control will display scroll bars if it contains more items than can fit in the client area.</source>
        <target state="new">Indicates whether the control will display scroll bars if it contains more items than can fit in the client area.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewSearchForVirtualItemDescr">
        <source>Notifies the user that a search is taking place on a virtual ListView.</source>
        <target state="new">Notifies the user that a search is taking place on a virtual ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewSelectedIndexChangedDescr">
        <source>Occurs whenever the 'SelectedIndex' property for this ListView changes.</source>
        <target state="new">Occurs whenever the 'SelectedIndex' property for this ListView changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewSelectedItemsDescr">
        <source>A collection of items that are currently selected in the ListView.</source>
        <target state="new">A collection of items that are currently selected in the ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewSetTopItem">
        <source>Cannot set the TopItem in LargeIcon, SmallIcon, or Tile View.</source>
        <target state="new">Cannot set the TopItem in LargeIcon, SmallIcon, or Tile View.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewShowGroupsDescr">
        <source>Indicates whether the control will display the items in group form.</source>
        <target state="new">Indicates whether the control will display the items in group form.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewShowItemToolTipsDescr">
        <source>Allows ListViewItems to display ToolTips.</source>
        <target state="new">Allows ListViewItems to display ToolTips.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewSmallImageListDescr">
        <source>The ImageList control used by the ListView for images in all views except for the large icon view.</source>
        <target state="new">The ImageList control used by the ListView for images in all views except for the large icon view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewSortNotAllowedInVirtualListView">
        <source>Sorting is not allowed in a virtual ListView.</source>
        <target state="new">Sorting is not allowed in a virtual ListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewSortingDescr">
        <source>Indicates the manner in which items are to be sorted.</source>
        <target state="new">Indicates the manner in which items are to be sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewStartIndexCannotBeLargerThanEndIndex">
        <source>The startIndex value cannot be larger than the endIndex value.</source>
        <target state="new">The startIndex value cannot be larger than the endIndex value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewStateImageListDescr">
        <source>The ImageList control used by the ListView for custom states.</source>
        <target state="new">The ImageList control used by the ListView for custom states.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewSubItemCollectionInvalidArgument">
        <source>Argument must be of type ListViewSubItem.</source>
        <target state="new">Argument must be of type ListViewSubItem.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewTileSizeDescr">
        <source>The size of the tile in Tile view.</source>
        <target state="new">The size of the tile in Tile view.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewTileSizeMustBePositive">
        <source>TileSize must be positive.</source>
        <target state="new">TileSize must be positive.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewTileViewDoesNotSupportCheckBoxes">
        <source>Tile view does not support CheckBoxes. Choose a different view or set CheckBoxes to false.</source>
        <target state="new">Tile view does not support CheckBoxes. Choose a different view or set CheckBoxes to false.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewTopItemDescr">
        <source>The first item that is visible to the user.</source>
        <target state="new">The first item that is visible to the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewViewDescr">
        <source>Selects one of five different views that items can be shown in.</source>
        <target state="new">Selects one of five different views that items can be shown in.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualItemRequired">
        <source>ListView virtualization requires a valid ListViewItem to be provided by the RetrieveVirtualItem event or in the OnRetrieveVirtualItem method.</source>
        <target state="new">ListView virtualization requires a valid ListViewItem to be provided by the RetrieveVirtualItem event or in the OnRetrieveVirtualItem method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualItemStateChangedDescr">
        <source>Occurs whenever the state of a virtual item is changed.</source>
        <target state="new">Occurs whenever the state of a virtual item is changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualItemsSelectionRangeChangedDescr">
        <source>Event raised when the selection state of a range of items has changed. This event in raised only in virtual mode.</source>
        <target state="new">Event raised when the selection state of a range of items has changed. This event in raised only in virtual mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualListSizeDescr">
        <source>Sets the count of the item collection when the ListView is in virtual mode.</source>
        <target state="new">Sets the count of the item collection when the ListView is in virtual mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualListSizeInvalidArgument">
        <source>Value of '{1}' is not valid for '{0}'. {0} should be greater than or equal to 0.</source>
        <target state="new">Value of '{1}' is not valid for '{0}'. {0} should be greater than or equal to 0.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualListViewRequiresNoCheckedItems">
        <source>Cannot set VirtualMode=true on a list whose checked items collection is not empty.</source>
        <target state="new">Cannot set VirtualMode=true on a list whose checked items collection is not empty.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualListViewRequiresNoItems">
        <source>Cannot set VirtualMode=true on a ListView that has items.</source>
        <target state="new">Cannot set VirtualMode=true on a ListView that has items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualListViewRequiresNoSelectedItems">
        <source>Cannot set VirtualMode=true on a ListView whose selected items collection is not empty.</source>
        <target state="new">Cannot set VirtualMode=true on a ListView whose selected items collection is not empty.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualModeCantAccessSubItem">
        <source>When in VirtualMode the ListView RetrieveVirtualListItem event needs a list view SubItem for each ListView column.</source>
        <target state="new">When in VirtualMode the ListView RetrieveVirtualListItem event needs a list view SubItem for each ListView column.</target>
        <note />
      </trans-unit>
      <trans-unit id="ListViewVirtualModeDescr">
        <source>Enables ListView virtual mode.</source>
        <target state="new">Enables ListView virtual mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="LiveRegionAutomationLiveSettingDescr">
        <source>The politeness level that a client should use to notify the user of changes to this live region.</source>
        <target state="new">The politeness level that a client should use to notify the user of changes to this live region.</target>
        <note />
      </trans-unit>
      <trans-unit id="LoadDLLError">
        <source>Cannot load the "{0}" DLL into memory.</source>
        <target state="new">Cannot load the "{0}" DLL into memory.</target>
        <note />
      </trans-unit>
      <trans-unit id="LoadTextError">
        <source>Cannot load the text.</source>
        <target state="new">Cannot load the text.</target>
        <note />
      </trans-unit>
      <trans-unit id="MDIChildAddToNonMDIParent">
        <source>MDI child forms can be added only to an MdiClient.</source>
        <target state="new">MDI child forms can be added only to an MdiClient.</target>
        <note />
      </trans-unit>
      <trans-unit id="MDIChildSystemMenuItemAccessibleName">
        <source>System</source>
        <target state="new">System</target>
        <note />
      </trans-unit>
      <trans-unit id="MDIContainerMustBeTopLevel">
        <source>MDI container forms must be top-level.</source>
        <target state="new">MDI container forms must be top-level.</target>
        <note />
      </trans-unit>
      <trans-unit id="MDIMenuMoreWindows">
        <source>&amp;More Windows...</source>
        <target state="new">&amp;More Windows...</target>
        <note />
      </trans-unit>
      <trans-unit id="MDIParentNotContainer">
        <source>Form that was specified to be the MdiParent for this form is not an MdiContainer.</source>
        <target state="new">Form that was specified to be the MdiParent for this form is not an MdiContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="MainMenuCollapseDescr">
        <source>Occurs when the main menu collapses.</source>
        <target state="new">Occurs when the main menu collapses.</target>
        <note />
      </trans-unit>
      <trans-unit id="MainMenuImageListDescr">
        <source>Gets or sets the ImageList associated with this main menu.</source>
        <target state="new">Gets or sets the ImageList associated with this main menu.</target>
        <note />
      </trans-unit>
      <trans-unit id="MainMenuIsImageMarginPresentDescr">
        <source>Gets or sets a value indicating whether the menu has an image margin.</source>
        <target state="new">Gets or sets a value indicating whether the menu has an image margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="MainMenuToStringNoForm">
        <source>&lt;No Form&gt;</source>
        <target state="new">&lt;No Form&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxAllowPromptAsInputDescr">
        <source>Indicates whether the prompt character is valid as input.</source>
        <target state="new">Indicates whether the prompt character is valid as input.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxAsciiOnlyDescr">
        <source>Indicates whether only ASCII characters are accepted as valid input.</source>
        <target state="new">Indicates whether only ASCII characters are accepted as valid input.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxBeepOnErrorDescr">
        <source>Indicates whether the control will beep when an invalid character is typed.</source>
        <target state="new">Indicates whether the control will beep when an invalid character is typed.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxCultureDescr">
        <source>The culture that determines the value of the localizable mask language separators and placeholders.</source>
        <target state="new">The culture that determines the value of the localizable mask language separators and placeholders.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxCutCopyMaskFormat">
        <source>Indicates whether the text to be copied to the clipboard includes literals and/or prompt characters.</source>
        <target state="new">Indicates whether the text to be copied to the clipboard includes literals and/or prompt characters.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxHidePromptOnLeaveDescr">
        <source>Indicates whether prompt characters are displayed when the control does not have focus.</source>
        <target state="new">Indicates whether prompt characters are displayed when the control does not have focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxIncompleteMsg">
        <source>Mask input is not complete.</source>
        <target state="new">Mask input is not complete.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxInsertKeyModeDescr">
        <source>Indicates the masked text box input character typing mode.</source>
        <target state="new">Indicates the masked text box input character typing mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxInvalidCharError">
        <source>Specified character value is not allowed for this property.</source>
        <target state="new">Specified character value is not allowed for this property.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxIsOverwriteModeChangedDescr">
        <source>Occurs when the value of IsOverwriteMode property changes.</source>
        <target state="new">Occurs when the value of IsOverwriteMode property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxMaskChangedDescr">
        <source>Occurs when the value of Mask property changes.</source>
        <target state="new">Occurs when the value of Mask property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxMaskDescr">
        <source>Sets the string governing the input allowed for this control.</source>
        <target state="new">Sets the string governing the input allowed for this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxMaskInputRejectedDescr">
        <source>Occurs when the input character or text does not comply with the mask specification.</source>
        <target state="new">Occurs when the input character or text does not comply with the mask specification.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxMaskInvalidChar">
        <source>Specified mask contains characters that are not valid.</source>
        <target state="new">Specified mask contains characters that are not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxPasswordAndPromptCharError">
        <source>PasswordChar and PromptChar values cannot be the same.</source>
        <target state="new">PasswordChar and PromptChar values cannot be the same.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxPasswordCharDescr">
        <source>Indicates the character to display for password input.</source>
        <target state="new">Indicates the character to display for password input.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxPromptCharDescr">
        <source>Indicates the character used as the placeholder.</source>
        <target state="new">Indicates the character used as the placeholder.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxRejectInputOnFirstFailureDescr">
        <source>If true, the input text is rejected whenever a character fails to comply with the mask; otherwise, characters in the text are processed one by one as individual inputs.</source>
        <target state="new">If true, the input text is rejected whenever a character fails to comply with the mask; otherwise, characters in the text are processed one by one as individual inputs.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxResetOnPrompt">
        <source>Specifies whether to reset and skip the current position if editable, when the input character has the same value as the prompt.</source>
        <target state="new">Specifies whether to reset and skip the current position if editable, when the input character has the same value as the prompt.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxResetOnSpace">
        <source>Specifies whether to reset and skip the current position if editable, when the input is the space character.</source>
        <target state="new">Specifies whether to reset and skip the current position if editable, when the input is the space character.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxSkipLiterals">
        <source>Specifies whether to skip the current position if non-editable and the input character has the same value as the literal at that position.</source>
        <target state="new">Specifies whether to skip the current position if non-editable and the input character has the same value as the literal at that position.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxTextMaskFormat">
        <source>Indicates whether the string returned from the Text property includes literals and/or prompt characters.</source>
        <target state="new">Indicates whether the string returned from the Text property includes literals and/or prompt characters.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxTypeValidationCompletedDescr">
        <source>Occurs when the ValidatingType object has completed parsing the input text.</source>
        <target state="new">Occurs when the ValidatingType object has completed parsing the input text.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxTypeValidationSucceeded">
        <source>Type validation succeeded.</source>
        <target state="new">Type validation succeeded.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxUseSystemPasswordCharDescr">
        <source>Indicates if the text in the edit control should appear as the default password character.</source>
        <target state="new">Indicates if the text in the edit control should appear as the default password character.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxValidatedValueChangedDescr">
        <source>Occurs when the ValidatedValue changes after type validation has been completed.</source>
        <target state="new">Occurs when the ValidatedValue changes after type validation has been completed.</target>
        <note />
      </trans-unit>
      <trans-unit id="MaskedTextBoxValidatingTypeDescr">
        <source>Specifies the Type of the object to be used for parsing the input text when the control looses focus.</source>
        <target state="new">Specifies the Type of the object to be used for parsing the input text when the control looses focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuBadMenuItem">
        <source>Parameter must be of type MenuItem.</source>
        <target state="new">Parameter must be of type MenuItem.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuImageMarginColorDescr">
        <source>Gets or sets the background color of this menu's image margin.</source>
        <target state="new">Gets or sets the background color of this menu's image margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuIsParentDescr">
        <source>Indicates if this menu contains any child items.</source>
        <target state="new">Indicates if this menu contains any child items.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemAlreadyExists">
        <source>Cannot add MenuItem '{0}'. It already exists as a parent of the current menu item.</source>
        <target state="new">Cannot add MenuItem '{0}'. It already exists as a parent of the current menu item.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemCheckedDescr">
        <source>Indicates whether the item is checked.</source>
        <target state="new">Indicates whether the item is checked.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemDefaultDescr">
        <source>Indicates whether the item is the default item.</source>
        <target state="new">Indicates whether the item is the default item.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemEnabledDescr">
        <source>Indicates whether the item is enabled.</source>
        <target state="new">Indicates whether the item is enabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemImageDescr">
        <source>Gets or sets the image to be displayed on this menu item.</source>
        <target state="new">Gets or sets the image to be displayed on this menu item.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemImageListDescr">
        <source>Gets or sets the ImageList associated with this menu item.</source>
        <target state="new">Gets or sets the ImageList associated with this menu item.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemImageMarginColorDescr">
        <source>Gets or sets the background color of this menu item's image margin.</source>
        <target state="new">Gets or sets the background color of this menu item's image margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemInvalidCheckProperty">
        <source>True is not a valid value for the Checked property.  This is only valid for MenuItems that have no children and are not top-level.</source>
        <target state="new">True is not a valid value for the Checked property.  This is only valid for MenuItems that have no children and are not top-level.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemMDIListDescr">
        <source>Determines whether the MDI child window list is appended to this item.</source>
        <target state="new">Determines whether the MDI child window list is appended to this item.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemMergeOrderDescr">
        <source>Determines the merge order of the item.</source>
        <target state="new">Determines the merge order of the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemMergeTypeDescr">
        <source>Determines how the item is handled when menus are merged.</source>
        <target state="new">Determines how the item is handled when menus are merged.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemOnClickDescr">
        <source>Occurs when the menu item is selected.</source>
        <target state="new">Occurs when the menu item is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemOnInitDescr">
        <source>Occurs before the containing menu is displayed.</source>
        <target state="new">Occurs before the containing menu is displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemOnSelectDescr">
        <source>Occurs when the menu item is selected.</source>
        <target state="new">Occurs when the menu item is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemOwnerDrawDescr">
        <source>Indicates if Windows will draw the menu item or if the user will handle the painting.</source>
        <target state="new">Indicates if Windows will draw the menu item or if the user will handle the painting.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemRadioCheckDescr">
        <source>If the item is checked, this value will determine whether the check style is a radio button.</source>
        <target state="new">If the item is checked, this value will determine whether the check style is a radio button.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemShortCutDescr">
        <source>The shortcut key associated with the menu item. </source>
        <target state="new">The shortcut key associated with the menu item. </target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemShowShortCutDescr">
        <source>Indicates whether the shorcut key for the menu item is displayed on the item. </source>
        <target state="new">Indicates whether the shorcut key for the menu item is displayed on the item. </target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemTextDescr">
        <source>The caption displayed by the item.</source>
        <target state="new">The caption displayed by the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuItemVisibleDescr">
        <source>Indicates whether the item is visible.</source>
        <target state="new">Indicates whether the item is visible.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuMDIListItemDescr">
        <source>Retrieves the menu item that contains a list of MDI child windows.</source>
        <target state="new">Retrieves the menu item that contains a list of MDI child windows.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuMenuItemsDescr">
        <source>The menu items for the menu.</source>
        <target state="new">The menu items for the menu.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuMergeWithSelf">
        <source>Cannot merge a menu with itself.</source>
        <target state="new">Cannot merge a menu with itself.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuRightToLeftDescr">
        <source>Indicates if this menu should display right to left</source>
        <target state="new">Indicates if this menu should display right to left</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuStripMdiWindowListItem">
        <source>Specifies the item whose DropDown will show the list of MDI windows.</source>
        <target state="new">Specifies the item whose DropDown will show the list of MDI windows.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuStripMenuActivateDescr">
        <source>Occurs when the user has started accessing the menu through the keyboard or mouse.</source>
        <target state="new">Occurs when the user has started accessing the menu through the keyboard or mouse.</target>
        <note />
      </trans-unit>
      <trans-unit id="MenuStripMenuDeactivateDescr">
        <source>Occurs when the user has finished accessing the menu through the keyboard or mouse.</source>
        <target state="new">Occurs when the user has finished accessing the menu through the keyboard or mouse.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarAnnuallyBoldedDatesDescr">
        <source>Indicates which annual dates should be boldface.</source>
        <target state="new">Indicates which annual dates should be boldface.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarDimensionsDescr">
        <source>The number of rows and columns of months in a month calendar.</source>
        <target state="new">The number of rows and columns of months in a month calendar.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarFirstDayOfWeekDescr">
        <source>The first day of the week.</source>
        <target state="new">The first day of the week.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarForeColorDescr">
        <source>The color used to display text within a month.</source>
        <target state="new">The color used to display text within a month.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarInvalidDimensions">
        <source>Calendar dimensions ({0}, {1}) are not valid.</source>
        <target state="new">Calendar dimensions ({0}, {1}) are not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarMaxDateDescr">
        <source>The maximum date that can be selected for a month calendar control.</source>
        <target state="new">The maximum date that can be selected for a month calendar control.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarMaxSelCount">
        <source>Unable to set the MonthCalendar maximum selection count to {0}.</source>
        <target state="new">Unable to set the MonthCalendar maximum selection count to {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarMaxSelectionCountDescr">
        <source>The total number of days that can be selected for the control.</source>
        <target state="new">The total number of days that can be selected for the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarMinDateDescr">
        <source>The minimum date that can be selected for a month calendar control.</source>
        <target state="new">The minimum date that can be selected for a month calendar control.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarMonthBackColorDescr">
        <source>The background color displayed within the month.</source>
        <target state="new">The background color displayed within the month.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarMonthlyBoldedDatesDescr">
        <source>Indicates which monthly dates to bold.</source>
        <target state="new">Indicates which monthly dates to bold.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarOnDateChangedDescr">
        <source>Occurs when the range of dates changes due to user selection, or through next/previous month navigation.</source>
        <target state="new">Occurs when the range of dates changes due to user selection, or through next/previous month navigation.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarOnDateSelectedDescr">
        <source>Occurs when the user selects a date or a range of dates.</source>
        <target state="new">Occurs when the user selects a date or a range of dates.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarRange">
        <source>Unable to set the MonthCalendar range from {0} to {1}.</source>
        <target state="new">Unable to set the MonthCalendar range from {0} to {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarRangeSelected">
        <source> {0} to {1} selected.</source>
        <target state="new"> {0} to {1} selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarScrollChangeDescr">
        <source>The number of months that a single click on a next/previous button moves the display by.</source>
        <target state="new">The number of months that a single click on a next/previous button moves the display by.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarSelectionEndDescr">
        <source>The end date in a range of dates selected in a month calendar control.</source>
        <target state="new">The end date in a range of dates selected in a month calendar control.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarSelectionRangeDescr">
        <source>The range of dates selected in a month calendar control.</source>
        <target state="new">The range of dates selected in a month calendar control.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarSelectionStartDescr">
        <source>The start date in a range of dates selected in a month calendar control.</source>
        <target state="new">The start date in a range of dates selected in a month calendar control.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarShowTodayCircleDescr">
        <source>Indicates whether the month calendar control will circle the \"today\" date.</source>
        <target state="new">Indicates whether the month calendar control will circle the \"today\" date.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarShowTodayDescr">
        <source>Indicates whether the month calendar control will display the \"today\" date at the bottom of the control.</source>
        <target state="new">Indicates whether the month calendar control will display the \"today\" date at the bottom of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarShowWeekNumbersDescr">
        <source>Indicates whether the month calendar control will display week numbers (1 to 52) to the left of each row of days.</source>
        <target state="new">Indicates whether the month calendar control will display week numbers (1 to 52) to the left of each row of days.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarSingleDateSelected">
        <source> {0} selected.</source>
        <target state="new"> {0} selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarSingleDecadeSelected">
        <source>Decade {0} selected.</source>
        <target state="new">Decade {0} selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarSingleMonthSizeDescr">
        <source>The minimum size required to display a full month.</source>
        <target state="new">The minimum size required to display a full month.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarSingleYearSelected">
        <source>Year {0} selected.</source>
        <target state="new">Year {0} selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarTitleBackColorDescr">
        <source>The background color displayed in the calendar's title.</source>
        <target state="new">The background color displayed in the calendar's title.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarTitleForeColorDescr">
        <source>The color used to display text within the calendar's title.</source>
        <target state="new">The color used to display text within the calendar's title.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarTodayDateDescr">
        <source>The current day.</source>
        <target state="new">The current day.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarTodayDateSetDescr">
        <source>Indicates if the current day has been set.</source>
        <target state="new">Indicates if the current day has been set.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarTrailingForeColorDescr">
        <source>The color used to display the previous and following months that appear on the month calendar.</source>
        <target state="new">The color used to display the previous and following months that appear on the month calendar.</target>
        <note />
      </trans-unit>
      <trans-unit id="MonthCalendarYearRangeSelected">
        <source>Year {0} to {1} selected.</source>
        <target state="new">Year {0} to {1} selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoAllowNewOnReadOnlyList">
        <source>AllowNew can only be set to true on an IBindingList or on a read-write list with a default public constructor.</source>
        <target state="new">AllowNew can only be set to true on an IBindingList or on a read-write list with a default public constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoAllowRemoveOnReadOnlyList">
        <source>AllowRemove can only be set to true on an IBindingList or on a read-write list.</source>
        <target state="new">AllowRemove can only be set to true on an IBindingList or on a read-write list.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoDefaultConstructor">
        <source>Type '{0}' must have a public constructor, without parameters, to be serialized.</source>
        <target state="new">Type '{0}' must have a public constructor, without parameters, to be serialized.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoMoreColumns">
        <source>There are no more columns in the table. Use NextRow() to start printing on the next row.</source>
        <target state="new">There are no more columns in the table. Use NextRow() to start printing on the next row.</target>
        <note />
      </trans-unit>
      <trans-unit id="NonTopLevelCantHaveOwner">
        <source>Only top-level controls can have an owner.</source>
        <target state="new">Only top-level controls can have an owner.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotAvailable">
        <source>n/a</source>
        <target state="new">n/a</target>
        <note />
      </trans-unit>
      <trans-unit id="NotSerializableType">
        <source>Item named '{0}' of type '{1}' cannot be added to the resource file because it is not serializable.</source>
        <target state="new">Item named '{0}' of type '{1}' cannot be added to the resource file because it is not serializable.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotSortedAccessibleStatus">
        <source>Not sorted.</source>
        <target state="new">Not sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotSupported">
        <source>The type {0} on line {1}, position {2} threw the following exception while being converted: {3}</source>
        <target state="new">The type {0} on line {1}, position {2} threw the following exception while being converted: {3}</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconBalloonTipIconDescr">
        <source>The icon to associate with the balloon ToolTip.</source>
        <target state="new">The icon to associate with the balloon ToolTip.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconBalloonTipTextDescr">
        <source>The text to associate with the balloon ToolTip.</source>
        <target state="new">The text to associate with the balloon ToolTip.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconBalloonTipTitleDescr">
        <source>The title of the balloon ToolTip.</source>
        <target state="new">The title of the balloon ToolTip.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconEmptyOrNullTipText">
        <source>Balloon tip text must have a non-empty value.</source>
        <target state="new">Balloon tip text must have a non-empty value.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconIconDescr">
        <source>The icon to display in the system tray.</source>
        <target state="new">The icon to display in the system tray.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconMenuDescr">
        <source>The shortcut menu to show when the user right-clicks the icon.</source>
        <target state="new">The shortcut menu to show when the user right-clicks the icon.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconMouseClickDescr">
        <source>Occurs when the component is clicked with the mouse.</source>
        <target state="new">Occurs when the component is clicked with the mouse.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconMouseDoubleClickDescr">
        <source>Occurs when the component is double-clicked with the mouse. </source>
        <target state="new">Occurs when the component is double-clicked with the mouse. </target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconOnBalloonTipClickedDescr">
        <source>Occurs when a balloon ToolTip is clicked.</source>
        <target state="new">Occurs when a balloon ToolTip is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconOnBalloonTipClosedDescr">
        <source>Occurs when a balloon ToolTip is closed.</source>
        <target state="new">Occurs when a balloon ToolTip is closed.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconOnBalloonTipShownDescr">
        <source>Occurs when a balloon tip is shown.</source>
        <target state="new">Occurs when a balloon tip is shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconTextDescr">
        <source>The text that will be displayed when the mouse hovers over the icon.</source>
        <target state="new">The text that will be displayed when the mouse hovers over the icon.</target>
        <note />
      </trans-unit>
      <trans-unit id="NotifyIconVisDescr">
        <source>Determines whether the control is visible or hidden.</source>
        <target state="new">Determines whether the control is visible or hidden.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownAccelerationCollectionAtLeastOneEntryIsNull">
        <source>At least one of the NumericUpDownAcceleration elements is null.</source>
        <target state="new">At least one of the NumericUpDownAcceleration elements is null.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownAccelerationCompareException">
        <source>Argument is null or is not a NumericUpDownAcceleration object.</source>
        <target state="new">Argument is null or is not a NumericUpDownAcceleration object.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownDecimalPlacesDescr">
        <source>Indicates the number of decimal places to display.</source>
        <target state="new">Indicates the number of decimal places to display.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownHexadecimalDescr">
        <source>Indicates whether the numeric up-down should display its value in hexadecimal.</source>
        <target state="new">Indicates whether the numeric up-down should display its value in hexadecimal.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownIncrementDescr">
        <source>Indicates the amount to increment or decrement on each button click.</source>
        <target state="new">Indicates the amount to increment or decrement on each button click.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownLessThanZeroError">
        <source>Parameter value must be greater than or equal to 0.</source>
        <target state="new">Parameter value must be greater than or equal to 0.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownMaximumDescr">
        <source>Indicates the maximum value for the numeric up-down control.</source>
        <target state="new">Indicates the maximum value for the numeric up-down control.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownMinimumDescr">
        <source>Indicates the minimum value for the numeric up-down control.</source>
        <target state="new">Indicates the minimum value for the numeric up-down control.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownOnValueChangedDescr">
        <source>Occurs when the value in the up-down control changes.</source>
        <target state="new">Occurs when the value in the up-down control changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownThousandsSeparatorDescr">
        <source>Indicates whether the thousands separator will be inserted between every three decimal digits.</source>
        <target state="new">Indicates whether the thousands separator will be inserted between every three decimal digits.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumericUpDownValueDescr">
        <source>The current value of the numeric up-down control.</source>
        <target state="new">The current value of the numeric up-down control.</target>
        <note />
      </trans-unit>
      <trans-unit id="OFDcheckFileExistsDescr">
        <source>Indicates whether a warning appears when the user specifies a file that does not exist.</source>
        <target state="new">Indicates whether a warning appears when the user specifies a file that does not exist.</target>
        <note />
      </trans-unit>
      <trans-unit id="OFDmultiSelectDescr">
        <source>Controls whether multiple files can be selected in the dialog.</source>
        <target state="new">Controls whether multiple files can be selected in the dialog.</target>
        <note />
      </trans-unit>
      <trans-unit id="OFDreadOnlyCheckedDescr">
        <source>The state of the read-only check box in the dialog.</source>
        <target state="new">The state of the read-only check box in the dialog.</target>
        <note />
      </trans-unit>
      <trans-unit id="OFDshowReadOnlyDescr">
        <source>Controls whether to show the read-only check box in the dialog.</source>
        <target state="new">Controls whether to show the read-only check box in the dialog.</target>
        <note />
      </trans-unit>
      <trans-unit id="OKCaption">
        <source>OK</source>
        <target state="new">OK</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectDisposed">
        <source>Disposed '{0}' can no longer be used.</source>
        <target state="new">Disposed '{0}' can no longer be used.</target>
        <note />
      </trans-unit>
      <trans-unit id="ObjectHasParent">
        <source>Object already has a parent.</source>
        <target state="new">Object already has a parent.</target>
        <note />
      </trans-unit>
      <trans-unit id="OnlyOneControl">
        <source>Cannot add or insert the item '{0}' in more than one place. You must first remove it from its current location or clone it.</source>
        <target state="new">Cannot add or insert the item '{0}' in more than one place. You must first remove it from its current location or clone it.</target>
        <note />
      </trans-unit>
      <trans-unit id="OperationRequiresIBindingList">
        <source>This operation requires an IBindingList.</source>
        <target state="new">This operation requires an IBindingList.</target>
        <note />
      </trans-unit>
      <trans-unit id="OperationRequiresIBindingListView">
        <source>This operation requires an IBindingListView.</source>
        <target state="new">This operation requires an IBindingListView.</target>
        <note />
      </trans-unit>
      <trans-unit id="OutOfMemory">
        <source>Cannot allocate needed memory.</source>
        <target state="new">Cannot allocate needed memory.</target>
        <note />
      </trans-unit>
      <trans-unit id="OwnerControlIsNotALiveRegion">
        <source>Owner control of the accessible object must implement IAutomationLiveRegion interface.</source>
        <target state="new">Owner control of the accessible object must implement IAutomationLiveRegion interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="OwnsSelfOrOwner">
        <source>Form {0} tried to set an ineligible form as its owner. Forms cannot own themselves or their owners.</source>
        <target state="new">Form {0} tried to set an ineligible form as its owner. Forms cannot own themselves or their owners.</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSDocCommentPaneTitle">
        <source>Description Pane</source>
        <target state="new">Description Pane</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSErrorInvalidPropertyValue">
        <source>Property value is not valid.</source>
        <target state="new">Property value is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSErrorTitle">
        <source>Properties Window</source>
        <target state="new">Properties Window</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSFormatExceptionMessage">
        <source>Drop-down list option is not valid.</source>
        <target state="new">Drop-down list option is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSToolTipAlphabetic">
        <source>Alphabetical</source>
        <target state="new">Alphabetical</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSToolTipCategorized">
        <source>Categorized</source>
        <target state="new">Categorized</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSToolTipEvents">
        <source>Events</source>
        <target state="new">Events</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSToolTipProperties">
        <source>Properties</source>
        <target state="new">Properties</target>
        <note />
      </trans-unit>
      <trans-unit id="PBRSToolTipPropertyPages">
        <source>Property Pages</source>
        <target state="new">Property Pages</target>
        <note />
      </trans-unit>
      <trans-unit id="PDallowCurrentPageDescr">
        <source>Enables and disables the Current Page option button.</source>
        <target state="new">Enables and disables the Current Page option button.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDallowPagesDescr">
        <source>Enables and disables the Pages option button.</source>
        <target state="new">Enables and disables the Pages option button.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDallowPrintToFileDescr">
        <source>Enables and disables the Print To File check box.</source>
        <target state="new">Enables and disables the Print To File check box.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDallowSelectionDescr">
        <source>Enables and disables the Selection option button.</source>
        <target state="new">Enables and disables the Selection option button.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDcantShowWithoutPrinter">
        <source>PrintDialog needs a PrinterSettings object to display. Set PrintDialog.Document (preferred) or PrintDialog.PrinterSettings.</source>
        <target state="new">PrintDialog needs a PrinterSettings object to display. Set PrintDialog.Document (preferred) or PrintDialog.PrinterSettings.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDdocumentDescr">
        <source>The PrintDocument to get printer settings from.</source>
        <target state="new">The PrintDocument to get printer settings from.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDpageOutOfRange">
        <source>Value {0} is out of range.</source>
        <target state="new">Value {0} is out of range.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDprintToFileDescr">
        <source>Determines whether the Print To File check box is selected.</source>
        <target state="new">Determines whether the Print To File check box is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDprinterSettingsDescr">
        <source>The PrinterSettings to use.</source>
        <target state="new">The PrinterSettings to use.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDshowHelpDescr">
        <source>Controls whether the Help button is displayed.</source>
        <target state="new">Controls whether the Help button is displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDshowNetworkDescr">
        <source>Controls whether the Network button is displayed.</source>
        <target state="new">Controls whether the Network button is displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PDuseEXDialog">
        <source>Gets or sets a value indicating whether the print dialog box in the Windows XP style should be shown for systems running Windows XP and later.</source>
        <target state="new">Gets or sets a value indicating whether the print dialog box in the Windows XP style should be shown for systems running Windows XP and later.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDallowMarginsDescr">
        <source>Enables and disables editing of margins.</source>
        <target state="new">Enables and disables editing of margins.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDallowOrientationDescr">
        <source>Enables and disables the Orientation radio buttons.</source>
        <target state="new">Enables and disables the Orientation radio buttons.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDallowPaperDescr">
        <source>Enables and disables editing of paper size.</source>
        <target state="new">Enables and disables editing of paper size.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDallowPrinterDescr">
        <source>Enables and disables Printer button.</source>
        <target state="new">Enables and disables Printer button.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDcantShowWithoutPage">
        <source>PageSetupDialog needs a PageSettings object to display. Set PageSetupDialog.Document (preferred), PageSetupDialog.PrinterSettings, or PageSetupDialog.PageSettings.</source>
        <target state="new">PageSetupDialog needs a PageSettings object to display. Set PageSetupDialog.Document (preferred), PageSetupDialog.PrinterSettings, or PageSetupDialog.PageSettings.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDenableMetricDescr">
        <source>Gets or sets a value indicating whether the margin settings, when displayed in millimeters, should be automatically converted to and from hundredths of an inch.</source>
        <target state="new">Gets or sets a value indicating whether the margin settings, when displayed in millimeters, should be automatically converted to and from hundredths of an inch.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDminMarginsDescr">
        <source>The smallest margins the user is allowed to select.</source>
        <target state="new">The smallest margins the user is allowed to select.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDpageSettingsDescr">
        <source>The PageSettings the dialog box will modify.</source>
        <target state="new">The PageSettings the dialog box will modify.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDprinterSettingsDescr">
        <source>The PrinterSettings the dialog box will modify when the user clicks the Printer button.</source>
        <target state="new">The PrinterSettings the dialog box will modify when the user clicks the Printer button.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDshowHelpDescr">
        <source>Controls whether the Help button is displayed.</source>
        <target state="new">Controls whether the Help button is displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PSDshowNetworkDescr">
        <source>Controls whether the Network button is displayed.</source>
        <target state="new">Controls whether the Network button is displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PaddingAllDescr">
        <source>Number of pixels along all borders to pad docked controls.</source>
        <target state="new">Number of pixels along all borders to pad docked controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="PaddingBottomDescr">
        <source>Number of pixels along the bottom border to pad docked controls.</source>
        <target state="new">Number of pixels along the bottom border to pad docked controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="PaddingLeftDescr">
        <source>Number of pixels along the left border to pad docked controls.</source>
        <target state="new">Number of pixels along the left border to pad docked controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="PaddingRightDescr">
        <source>Number of pixels along the right border to pad docked controls.</source>
        <target state="new">Number of pixels along the right border to pad docked controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="PaddingTopDescr">
        <source>Number of pixels along the top border to pad docked controls.</source>
        <target state="new">Number of pixels along the top border to pad docked controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="PanelBorderStyleDescr">
        <source>Indicates whether the panel should have a border.</source>
        <target state="new">Indicates whether the panel should have a border.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxBorderStyleDescr">
        <source>Controls what type of border the PictureBox should have.</source>
        <target state="new">Controls what type of border the PictureBox should have.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxCancelAsyncDescr">
        <source>Attempts to cancel any current image-loading operation.</source>
        <target state="new">Attempts to cancel any current image-loading operation.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxErrorImageDescr">
        <source>Image to display when the load of another image fails.</source>
        <target state="new">Image to display when the load of another image fails.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxImageDescr">
        <source>The image displayed in the PictureBox.</source>
        <target state="new">The image displayed in the PictureBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxImageLocationDescr">
        <source>Disk or Web location to load image from.</source>
        <target state="new">Disk or Web location to load image from.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxInitialImageDescr">
        <source>Image to display while another image is loading.</source>
        <target state="new">Image to display while another image is loading.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxLoad0Descr">
        <source>Loads the image from the location specified in ImageLocation.</source>
        <target state="new">Loads the image from the location specified in ImageLocation.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxLoad1Descr">
        <source>Loads the image from the provided location.</source>
        <target state="new">Loads the image from the provided location.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxLoadAsync0Descr">
        <source>Initiates asynchronous loading of the image from the location specified in ImageLocation.</source>
        <target state="new">Initiates asynchronous loading of the image from the location specified in ImageLocation.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxLoadAsync1Descr">
        <source>Initiates asynchronous loading of the image from the provided location.</source>
        <target state="new">Initiates asynchronous loading of the image from the provided location.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxLoadCompletedDescr">
        <source>Event raised when loading into a PictureBox finishes.</source>
        <target state="new">Event raised when loading into a PictureBox finishes.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxLoadProgressChangedDescr">
        <source>Event raised when progress is reported during loading into a PictureBox.</source>
        <target state="new">Event raised when progress is reported during loading into a PictureBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxLoadProgressDescr">
        <source>Indicates the progress of the background download task.</source>
        <target state="new">Indicates the progress of the background download task.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxNoImageLocation">
        <source>ImageLocation must be set.</source>
        <target state="new">ImageLocation must be set.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxOnSizeModeChangedDescr">
        <source>Event raised when the value of the SizeMode property is changed on the PictureBox.</source>
        <target state="new">Event raised when the value of the SizeMode property is changed on the PictureBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxSizeModeDescr">
        <source>Controls how the PictureBox will handle image placement and control sizing.</source>
        <target state="new">Controls how the PictureBox will handle image placement and control sizing.</target>
        <note />
      </trans-unit>
      <trans-unit id="PictureBoxWaitOnLoadDescr">
        <source>Controls whether processing will stop until the image is loaded.</source>
        <target state="new">Controls whether processing will stop until the image is loaded.</target>
        <note />
      </trans-unit>
      <trans-unit id="PopupControlBadParentArgument">
        <source>Cannot set the ParentPopup to be yourself.</source>
        <target state="new">Cannot set the ParentPopup to be yourself.</target>
        <note />
      </trans-unit>
      <trans-unit id="PreviewKeyDownDescr">
        <source>Occurs before the KeyDown event when a key is pressed while focus is on this control.</source>
        <target state="new">Occurs before the KeyDown event when a key is pressed while focus is on this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintControllerWithStatusDialog_Cancel">
        <source>Cancel</source>
        <target state="new">Cancel</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintControllerWithStatusDialog_Canceling">
        <source>Canceling Print...</source>
        <target state="new">Canceling Print...</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintControllerWithStatusDialog_DialogTitlePreview">
        <source>Generating Previews</source>
        <target state="new">Generating Previews</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintControllerWithStatusDialog_DialogTitlePrint">
        <source>Printing</source>
        <target state="new">Printing</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintControllerWithStatusDialog_NowPrinting">
        <source>Page {0} of {1}</source>
        <target state="new">Page {0} of {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewAntiAliasDescr">
        <source>Controls if the print preview will be rendered with anti-aliasing. Using AntiAlias provides a more accurate display of the document, but it is slower.</source>
        <target state="new">Controls if the print preview will be rendered with anti-aliasing. Using AntiAlias provides a more accurate display of the document, but it is slower.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewAutoZoomDescr">
        <source>Determines whether to automatically adjust zoom to fill available space.</source>
        <target state="new">Determines whether to automatically adjust zoom to fill available space.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewColumnsDescr">
        <source>Number of pages across.</source>
        <target state="new">Number of pages across.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewControlZoomNegative">
        <source>Zoom must be 0 or greater. Negative values are not permitted.</source>
        <target state="new">Zoom must be 0 or greater. Negative values are not permitted.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Close">
        <source>&amp;Close</source>
        <target state="new">&amp;Close</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_FourPages">
        <source>Four pages</source>
        <target state="new">Four pages</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_OnePage">
        <source>One page</source>
        <target state="new">One page</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Page">
        <source>&amp;Page</source>
        <target state="new">&amp;Page</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Print">
        <source>Print</source>
        <target state="new">Print</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_PrintPreview">
        <source>Print preview</source>
        <target state="new">Print preview</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_SixPages">
        <source>Six pages</source>
        <target state="new">Six pages</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_ThreePages">
        <source>Three pages</source>
        <target state="new">Three pages</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_TwoPages">
        <source>Two pages</source>
        <target state="new">Two pages</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom">
        <source>Zoom</source>
        <target state="new">Zoom</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom10">
        <source>10%</source>
        <target state="new">10%</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom100">
        <source>100%</source>
        <target state="new">100%</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom150">
        <source>150%</source>
        <target state="new">150%</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom200">
        <source>200%</source>
        <target state="new">200%</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom25">
        <source>25%</source>
        <target state="new">25%</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom50">
        <source>50%</source>
        <target state="new">50%</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom500">
        <source>500%</source>
        <target state="new">500%</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_Zoom75">
        <source>75%</source>
        <target state="new">75%</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDialog_ZoomAuto">
        <source>Auto</source>
        <target state="new">Auto</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewDocumentDescr">
        <source>PrintDocument to be previewed.</source>
        <target state="new">PrintDocument to be previewed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewExceptionPrinting">
        <source>Document cannot be displayed.</source>
        <target state="new">Document cannot be displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewNoPages">
        <source>Document does not contain any pages.</source>
        <target state="new">Document does not contain any pages.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewPrintPreviewControlDescr">
        <source>PrintPreviewControl to use as the dialog's core.</source>
        <target state="new">PrintPreviewControl to use as the dialog's core.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewRowsDescr">
        <source>The number of pages displayed vertically down the screen.</source>
        <target state="new">The number of pages displayed vertically down the screen.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewStartPageDescr">
        <source>Indicates the page number to start previewing.</source>
        <target state="new">Indicates the page number to start previewing.</target>
        <note />
      </trans-unit>
      <trans-unit id="PrintPreviewZoomDescr">
        <source>Indicates how large the pages will appear.</source>
        <target state="new">Indicates how large the pages will appear.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonCheckedGradientBeginDescr">
        <source>Starting color of the gradient used when the button is checked.</source>
        <target state="new">Starting color of the gradient used when the button is checked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonCheckedGradientEndDescr">
        <source>End color of the gradient used when the button is checked.</source>
        <target state="new">End color of the gradient used when the button is checked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonCheckedGradientMiddleDescr">
        <source>Middle color of the gradient used when the button is checked.</source>
        <target state="new">Middle color of the gradient used when the button is checked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonCheckedHighlightBorderDescr">
        <source>Border color to use with ButtonCheckedHighlight.</source>
        <target state="new">Border color to use with ButtonCheckedHighlight.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonCheckedHighlightDescr">
        <source>Solid color used when the button is checked.</source>
        <target state="new">Solid color used when the button is checked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonPressedBorderDescr">
        <source>Border color to use with the pressed button gradient colors (ButtonPressedGradient*).</source>
        <target state="new">Border color to use with the pressed button gradient colors (ButtonPressedGradient*).</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonPressedGradientBeginDescr">
        <source>Starting color of the gradient used when the button is pressed.</source>
        <target state="new">Starting color of the gradient used when the button is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonPressedGradientEndDescr">
        <source>End color of the gradient used when the button is pressed.</source>
        <target state="new">End color of the gradient used when the button is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonPressedGradientMiddleDescr">
        <source>Middle color of the gradient used when the button is pressed.</source>
        <target state="new">Middle color of the gradient used when the button is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonPressedHighlightBorderDescr">
        <source>Border color to use with ButtonPressedHighlight.</source>
        <target state="new">Border color to use with ButtonPressedHighlight.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonPressedHighlightDescr">
        <source>Solid color used when the button is pressed.</source>
        <target state="new">Solid color used when the button is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonSelectedBorderDescr">
        <source>Border color to use with the selected button gradient colors (ButtonCheckedGradient*).</source>
        <target state="new">Border color to use with the selected button gradient colors (ButtonCheckedGradient*).</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonSelectedGradientBeginDescr">
        <source>Starting color of the gradient used when the button is selected.</source>
        <target state="new">Starting color of the gradient used when the button is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonSelectedGradientEndDescr">
        <source>End color of the gradient used when the button is selected.</source>
        <target state="new">End color of the gradient used when the button is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonSelectedGradientMiddleDescr">
        <source>Middle color of the gradient used when the button is selected.</source>
        <target state="new">Middle color of the gradient used when the button is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonSelectedHighlightBorderDescr">
        <source>Border color to use with ButtonSelectedHighlight.</source>
        <target state="new">Border color to use with ButtonSelectedHighlight.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsButtonSelectedHighlightDescr">
        <source>Solid color used when the button is selected.</source>
        <target state="new">Solid color used when the button is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsCheckBackgroundDescr">
        <source>Solid color to use when the button is checked and gradients are being used.</source>
        <target state="new">Solid color to use when the button is checked and gradients are being used.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsCheckPressedBackgroundDescr">
        <source>Solid color to use when the button is checked and selected and gradients are being used.</source>
        <target state="new">Solid color to use when the button is checked and selected and gradients are being used.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsCheckSelectedBackgroundDescr">
        <source>Solid color to use when the button is checked and selected and gradients are being used.</source>
        <target state="new">Solid color to use when the button is checked and selected and gradients are being used.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsGripDarkDescr">
        <source>Color to use to for shadow effects on the grip.</source>
        <target state="new">Color to use to for shadow effects on the grip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsGripLightDescr">
        <source>Color to use to for highlight effects on the grip.</source>
        <target state="new">Color to use to for highlight effects on the grip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsImageMarginGradientBeginDescr">
        <source>Starting color of the gradient used in the image margin.</source>
        <target state="new">Starting color of the gradient used in the image margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsImageMarginGradientEndDescr">
        <source>End color of the gradient used in the image margin.</source>
        <target state="new">End color of the gradient used in the image margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsImageMarginGradientMiddleDescr">
        <source>Middle color of the gradient used in the image margin.</source>
        <target state="new">Middle color of the gradient used in the image margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsImageMarginRevealedGradientBeginDescr">
        <source>Starting color of the gradient used in the image margin when an item is revealed.</source>
        <target state="new">Starting color of the gradient used in the image margin when an item is revealed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsImageMarginRevealedGradientEndDescr">
        <source>End color of the gradient used in the image margin when an item is revealed.</source>
        <target state="new">End color of the gradient used in the image margin when an item is revealed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsImageMarginRevealedGradientMiddleDescr">
        <source>Middle color of the gradient used in the image margin when an item is revealed.</source>
        <target state="new">Middle color of the gradient used in the image margin when an item is revealed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuBorderDescr">
        <source>The border color to use around the edge of a drop-down menu.</source>
        <target state="new">The border color to use around the edge of a drop-down menu.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuItemBorderDescr">
        <source>The border color to use with MenuItem.</source>
        <target state="new">The border color to use with MenuItem.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuItemPressedGradientBeginDescr">
        <source>Starting color of the gradient used when a top level menu item is pressed.</source>
        <target state="new">Starting color of the gradient used when a top level menu item is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuItemPressedGradientEndDescr">
        <source>End color of the gradient used when a top level menu item is pressed.</source>
        <target state="new">End color of the gradient used when a top level menu item is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuItemPressedGradientMiddleDescr">
        <source>Middle color of the gradient used when a top level menu item is pressed.</source>
        <target state="new">Middle color of the gradient used when a top level menu item is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuItemSelectedDescr">
        <source>Solid color to use when a non-top level menu item is selected</source>
        <target state="new">Solid color to use when a non-top level menu item is selected</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuItemSelectedGradientBeginDescr">
        <source>Starting color of the gradient used when the menu item is selected.</source>
        <target state="new">Starting color of the gradient used when the menu item is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuItemSelectedGradientEndDescr">
        <source>End color of the gradient used when the menu item is selected.</source>
        <target state="new">End color of the gradient used when the menu item is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuStripGradientBeginDescr">
        <source>Starting color of the gradient used in the MenuStrip.</source>
        <target state="new">Starting color of the gradient used in the MenuStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsMenuStripGradientEndDescr">
        <source>Middle color of the gradient used in the MenuStrip.</source>
        <target state="new">Middle color of the gradient used in the MenuStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsOverflowButtonGradientBeginDescr">
        <source>Starting color of the gradient used in the overflow button.</source>
        <target state="new">Starting color of the gradient used in the overflow button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsOverflowButtonGradientEndDescr">
        <source>End color of the gradient used in the overflow button.</source>
        <target state="new">End color of the gradient used in the overflow button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsOverflowButtonGradientMiddleDescr">
        <source>Middle color of the gradient used in the overflow button.</source>
        <target state="new">Middle color of the gradient used in the overflow button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsRaftingContainerGradientBeginDescr">
        <source>Starting color of the gradient used in the RaftingContainer.</source>
        <target state="new">Starting color of the gradient used in the RaftingContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsRaftingContainerGradientEndDescr">
        <source>End color of the gradient used in the RaftingContainer.</source>
        <target state="new">End color of the gradient used in the RaftingContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsSeparatorDarkDescr">
        <source>Color to use to for shadow effects on the separator.</source>
        <target state="new">Color to use to for shadow effects on the separator.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsSeparatorLightDescr">
        <source>Color to use to for highlight effects on the separator.</source>
        <target state="new">Color to use to for highlight effects on the separator.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsStatusStripGradientBeginDescr">
        <source>Starting color of the gradient used in the StatusStrip.</source>
        <target state="new">Starting color of the gradient used in the StatusStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsStatusStripGradientEndDescr">
        <source>End color of the gradient used in the StatusStrip.</source>
        <target state="new">End color of the gradient used in the StatusStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripBorderDescr">
        <source>Border color to use on the bottom edge of the ToolStrip.</source>
        <target state="new">Border color to use on the bottom edge of the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripContentPanelGradientBeginDescr">
        <source>Starting color of the gradient used in the ToolStripContentPanel.</source>
        <target state="new">Starting color of the gradient used in the ToolStripContentPanel.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripContentPanelGradientEndDescr">
        <source>End color of the gradient used in the ToolStripContentPanel.</source>
        <target state="new">End color of the gradient used in the ToolStripContentPanel.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripDropDownBackgroundDescr">
        <source>Solid background color of the ToolStripDropDown.</source>
        <target state="new">Solid background color of the ToolStripDropDown.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripGradientBeginDescr">
        <source>Starting color of the gradient used in the ToolStrip background.</source>
        <target state="new">Starting color of the gradient used in the ToolStrip background.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripGradientEndDescr">
        <source>End color of the gradient used in the ToolStrip background.</source>
        <target state="new">End color of the gradient used in the ToolStrip background.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripGradientMiddleDescr">
        <source>Middle color of the gradient used in the ToolStrip background.</source>
        <target state="new">Middle color of the gradient used in the ToolStrip background.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripPanelGradientBeginDescr">
        <source>Starting color of the gradient used in the ToolStripPanel.</source>
        <target state="new">Starting color of the gradient used in the ToolStripPanel.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProfessionalColorsToolStripPanelGradientEndDescr">
        <source>End color of the gradient used in the ToolStripPanel.</source>
        <target state="new">End color of the gradient used in the ToolStripPanel.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarIncrementMarqueeException">
        <source>Increment should not be called if the style is Marquee.</source>
        <target state="new">Increment should not be called if the style is Marquee.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarMarqueeAnimationSpeed">
        <source>The speed of the marquee animation in milliseconds.</source>
        <target state="new">The speed of the marquee animation in milliseconds.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarMaximumDescr">
        <source>The upper bound of the range this ProgressBar is working with.</source>
        <target state="new">The upper bound of the range this ProgressBar is working with.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarMinimumDescr">
        <source>The lower bound of the range this ProgressBar is working with.</source>
        <target state="new">The lower bound of the range this ProgressBar is working with.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarPerformStepMarqueeException">
        <source>PerformStep should not be called if the style is Marquee.</source>
        <target state="new">PerformStep should not be called if the style is Marquee.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarStepDescr">
        <source>The amount to increment the current value of the control by when the PerformStep() method is called.</source>
        <target state="new">The amount to increment the current value of the control by when the PerformStep() method is called.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarStyleDescr">
        <source>This property allows the user to set the style of the ProgressBar.</source>
        <target state="new">This property allows the user to set the style of the ProgressBar.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarValueDescr">
        <source>The current value for the ProgressBar, in the range specified by the minimum and maximum properties.</source>
        <target state="new">The current value for the ProgressBar, in the range specified by the minimum and maximum properties.</target>
        <note />
      </trans-unit>
      <trans-unit id="ProgressBarValueMarqueeException">
        <source>Value must not be set if the style is Marquee.</source>
        <target state="new">Value must not be set if the style is Marquee.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryAppearance">
        <source>Appearance</source>
        <target state="new">Appearance</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryBehavior">
        <source>Behavior</source>
        <target state="new">Behavior</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryDDE">
        <source>DDE</source>
        <target state="new">DDE</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryData">
        <source>Data</source>
        <target state="new">Data</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryFont">
        <source>Font</source>
        <target state="new">Font</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryList">
        <source>List</source>
        <target state="new">List</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryMisc">
        <source>Misc</source>
        <target state="new">Misc</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryPosition">
        <source>Position</source>
        <target state="new">Position</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryScale">
        <source>Scale</source>
        <target state="new">Scale</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyCategoryText">
        <source>Text</source>
        <target state="new">Text</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridBadTabIndex">
        <source>Tab index not valid.</source>
        <target state="new">Tab index not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCanShowCommandsDesc">
        <source>Sets whether the commands window will be displayed for components with commands.</source>
        <target state="new">Sets whether the commands window will be displayed for components with commands.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCanShowVisualStyleGlyphsDesc">
        <source>Sets whether OS-enabled visual style glyphs can be used for the expansion nodes in the grid area.</source>
        <target state="new">Sets whether OS-enabled visual style glyphs can be used for the expansion nodes in the grid area.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCategoryForeColorDesc">
        <source>The text color used for category headings. The background color is determined by the LineColor property.</source>
        <target state="new">The text color used for category headings. The background color is determined by the LineColor property.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCategorySplitterColorDesc">
        <source>The color of the line that separates categories.</source>
        <target state="new">The color of the line that separates categories.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCommandsActiveLinkColorDesc">
        <source>The color of active links in the hot commands region.</source>
        <target state="new">The color of active links in the hot commands region.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCommandsBackColorDesc">
        <source>The background color of the hot commands region.</source>
        <target state="new">The background color of the hot commands region.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCommandsBorderColorDesc">
        <source>The color of the border surrounding the hot commands region.</source>
        <target state="new">The color of the border surrounding the hot commands region.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCommandsDisabledLinkColorDesc">
        <source>The color of disabled links in the hot commands region.</source>
        <target state="new">The color of disabled links in the hot commands region.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCommandsForeColorDesc">
        <source>The foreground color of the hot commands region.</source>
        <target state="new">The foreground color of the hot commands region.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCommandsLinkColorDesc">
        <source>The color of enabled links in the hot commands region.</source>
        <target state="new">The color of enabled links in the hot commands region.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridCommandsVisibleIfAvailable">
        <source>Show the commands pane if the selected object exposes verbs.</source>
        <target state="new">Show the commands pane if the selected object exposes verbs.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridDefaultAccessibleName">
        <source>Properties Window</source>
        <target state="new">Properties Window</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridDisabledItemForeColorDesc">
        <source>The foreground color of disabled text in the grid area.</source>
        <target state="new">The foreground color of disabled text in the grid area.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridDropDownButtonAccessibleName">
        <source>Browse...</source>
        <target state="new">Browse...</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridDropDownButtonComboBoxAccessibleName">
        <source>Open</source>
        <target state="new">Open</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridExceptionInfo">
        <source>Error Information</source>
        <target state="new">Error Information</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridExceptionWhilePaintingLabel">
        <source>Exception has occurred while painting the label for property '{0}'. See below for details."</source>
        <target state="new">Exception has occurred while painting the label for property '{0}'. See below for details."</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridHelpBackColorDesc">
        <source>The background color of the description pane.</source>
        <target state="new">The background color of the description pane.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridHelpBorderColorDesc">
        <source>The color of the border surrounding the description pane.</source>
        <target state="new">The color of the border surrounding the description pane.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridHelpForeColorDesc">
        <source>The foreground color of the description pane.</source>
        <target state="new">The foreground color of the description pane.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridHelpVisibleDesc">
        <source>Sets whether to show the description pane.</source>
        <target state="new">Sets whether to show the description pane.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridInternalNoProp">
        <source>Get of properties did not succeed.  Log at {0}</source>
        <target state="new">Get of properties did not succeed.  Log at {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridInvalidGridEntry">
        <source>GridItem specified to PropertyGrid.SelectedGridItem must be a valid GridItem.</source>
        <target state="new">GridItem specified to PropertyGrid.SelectedGridItem must be a valid GridItem.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridLargeButtonsDesc">
        <source>Sets buttons to large (32x32) on the PropertyGrid tool bar.</source>
        <target state="new">Sets buttons to large (32x32) on the PropertyGrid tool bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridLineColorDesc">
        <source>Sets the color of the borders and grid lines within the grid area.</source>
        <target state="new">Sets the color of the borders and grid lines within the grid area.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridNoBitmap">
        <source>Tab '{0}' does not have a bitmap.</source>
        <target state="new">Tab '{0}' does not have a bitmap.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridPropertySortChangedDescr">
        <source>Occurs when the PropertySort property on the PropertyGrid has changed.</source>
        <target state="new">Occurs when the PropertySort property on the PropertyGrid has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridPropertySortDesc">
        <source>Sets the type of sorting that the PropertyGrid will use to display properties.</source>
        <target state="new">Sets the type of sorting that the PropertyGrid will use to display properties.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridPropertyTabCollectionReadOnly">
        <source>PropertyTabCollection is read-only.</source>
        <target state="new">PropertyTabCollection is read-only.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridPropertyTabchangedDescr">
        <source>Occurs when a property tab changes.</source>
        <target state="new">Occurs when a property tab changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridPropertyValueChangedDescr">
        <source>Occurs when a property value changes.</source>
        <target state="new">Occurs when a property value changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridPropertyValueSelectedFormat">
        <source> {0} selected.</source>
        <target state="new"> {0} selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridRemotedObject">
        <source>Object {0} is being remoted by a proxy that does not support interface discovery.  This type of remoted object is not supported.</source>
        <target state="new">Object {0} is being remoted by a proxy that does not support interface discovery.  This type of remoted object is not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridRemoveStaticTabs">
        <source>Static tabs cannot be removed from the PropertyGrid.</source>
        <target state="new">Static tabs cannot be removed from the PropertyGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridResetValue">
        <source>Reset property '{0}'</source>
        <target state="new">Reset property '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridSelectedGridItemChangedDescr">
        <source>Occurs when the selected grid item has changed.</source>
        <target state="new">Occurs when the selected grid item has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridSelectedItemWithFocusBackColorDesc">
        <source>The background color of selected items that have focus.</source>
        <target state="new">The background color of selected items that have focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridSelectedItemWithFocusForeColorDesc">
        <source>The foreground color of selected items that have focus.</source>
        <target state="new">The foreground color of selected items that have focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridSelectedObjectDesc">
        <source>Sets the currently selected object that the grid will browse.</source>
        <target state="new">Sets the currently selected object that the grid will browse.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridSelectedObjectsChangedDescr">
        <source>Occurs when the SelectedObjects property has changed.</source>
        <target state="new">Occurs when the SelectedObjects property has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridSet">
        <source>'objs' array must have at least {0} members.</source>
        <target state="new">'objs' array must have at least {0} members.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridSetNull">
        <source>Item {0} in the 'objs' array is null.  The array must begin with at least {1} members.</source>
        <target state="new">Item {0} in the 'objs' array is null.  The array must begin with at least {1} members.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridSetValue">
        <source>Set Property '{0}'</source>
        <target state="new">Set Property '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridTabName">
        <source>Tab '{0}' must have a valid name.</source>
        <target state="new">Tab '{0}' must have a valid name.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridTabScope">
        <source>TabScope must be TabScopeEnum.Component or TabScopeEnum.Document</source>
        <target state="new">TabScope must be TabScopeEnum.Component or TabScopeEnum.Document</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridTitle">
        <source>PropertyGrid</source>
        <target state="new">PropertyGrid</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridToolbarAccessibleName">
        <source>ToolBar</source>
        <target state="new">ToolBar</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridToolbarVisibleDesc">
        <source>Sets whether to display the ToolBar at the top of the PropertyGrid.</source>
        <target state="new">Sets whether to display the ToolBar at the top of the PropertyGrid.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridViewBackColorDesc">
        <source>Sets the background color of the grid area.</source>
        <target state="new">Sets the background color of the grid area.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridViewBorderColorDesc">
        <source>The color of the border surrounding the grid area.</source>
        <target state="new">The color of the border surrounding the grid area.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridViewEditorCreatedInvalidObject">
        <source>Editor created an object that is not valid.  The created object must be of type '{0}'.</source>
        <target state="new">Editor created an object that is not valid.  The created object must be of type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyGridViewForeColorDesc">
        <source>Sets the foreground color of the grid area.</source>
        <target state="new">Sets the foreground color of the grid area.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyManagerPropDoesNotExist">
        <source>Property {0} does not exist in {1}.</source>
        <target state="new">Property {0} does not exist in {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertyValueInvalidEntry">
        <source>One or more entries are not valid in the IDictionary parameter. Verify that all values match up to the object's properties.</source>
        <target state="new">One or more entries are not valid in the IDictionary parameter. Verify that all values match up to the object's properties.</target>
        <note />
      </trans-unit>
      <trans-unit id="RTL">
        <source>RTL_False</source>
        <target state="new">RTL_False</target>
        <note />
      </trans-unit>
      <trans-unit id="RadioButtonAppearanceDescr">
        <source>Controls whether the RadioButton appears as normal or as a Windows PushButton.</source>
        <target state="new">Controls whether the RadioButton appears as normal or as a Windows PushButton.</target>
        <note />
      </trans-unit>
      <trans-unit id="RadioButtonAutoCheckDescr">
        <source>Causes the radio button to automatically change state when clicked.</source>
        <target state="new">Causes the radio button to automatically change state when clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="RadioButtonCheckAlignDescr">
        <source>Determines the location of the check box inside the control.</source>
        <target state="new">Determines the location of the check box inside the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="RadioButtonCheckedDescr">
        <source>Indicates whether the radio button is checked or not.</source>
        <target state="new">Indicates whether the radio button is checked or not.</target>
        <note />
      </trans-unit>
      <trans-unit id="RadioButtonOnAppearanceChangedDescr">
        <source>Event raised when the value of the Appearance property is changed on RadioButton.</source>
        <target state="new">Event raised when the value of the Appearance property is changed on RadioButton.</target>
        <note />
      </trans-unit>
      <trans-unit id="RadioButtonOnCheckedChangedDescr">
        <source>Occurs whenever the 'checked' property changes value.</source>
        <target state="new">Occurs whenever the 'checked' property changes value.</target>
        <note />
      </trans-unit>
      <trans-unit id="RadioButtonOnStartPageChangedDescr">
        <source>Event raised when the value of the StartPage property is changed on RadioButton.</source>
        <target state="new">Event raised when the value of the StartPage property is changed on RadioButton.</target>
        <note />
      </trans-unit>
      <trans-unit id="RadioButtonOnTextAlignChangedDescr">
        <source>Occurs when the value of the TextAlign property changes</source>
        <target state="new">Occurs when the value of the TextAlign property changes</target>
        <note />
      </trans-unit>
      <trans-unit id="ReadonlyControlsCollection">
        <source>Collection is read only.</source>
        <target state="new">Collection is read only.</target>
        <note />
      </trans-unit>
      <trans-unit id="RegisterCFFailed">
        <source>Clipboard format registration did not succeed.</source>
        <target state="new">Clipboard format registration did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="RelatedListManagerChild">
        <source>Child list for field {0} cannot be created.</source>
        <target state="new">Child list for field {0} cannot be created.</target>
        <note />
      </trans-unit>
      <trans-unit id="ResXResourceWriterSaved">
        <source>Resource writer has been saved.  You may not edit it.</source>
        <target state="new">Resource writer has been saved.  You may not edit it.</target>
        <note />
      </trans-unit>
      <trans-unit id="RestartNotSupported">
        <source>Restart method is not supported for this application type.</source>
        <target state="new">Restart method is not supported for this application type.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichControlLresult">
        <source>Lresult for the accessibility object cannot be obtained.</source>
        <target state="new">Lresult for the accessibility object cannot be obtained.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxAutoWordSelection">
        <source>Turns on/off automatic word selection.</source>
        <target state="new">Turns on/off automatic word selection.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxBulletIndent">
        <source>Defines the indent for the bullets in the control.</source>
        <target state="new">Defines the indent for the bullets in the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxCanRedoDescr">
        <source>Indicates if the rich edit control can redo the previous action.</source>
        <target state="new">Indicates if the rich edit control can redo the previous action.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxContentsResized">
        <source>Occurs when the control's contents are either smaller or larger than the control's window size.</source>
        <target state="new">Occurs when the control's contents are either smaller or larger than the control's window size.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxDetectURLs">
        <source>Indicates whether URLs are automatically formatted as links.</source>
        <target state="new">Indicates whether URLs are automatically formatted as links.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxEnableAutoDragDrop">
        <source>Enable drag/drop of text, pictures, and other data</source>
        <target state="new">Enable drag/drop of text, pictures, and other data</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxHScroll">
        <source>Occurs when the control's horizontal scroll bar is clicked.</source>
        <target state="new">Occurs when the control's horizontal scroll bar is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxIMEChange">
        <source>Occurs when the control's IME conversion status changes. (East Asian versions of OS only.)</source>
        <target state="new">Occurs when the control's IME conversion status changes. (East Asian versions of OS only.)</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxLinkClick">
        <source>Occurs when a hyperlink in the text is clicked.</source>
        <target state="new">Occurs when a hyperlink in the text is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxProtected">
        <source>Occurs when the user takes an action that would change a protected range of text.</source>
        <target state="new">Occurs when the user takes an action that would change a protected range of text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxRTF">
        <source>Defines the rich text-formatted contents of the control.</source>
        <target state="new">Defines the rich text-formatted contents of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxRedoActionNameDescr">
        <source>The name of the action that will be performed if the user redoes a previous action.</source>
        <target state="new">The name of the action that will be performed if the user redoes a previous action.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxRightMargin">
        <source>Defines the right margin dimensions.</source>
        <target state="new">Defines the right margin dimensions.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxScrollBars">
        <source>Defines the behavior of the scroll bars of the control.</source>
        <target state="new">Defines the behavior of the scroll bars of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelAlignment">
        <source>Defines the alignment of the currently selected text.</source>
        <target state="new">Defines the alignment of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelBackColor">
        <source>Sets the text color for the currently selected text.</source>
        <target state="new">Sets the text color for the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelBullet">
        <source>Turns on/off the bullets in front of the currently selected text.</source>
        <target state="new">Turns on/off the bullets in front of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelChange">
        <source>Occurs when the current selection has changed.</source>
        <target state="new">Occurs when the current selection has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelCharOffset">
        <source>Defines the superscript/subscript mode for the characters.</source>
        <target state="new">Defines the superscript/subscript mode for the characters.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelColor">
        <source>Sets the text color for the currently selected text.</source>
        <target state="new">Sets the text color for the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelFont">
        <source>Defines the font of the currently selected text.</source>
        <target state="new">Defines the font of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelHangingIndent">
        <source>Defines the hanging indent of the currently selected text.</source>
        <target state="new">Defines the hanging indent of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelIndent">
        <source>Defines the indent of the currently selected text.</source>
        <target state="new">Defines the indent of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelMargin">
        <source>Turns on/off the selection margin.</source>
        <target state="new">Turns on/off the selection margin.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelProtected">
        <source>Turns on/off protection around the contents of the currently selected text.</source>
        <target state="new">Turns on/off protection around the contents of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelRTF">
        <source>Defines the rich text formatted contents of the currently selected text.</source>
        <target state="new">Defines the rich text formatted contents of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelRightIndent">
        <source>Defines the right-indent of the currently selected text.</source>
        <target state="new">Defines the right-indent of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelTabs">
        <source>Defines the locations of tab stops in the currently selected text.</source>
        <target state="new">Defines the locations of tab stops in the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelText">
        <source>Displays the currently selected text in the control.</source>
        <target state="new">Displays the currently selected text in the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxSelTypeDescr">
        <source>The type of selection.</source>
        <target state="new">The type of selection.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxUndoActionNameDescr">
        <source>The name of the action that will be performed if the user undoes a previous edit.</source>
        <target state="new">The name of the action that will be performed if the user undoes a previous edit.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxVScroll">
        <source>Occurs when the control's vertical scroll bar is clicked.</source>
        <target state="new">Occurs when the control's vertical scroll bar is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBoxZoomFactor">
        <source>Defines the current scaling factor of the RichTextBox display; 1.0 is normal viewing.</source>
        <target state="new">Defines the current scaling factor of the RichTextBox display; 1.0 is normal viewing.</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBox_IDCut">
        <source>Cut</source>
        <target state="new">Cut</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBox_IDDelete">
        <source>Delete</source>
        <target state="new">Delete</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBox_IDDragDrop">
        <source>Drag and Drop</source>
        <target state="new">Drag and Drop</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBox_IDPaste">
        <source>Paste</source>
        <target state="new">Paste</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBox_IDTyping">
        <source>Typing</source>
        <target state="new">Typing</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextBox_IDUnknown">
        <source>Unknown</source>
        <target state="new">Unknown</target>
        <note />
      </trans-unit>
      <trans-unit id="RichTextFindEndInvalid">
        <source>Value '{0}' is not a valid value for 'end'.  'end' must be greater than or equal to 'start', or -1.</source>
        <target state="new">Value '{0}' is not a valid value for 'end'.  'end' must be greater than or equal to 'start', or -1.</target>
        <note />
      </trans-unit>
      <trans-unit id="SafeTopLevelCaptionFormat">
        <source>{1} - {0} - {2}</source>
        <target state="new">{1} - {0} - {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="SaveFileDialogCreatePrompt">
        <source>Controls whether to prompt the user when a new file is about to be created. It is only applicable if 'ValidateNames' is set to true.</source>
        <target state="new">Controls whether to prompt the user when a new file is about to be created. It is only applicable if 'ValidateNames' is set to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="SaveFileDialogOverWritePrompt">
        <source>Controls whether to prompt the user when an existing file is about to be overwritten. It is only applicable if 'ValidateNames' is set to true.</source>
        <target state="new">Controls whether to prompt the user when an existing file is about to be overwritten. It is only applicable if 'ValidateNames' is set to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="SaveTextError">
        <source>Text is not saved.</source>
        <target state="new">Text is not saved.</target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollBarEnableDescr">
        <source>Gets or sets a Boolean value controlling whether the scrollbar is enabled.</source>
        <target state="new">Gets or sets a Boolean value controlling whether the scrollbar is enabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollBarLargeChangeDescr">
        <source>The amount by which the scroll box position changes when the user clicks in the scroll bar or presses the PAGE UP or PAGE DOWN keys.</source>
        <target state="new">The amount by which the scroll box position changes when the user clicks in the scroll bar or presses the PAGE UP or PAGE DOWN keys.</target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollBarMaximumDescr">
        <source>The upper limit value of the scrollable range. </source>
        <target state="new">The upper limit value of the scrollable range. </target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollBarMinimumDescr">
        <source>The lower limit value of the scrollable range. </source>
        <target state="new">The lower limit value of the scrollable range. </target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollBarOnScrollDescr">
        <source>Occurs when the user moves the scroll box.</source>
        <target state="new">Occurs when the user moves the scroll box.</target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollBarSmallChangeDescr">
        <source>The amount by which the scroll box position changes when the user clicks a scroll arrow or presses an arrow key.</source>
        <target state="new">The amount by which the scroll box position changes when the user clicks a scroll arrow or presses an arrow key.</target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollBarValueDescr">
        <source>The value that the scroll box position represents. </source>
        <target state="new">The value that the scroll box position represents. </target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollBarVisibleDescr">
        <source>Gets or sets a Boolean value controlling whether the scrollbar is showing.</source>
        <target state="new">Gets or sets a Boolean value controlling whether the scrollbar is showing.</target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollableControlHorizontalScrollDescr">
        <source>Gets the horizontal scroll bar for this ScrollableControl.</source>
        <target state="new">Gets the horizontal scroll bar for this ScrollableControl.</target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollableControlRaiseMouseEnterLeaveEventsForScrollBarsDescr">
        <source>Property being set to false will not raise MouseEnter and MouseLeave events until the mouse leaves the client area and the scrollbars.</source>
        <target state="new">Property being set to false will not raise MouseEnter and MouseLeave events until the mouse leaves the client area and the scrollbars.</target>
        <note />
      </trans-unit>
      <trans-unit id="ScrollableControlVerticalScrollDescr">
        <source>Gets the vertical scroll bar for this ScrollableControl.</source>
        <target state="new">Gets the vertical scroll bar for this ScrollableControl.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityAboutDialog">
        <source>Microsoft .NET Application Information</source>
        <target state="new">Microsoft .NET Application Information</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityApplication">
        <source>Application</source>
        <target state="new">Application</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityAsmNameColumn">
        <source>Name</source>
        <target state="new">Name</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityAssembliesTab">
        <source>Assemblies</source>
        <target state="new">Assemblies</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityBugReportLabel">
        <source>To submit a bug report, first save the report, and then click Submit. Attach the saved report to the online form.</source>
        <target state="new">To submit a bug report, first save the report, and then click Submit. Attach the saved report to the online form.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityBugReportTab">
        <source>Beta Bug Report</source>
        <target state="new">Beta Bug Report</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityClose">
        <source>&amp;Close</source>
        <target state="new">&amp;Close</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityCodeBaseColumn">
        <source>CodeBase</source>
        <target state="new">CodeBase</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityFileVersionColumn">
        <source>File Version</source>
        <target state="new">File Version</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityIncludeAppInfo">
        <source>Include &amp;Application Information</source>
        <target state="new">Include &amp;Application Information</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityIncludeSysInfo">
        <source>Include &amp;System Information</source>
        <target state="new">Include &amp;System Information</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityInfoTab">
        <source>Security</source>
        <target state="new">Security</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityRestrictedText">
        <source>Window is running in a restricted mode. Some UI features may be disabled for security reasons. \r\n\r\nFor more information, contact your system administrator or the application author.</source>
        <target state="new">Window is running in a restricted mode. Some UI features may be disabled for security reasons. \r\n\r\nFor more information, contact your system administrator or the application author.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityRestrictedWindowTextMixedZone">
        <source>Mixed Zone</source>
        <target state="new">Mixed Zone</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityRestrictedWindowTextMultipleSites">
        <source>Multiple Sites</source>
        <target state="new">Multiple Sites</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityRestrictedWindowTextUnknownSite">
        <source>Unknown Site</source>
        <target state="new">Unknown Site</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityRestrictedWindowTextUnknownZone">
        <source>Unknown Zone</source>
        <target state="new">Unknown Zone</target>
        <note />
      </trans-unit>
      <trans-unit id="SecuritySaveBug">
        <source>S&amp;ave</source>
        <target state="new">S&amp;ave</target>
        <note />
      </trans-unit>
      <trans-unit id="SecuritySaveFilter">
        <source>Xml Files (*.xml)|*.xml</source>
        <target state="new">Xml Files (*.xml)|*.xml</target>
        <note />
      </trans-unit>
      <trans-unit id="SecuritySubmitBug">
        <source>S&amp;ubmit</source>
        <target state="new">S&amp;ubmit</target>
        <note />
      </trans-unit>
      <trans-unit id="SecuritySubmitBugUrl">
        <source>http://beta.visualstudio.net/net/sdk/feedback.asp</source>
        <target state="new">http://beta.visualstudio.net/net/sdk/feedback.asp</target>
        <note />
      </trans-unit>
      <trans-unit id="SecuritySwitchDescrColumn">
        <source>Description</source>
        <target state="new">Description</target>
        <note />
      </trans-unit>
      <trans-unit id="SecuritySwitchLabel">
        <source>Changing the switch value will affect only the currently running version of this application.</source>
        <target state="new">Changing the switch value will affect only the currently running version of this application.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecuritySwitchNameColumn">
        <source>Name</source>
        <target state="new">Name</target>
        <note />
      </trans-unit>
      <trans-unit id="SecuritySwitchesTab">
        <source>Switches</source>
        <target state="new">Switches</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityToolTipCaption">
        <source>Microsoft .NET Security Warning</source>
        <target state="new">Microsoft .NET Security Warning</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityToolTipMainText">
        <source>Never enter personal information or passwords into a window unless you can verify and trust the source of the request.</source>
        <target state="new">Never enter personal information or passwords into a window unless you can verify and trust the source of the request.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityToolTipSourceInformation">
        <source>Source: {0}</source>
        <target state="new">Source: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityToolTipTextFormat">
        <source>{0}\r\n\r\n{1}</source>
        <target state="new">{0}\r\n\r\n{1}</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityUnrestrictedText">
        <source>Window is running in an unrestricted mode. Although the main window is running unrestricted, some features may be disabled for security reasons. \r\n\r\nFor more information, contact your system administrator or the application author.</source>
        <target state="new">Window is running in an unrestricted mode. Although the main window is running unrestricted, some features may be disabled for security reasons. \r\n\r\nFor more information, contact your system administrator or the application author.</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityVersionColumn">
        <source>Assembly Version</source>
        <target state="new">Assembly Version</target>
        <note />
      </trans-unit>
      <trans-unit id="SelTabCountRange">
        <source>SelTabCount out of range.</source>
        <target state="new">SelTabCount out of range.</target>
        <note />
      </trans-unit>
      <trans-unit id="SelectedNotEqualActual">
        <source>Number of selected items does not match actual selected items.</source>
        <target state="new">Number of selected items does not match actual selected items.</target>
        <note />
      </trans-unit>
      <trans-unit id="SendKeysGroupDelimError">
        <source>Group delimiters are not balanced.</source>
        <target state="new">Group delimiters are not balanced.</target>
        <note />
      </trans-unit>
      <trans-unit id="SendKeysHookFailed">
        <source>Hook cannot be created.</source>
        <target state="new">Hook cannot be created.</target>
        <note />
      </trans-unit>
      <trans-unit id="SendKeysKeywordDelimError">
        <source>Keyword delimiter is missing.</source>
        <target state="new">Keyword delimiter is missing.</target>
        <note />
      </trans-unit>
      <trans-unit id="SendKeysNestingError">
        <source>Only three levels of nesting are supported.</source>
        <target state="new">Only three levels of nesting are supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="SendKeysNoMessageLoop">
        <source>SendKeys cannot run inside this application because the application is not handling Windows messages.  Either change the application to handle messages, or use the SendKeys.SendWait method.</source>
        <target state="new">SendKeys cannot run inside this application because the application is not handling Windows messages.  Either change the application to handle messages, or use the SendKeys.SendWait method.</target>
        <note />
      </trans-unit>
      <trans-unit id="SerializationException">
        <source>Type {0} could not be read from the data in line {1}, position {2}.  The type's internal structure may have changed.  Either implement ISerializable on the type or provide a type converter that can provide a more reliable conversion format, such as text or an array of bytes.  The conversion exception was: {3}</source>
        <target state="new">Type {0} could not be read from the data in line {1}, position {2}.  The type's internal structure may have changed.  Either implement ISerializable on the type or provide a type converter that can provide a more reliable conversion format, such as text or an array of bytes.  The conversion exception was: {3}</target>
        <note />
      </trans-unit>
      <trans-unit id="ShowDialogOnDisabled">
        <source>Forms that are not enabled cannot be displayed as a modal dialog box. Set the form's enabled property to true before calling {0}.</source>
        <target state="new">Forms that are not enabled cannot be displayed as a modal dialog box. Set the form's enabled property to true before calling {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ShowDialogOnModal">
        <source>Form that is already displayed modally cannot be displayed as a modal dialog box. Close the form before calling {0}.</source>
        <target state="new">Form that is already displayed modally cannot be displayed as a modal dialog box. Close the form before calling {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ShowDialogOnNonTopLevel">
        <source>Form that is not a top-level form cannot be displayed as a modal dialog box. Remove the form from any parent form before calling {0}.</source>
        <target state="new">Form that is not a top-level form cannot be displayed as a modal dialog box. Remove the form from any parent form before calling {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ShowDialogOnVisible">
        <source>Form that is already visible cannot be displayed as a modal dialog box. Set the form's visible property to false before calling {0}.</source>
        <target state="new">Form that is already visible cannot be displayed as a modal dialog box. Set the form's visible property to false before calling {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="SortRequiresIBindingList">
        <source>Sorting requires an IBindingList that supports sorting or an IBindingListView that supports advanced sorting.</source>
        <target state="new">Sorting requires an IBindingList that supports sorting or an IBindingListView that supports advanced sorting.</target>
        <note />
      </trans-unit>
      <trans-unit id="SortedAscendingAccessibleStatus">
        <source>Sorted ascending.</source>
        <target state="new">Sorted ascending.</target>
        <note />
      </trans-unit>
      <trans-unit id="SortedDescendingAccessibleStatus">
        <source>Sorted descending.</source>
        <target state="new">Sorted descending.</target>
        <note />
      </trans-unit>
      <trans-unit id="SpinnerAccessibleName">
        <source>Spinner</source>
        <target state="new">Spinner</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerFixedPanelDescr">
        <source>Indicates that a particular SplitContainer's Panel should remain fixed in size during resize events.</source>
        <target state="new">Indicates that a particular SplitContainer's Panel should remain fixed in size during resize events.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerIsSplitterFixedDescr">
        <source>Determines if the splitter can move.</source>
        <target state="new">Determines if the splitter can move.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerOrientationDescr">
        <source>Determines if the splitter is vertical or horizontal.</source>
        <target state="new">Determines if the splitter is vertical or horizontal.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerPanel1CollapsedDescr">
        <source>This determines if Panel1 is collapsed.</source>
        <target state="new">This determines if Panel1 is collapsed.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerPanel1Descr">
        <source>The Left or Top panel in the SplitContainer.</source>
        <target state="new">The Left or Top panel in the SplitContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerPanel1MinSizeDescr">
        <source>Determines the minimum distance of pixels of the splitter from the left or the top edge of Panel1.</source>
        <target state="new">Determines the minimum distance of pixels of the splitter from the left or the top edge of Panel1.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerPanel2CollapsedDescr">
        <source>This determines if Panel2 is collapsed.</source>
        <target state="new">This determines if Panel2 is collapsed.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerPanel2Descr">
        <source>The Right or Bottom panel in the SplitContainer.</source>
        <target state="new">The Right or Bottom panel in the SplitContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerPanel2MinSizeDescr">
        <source>Determines the minimum distance of pixels of the splitter from the right or the bottom edge of Panel2.</source>
        <target state="new">Determines the minimum distance of pixels of the splitter from the right or the bottom edge of Panel2.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerPanelHeight">
        <source>The SplitterPanel's height cannot be set explicitly. Set the SplitterDistance on the SplitContainer instead.</source>
        <target state="new">The SplitterPanel's height cannot be set explicitly. Set the SplitterDistance on the SplitContainer instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerPanelWidth">
        <source>The SplitterPanel's width cannot be set explicitly. Set the SplitterDistance on the SplitContainer instead.</source>
        <target state="new">The SplitterPanel's width cannot be set explicitly. Set the SplitterDistance on the SplitContainer instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerSplitterDistanceDescr">
        <source>Determines pixel distance of the splitter from the left or top edge.</source>
        <target state="new">Determines pixel distance of the splitter from the left or top edge.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerSplitterIncrementDescr">
        <source>Determines the number of pixels the splitter moves in increments. Default is 1.</source>
        <target state="new">Determines the number of pixels the splitter moves in increments. Default is 1.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerSplitterRectangleDescr">
        <source>Determines the rectangle bounds of the splitter.</source>
        <target state="new">Determines the rectangle bounds of the splitter.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitContainerSplitterWidthDescr">
        <source>Determines the thickness of the splitter.</source>
        <target state="new">Determines the thickness of the splitter.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitterBorderStyleDescr">
        <source>The border type of the control.</source>
        <target state="new">The border type of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitterDistanceNotAllowed">
        <source>SplitterDistance must be between Panel1MinSize and Width - Panel2MinSize.</source>
        <target state="new">SplitterDistance must be between Panel1MinSize and Width - Panel2MinSize.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitterInvalidDockEnum">
        <source>Splitter control must be docked left, right, top, or bottom.</source>
        <target state="new">Splitter control must be docked left, right, top, or bottom.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitterMinExtraDescr">
        <source>Specifies the minimum size of the undocked area.</source>
        <target state="new">Specifies the minimum size of the undocked area.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitterMinSizeDescr">
        <source>Specifies the minimum size of the control being resized.</source>
        <target state="new">Specifies the minimum size of the control being resized.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitterSplitPositionDescr">
        <source>The current position of the splitter, or -1 if it is not bound to a control.</source>
        <target state="new">The current position of the splitter, or -1 if it is not bound to a control.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitterSplitterMovedDescr">
        <source>Occurs when the splitter is done being moved.</source>
        <target state="new">Occurs when the splitter is done being moved.</target>
        <note />
      </trans-unit>
      <trans-unit id="SplitterSplitterMovingDescr">
        <source>Occurs when the splitter is being moved.</source>
        <target state="new">Occurs when the splitter is being moved.</target>
        <note />
      </trans-unit>
      <trans-unit id="StandardOleMarshalObjectGetMarshalerFailed">
        <source>Failed to get marshaler for IID {0}.</source>
        <target state="new">Failed to get marshaler for IID {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarAddFailed">
        <source>Adding the panel to the native status bar control has not succeeded.</source>
        <target state="new">Adding the panel to the native status bar control has not succeeded.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarBadStatusBarPanel">
        <source>Parameter must be of type StatusBarPanel.</source>
        <target state="new">Parameter must be of type StatusBarPanel.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarDrawItem">
        <source>Occurs whenever a panel in the StatusBar needs to be painted.</source>
        <target state="new">Occurs whenever a panel in the StatusBar needs to be painted.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarOnPanelClickDescr">
        <source>Occurs when a panel within the status bar is clicked.</source>
        <target state="new">Occurs when a panel within the status bar is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelAlignmentDescr">
        <source>The alignment of the panel's text.</source>
        <target state="new">The alignment of the panel's text.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelAutoSizeDescr">
        <source>Determines how a panel will resize when the parent changes size.</source>
        <target state="new">Determines how a panel will resize when the parent changes size.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelBorderStyleDescr">
        <source>Determines what type of border a panel has.</source>
        <target state="new">Determines what type of border a panel has.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelIconDescr">
        <source>Determines what icon is displayed in the panel.</source>
        <target state="new">Determines what icon is displayed in the panel.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelMinWidthDescr">
        <source>The minimum width of the panel.</source>
        <target state="new">The minimum width of the panel.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelNameDescr">
        <source>The name of the panel.</source>
        <target state="new">The name of the panel.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelStyleDescr">
        <source>The style of the panel.</source>
        <target state="new">The style of the panel.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelTextDescr">
        <source>The text displayed in the panel.</source>
        <target state="new">The text displayed in the panel.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelToolTipTextDescr">
        <source>The panel's ToolTip text.</source>
        <target state="new">The panel's ToolTip text.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelWidthDescr">
        <source>The width of the panel.</source>
        <target state="new">The width of the panel.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarPanelsDescr">
        <source>The panels in the status bar.</source>
        <target state="new">The panels in the status bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarShowPanelsDescr">
        <source>Determines if a status bar displays panels, or if it displays a single line of text.</source>
        <target state="new">Determines if a status bar displays panels, or if it displays a single line of text.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusBarSizingGripDescr">
        <source>Determines whether a status bar has a sizing grip.</source>
        <target state="new">Determines whether a status bar has a sizing grip.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusStripPanelBorderSidesDescr">
        <source>Specifies the sides of the panel that should display borders.</source>
        <target state="new">Specifies the sides of the panel that should display borders.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusStripPanelBorderStyleDescr">
        <source>Specifies the border style for the panel.</source>
        <target state="new">Specifies the border style for the panel.</target>
        <note />
      </trans-unit>
      <trans-unit id="StatusStripSizingGripDescr">
        <source>Determines whether a StatusStrip has a sizing grip.</source>
        <target state="new">Determines whether a StatusStrip has a sizing grip.</target>
        <note />
      </trans-unit>
      <trans-unit id="SystemInformationFeatureNotSupported">
        <source>Feature not supported with this operating system.</source>
        <target state="new">Feature not supported with this operating system.</target>
        <note />
      </trans-unit>
      <trans-unit id="TABCONTROLTabPageNotOnTabControl">
        <source>TabPage cannot be added to a '{0}'.  TabPages can only be added to TabControls.</source>
        <target state="new">TabPage cannot be added to a '{0}'.  TabPages can only be added to TabControls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TABCONTROLTabPageOnTabPage">
        <source>TabPage cannot be added to another TabPage.  TabPages can only be added to TabControls.</source>
        <target state="new">TabPage cannot be added to another TabPage.  TabPages can only be added to TabControls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TYPEINFOPROCESSORGetDocumentationFailed">
        <source>ITypeInfo::GetDocumentation for DISPID 0x{0:X} returned hr=0x{1:X}, which will cause this property to be ignored. S_OK must be returned. Component={2}</source>
        <target state="new">ITypeInfo::GetDocumentation for DISPID 0x{0:X} returned hr=0x{1:X}, which will cause this property to be ignored. S_OK must be returned. Component={2}</target>
        <note />
      </trans-unit>
      <trans-unit id="TYPEINFOPROCESSORGetRefTypeInfoFailed">
        <source>ITypeInfo::GetRefTypeInfo returned hr={0:X}, so the data type cannot be retrieved.</source>
        <target state="new">ITypeInfo::GetRefTypeInfo returned hr={0:X}, so the data type cannot be retrieved.</target>
        <note />
      </trans-unit>
      <trans-unit id="TYPEINFOPROCESSORGetTypeAttrFailed">
        <source>ITypeInfo::GetTypeAttr returned hr={0:X}, so the data type cannot be retrieved.</source>
        <target state="new">ITypeInfo::GetTypeAttr returned hr={0:X}, so the data type cannot be retrieved.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseAlignmentDescr">
        <source>Determines whether the tabs appear on the top, bottom, left, or right side of the Control (left or right are implicitly multilined).</source>
        <target state="new">Determines whether the tabs appear on the top, bottom, left, or right side of the Control (left or right are implicitly multilined).</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseAppearanceDescr">
        <source>Indicates whether the tabs are painted as buttons or regular tabs.</source>
        <target state="new">Indicates whether the tabs are painted as buttons or regular tabs.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseDrawModeDescr">
        <source>Indicates whether the user or the system paints the captions.</source>
        <target state="new">Indicates whether the user or the system paints the captions.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseHotTrackDescr">
        <source>Indicates whether the tabs visually change when the mouse passes over them.</source>
        <target state="new">Indicates whether the tabs visually change when the mouse passes over them.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseImageListDescr">
        <source>The ImageList object from which this tab takes its images.</source>
        <target state="new">The ImageList object from which this tab takes its images.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseItemSizeDescr">
        <source>Determines the width of fixed-width or owner-draw tabs and the height of all tabs.</source>
        <target state="new">Determines the width of fixed-width or owner-draw tabs and the height of all tabs.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseMultilineDescr">
        <source>Indicates if more than one row of tabs is allowed.</source>
        <target state="new">Indicates if more than one row of tabs is allowed.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBasePaddingDescr">
        <source>Indicates how much extra space should be added around the text/image in the tab.</source>
        <target state="new">Indicates how much extra space should be added around the text/image in the tab.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseRowCountDescr">
        <source>The number of rows currently being displayed in the tab strip.</source>
        <target state="new">The number of rows currently being displayed in the tab strip.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseShowToolTipsDescr">
        <source>Indicates whether ToolTips should be shown for tabs that have their ToolTips set.</source>
        <target state="new">Indicates whether ToolTips should be shown for tabs that have their ToolTips set.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseSizeModeDescr">
        <source>Indicates how tabs are sized.</source>
        <target state="new">Indicates how tabs are sized.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabBaseTabCountDescr">
        <source>The number of tabs in the tab strip.</source>
        <target state="new">The number of tabs in the tab strip.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabControlDeselectedEventDescr">
        <source>Occurs after a tab page is deselected as the topmost tab page.</source>
        <target state="new">Occurs after a tab page is deselected as the topmost tab page.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabControlDeselectingEventDescr">
        <source>Occurs when a tab page is being deselected.</source>
        <target state="new">Occurs when a tab page is being deselected.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabControlInvalidTabPageType">
        <source>Cannot add '{0}' to TabControl.  Only TabPages can be directly added to TabControls.</source>
        <target state="new">Cannot add '{0}' to TabControl.  Only TabPages can be directly added to TabControls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabControlSelectedEventDescr">
        <source>Occurs after a tab page is selected as the topmost tab page.</source>
        <target state="new">Occurs after a tab page is selected as the topmost tab page.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabControlSelectedTabDescr">
        <source>The currently selected tab page.</source>
        <target state="new">The currently selected tab page.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabControlSelectingEventDescr">
        <source>Occurs when a tab page is being selected. </source>
        <target state="new">Occurs when a tab page is being selected. </target>
        <note />
      </trans-unit>
      <trans-unit id="TabControlTabsDescr">
        <source>The TabPages in the TabControl.</source>
        <target state="new">The TabPages in the TabControl.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabItemImageIndexDescr">
        <source>Identifies the image displayed on the tab.</source>
        <target state="new">Identifies the image displayed on the tab.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabItemToolTipTextDescr">
        <source>The text that is shown when the mouse hovers over this tab.</source>
        <target state="new">The text that is shown when the mouse hovers over this tab.</target>
        <note />
      </trans-unit>
      <trans-unit id="TabItemUseVisualStyleBackColorDescr">
        <source>Determines if the background is drawn using visual styles, if supported.</source>
        <target state="new">Determines if the background is drawn using visual styles, if supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableBeginMustBeCalledPrior">
        <source>TableBegin() must be called before using this method.</source>
        <target state="new">TableBegin() must be called before using this method.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableBeginNotCalled">
        <source>No table is currently being printing.  TableBegin() has not been called.</source>
        <target state="new">No table is currently being printing.  TableBegin() has not been called.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableLayoutPanelCellBorderStyleDescr">
        <source>Indicates the appearance of cell borders in a table.</source>
        <target state="new">Indicates the appearance of cell borders in a table.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableLayoutPanelFullDesc">
        <source>Additional Rows or Columns cannot be created.  TableLayoutPanel is full and GrowStyle is 'FixedSize'.</source>
        <target state="new">Additional Rows or Columns cannot be created.  TableLayoutPanel is full and GrowStyle is 'FixedSize'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableLayoutPanelGrowStyleDescr">
        <source>Indicates whether a TableLayoutPanel will expand to include new cells when all existing cells are occupied.</source>
        <target state="new">Indicates whether a TableLayoutPanel will expand to include new cells when all existing cells are occupied.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableLayoutPanelOnPaintCellDescr">
        <source>Occurs when a cell needs repainting.</source>
        <target state="new">Occurs when a cell needs repainting.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableLayoutPanelSpanDesc">
        <source>TableLayoutPanel cannot expand to contain the control, because the panel's GrowStyle property is set to 'FixedSize'.</source>
        <target state="new">TableLayoutPanel cannot expand to contain the control, because the panel's GrowStyle property is set to 'FixedSize'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableLayoutSettingSettingsIsNotSupported">
        <source>Directly setting TableLayoutSettings is not supported.  Use individual properties instead.</source>
        <target state="new">Directly setting TableLayoutSettings is not supported.  Use individual properties instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableLayoutSettingsGetCellPositionDescr">
        <source>Indicates the row and column of the cell.</source>
        <target state="new">Indicates the row and column of the cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="TableLayoutSettingsSetCellPositionDescr">
        <source>Sets the row and column of the cell.</source>
        <target state="new">Sets the row and column of the cell.</target>
        <note />
      </trans-unit>
      <trans-unit id="TablePrintLayoutFromDifferentDocument">
        <source>TablePrintLayout instance specified was constructed for a different document.</source>
        <target state="new">TablePrintLayout instance specified was constructed for a different document.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxAcceptsReturnDescr">
        <source>Indicates if return characters are accepted as input for multiline edit controls.</source>
        <target state="new">Indicates if return characters are accepted as input for multiline edit controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxAcceptsTabDescr">
        <source>Indicates if tab characters are accepted as input for multiline edit controls.</source>
        <target state="new">Indicates if tab characters are accepted as input for multiline edit controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxAutoCompleteCustomSourceDescr">
        <source>The StringCollection to use when the AutoCompleteSource property is set to CustomSource.</source>
        <target state="new">The StringCollection to use when the AutoCompleteSource property is set to CustomSource.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxAutoCompleteModeDescr">
        <source>Indicates the text completion behavior of the text box.</source>
        <target state="new">Indicates the text completion behavior of the text box.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxAutoCompleteSourceDescr">
        <source>The autocomplete source, which can be one of the values from AutoCompleteSource enumeration.</source>
        <target state="new">The autocomplete source, which can be one of the values from AutoCompleteSource enumeration.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxAutoCompleteSourceNoItems">
        <source>The value AutoCompleteSource.ListItems is not applicable to the TextBox control.</source>
        <target state="new">The value AutoCompleteSource.ListItems is not applicable to the TextBox control.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxAutoSizeDescr">
        <source>Enables automatic resizing based on font size for single-line edit controls.</source>
        <target state="new">Enables automatic resizing based on font size for single-line edit controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxBaseOnAcceptsTabChangedDescr">
        <source>Occurs when the value of the AcceptsTab property changes.</source>
        <target state="new">Occurs when the value of the AcceptsTab property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxBaseOnAutoSizeChangedDescr">
        <source>Event raised when the value of the AutoSize property is changed on TextBoxBase.</source>
        <target state="new">Event raised when the value of the AutoSize property is changed on TextBoxBase.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxBaseOnBorderStyleChangedDescr">
        <source>Occurs when the value of the BorderStyle property changes.</source>
        <target state="new">Occurs when the value of the BorderStyle property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxBaseOnHideSelectionChangedDescr">
        <source>Occurs when the value of the HideSelection property changes.</source>
        <target state="new">Occurs when the value of the HideSelection property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxBaseOnModifiedChangedDescr">
        <source>Occurs when the value of the Modified property changes.</source>
        <target state="new">Occurs when the value of the Modified property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxBaseOnMultilineChangedDescr">
        <source>Occurs when the value of the Multiline property changes.</source>
        <target state="new">Occurs when the value of the Multiline property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxBaseOnReadOnlyChangedDescr">
        <source>Occurs when the value of the ReadOnly property changes.</source>
        <target state="new">Occurs when the value of the ReadOnly property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxBorderDescr">
        <source>Indicates whether the edit control should have a border.</source>
        <target state="new">Indicates whether the edit control should have a border.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxCanUndoDescr">
        <source>Indicates if the edit control can undo the previous action.</source>
        <target state="new">Indicates if the edit control can undo the previous action.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxCharacterCasingDescr">
        <source>Indicates if all characters should be left alone or converted to uppercase or lowercase.</source>
        <target state="new">Indicates if all characters should be left alone or converted to uppercase or lowercase.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxHideSelectionDescr">
        <source>Indicates that the selection should be hidden when the edit control loses focus.</source>
        <target state="new">Indicates that the selection should be hidden when the edit control loses focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxLinesDescr">
        <source>The lines of text in a multiline edit, as an array of String values.</source>
        <target state="new">The lines of text in a multiline edit, as an array of String values.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxMaxLengthDescr">
        <source>Specifies the maximum number of characters that can be entered into the edit control.</source>
        <target state="new">Specifies the maximum number of characters that can be entered into the edit control.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxModifiedDescr">
        <source>Indicates if the text in the edit control has been modified by the user.</source>
        <target state="new">Indicates if the text in the edit control has been modified by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxMultilineDescr">
        <source>Controls whether the text of the edit control can span more than one line.</source>
        <target state="new">Controls whether the text of the edit control can span more than one line.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxPasswordCharDescr">
        <source>Indicates the character to display for password input for single-line edit controls.</source>
        <target state="new">Indicates the character to display for password input for single-line edit controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxPreferredHeightDescr">
        <source>The preferred height of this control.</source>
        <target state="new">The preferred height of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxReadOnlyDescr">
        <source>Controls whether the text in the edit control can be changed or not.</source>
        <target state="new">Controls whether the text in the edit control can be changed or not.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxScrollBarsDescr">
        <source>Indicates, for multiline edit controls, which scroll bars will be shown for this control.</source>
        <target state="new">Indicates, for multiline edit controls, which scroll bars will be shown for this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxSelectedTextDescr">
        <source>The currently selected text.</source>
        <target state="new">The currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxSelectionLengthDescr">
        <source>The length of the currently selected text.</source>
        <target state="new">The length of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxSelectionStartDescr">
        <source>The beginning of the currently selected text.</source>
        <target state="new">The beginning of the currently selected text.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxShortcutsEnabledDescr">
        <source>Indicates whether shortcuts defined for the control are enabled.</source>
        <target state="new">Indicates whether shortcuts defined for the control are enabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxTextAlignDescr">
        <source>Indicates how the text should be aligned for edit controls.</source>
        <target state="new">Indicates how the text should be aligned for edit controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxUseSystemPasswordCharDescr">
        <source>Indicates if the text in the edit control should appear as the default password character.</source>
        <target state="new">Indicates if the text in the edit control should appear as the default password character.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextBoxWordWrapDescr">
        <source>Indicates if lines are automatically word-wrapped for multiline edit controls.</source>
        <target state="new">Indicates if lines are automatically word-wrapped for multiline edit controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TextParseFailedFormat">
        <source>Parse of Text("{0}") expected text in the format "{1}" did not succeed.</source>
        <target state="new">Parse of Text("{0}") expected text in the format "{1}" did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ThreadMustBeSTA">
        <source>Current thread must be set to single thread apartment (STA) mode before OLE calls can be made. Ensure that your Main function has STAThreadAttribute marked on it.</source>
        <target state="new">Current thread must be set to single thread apartment (STA) mode before OLE calls can be made. Ensure that your Main function has STAThreadAttribute marked on it.</target>
        <note />
      </trans-unit>
      <trans-unit id="ThreadNoLongerValid">
        <source>An error occurred invoking the method.  The destination thread no longer exists.</source>
        <target state="new">An error occurred invoking the method.  The destination thread no longer exists.</target>
        <note />
      </trans-unit>
      <trans-unit id="ThreadNotPumpingMessages">
        <source>An error occurred invoking the method.  A message loop is required to marshal the thread call.</source>
        <target state="new">An error occurred invoking the method.  A message loop is required to marshal the thread call.</target>
        <note />
      </trans-unit>
      <trans-unit id="TimerEnabledDescr">
        <source>Enables generation of Elapsed events.</source>
        <target state="new">Enables generation of Elapsed events.</target>
        <note />
      </trans-unit>
      <trans-unit id="TimerIntervalDescr">
        <source>The frequency of Elapsed events in milliseconds.</source>
        <target state="new">The frequency of Elapsed events in milliseconds.</target>
        <note />
      </trans-unit>
      <trans-unit id="TimerInvalidInterval">
        <source>Value '{0}' is not a valid value for Interval. Interval must be greater than {1}.</source>
        <target state="new">Value '{0}' is not a valid value for Interval. Interval must be greater than {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="TimerTimerDescr">
        <source>Occurs whenever the specified interval time elapses.</source>
        <target state="new">Occurs whenever the specified interval time elapses.</target>
        <note />
      </trans-unit>
      <trans-unit id="TooManyResumeUpdateMenuHandles">
        <source>Too many calls to ResumeUpdateMenuHandles.</source>
        <target state="new">Too many calls to ResumeUpdateMenuHandles.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarAppearanceDescr">
        <source>Controls the appearance of the ToolBar control, using values from the ToolBarAppearance enumeration.</source>
        <target state="new">Controls the appearance of the ToolBar control, using values from the ToolBarAppearance enumeration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarAutoSizeDescr">
        <source>Controls whether the ToolBar will automatically size itself based on Button size.</source>
        <target state="new">Controls whether the ToolBar will automatically size itself based on Button size.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarBadToolBarButton">
        <source>Parameter must be of type ToolBarButton.</source>
        <target state="new">Parameter must be of type ToolBarButton.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarBorderStyleDescr">
        <source>Controls what type of border the ToolBar control will have.</source>
        <target state="new">Controls what type of border the ToolBar control will have.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonClickDescr">
        <source>Occurs whenever a button in the ToolBar is clicked by the user.</source>
        <target state="new">Occurs whenever a button in the ToolBar is clicked by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonDropDownDescr">
        <source>Occurs whenever a button with the DropDownButton style is pressed.</source>
        <target state="new">Occurs whenever a button with the DropDownButton style is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonEnabledDescr">
        <source>Controls whether this button responds to user input.</source>
        <target state="new">Controls whether this button responds to user input.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonImageIndexDescr">
        <source>Identifies the image displayed on the button.</source>
        <target state="new">Identifies the image displayed on the button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonInvalidDropDownMenuType">
        <source>The drop-down menu for a ToolBarButton must be of type ContextMenu.</source>
        <target state="new">The drop-down menu for a ToolBarButton must be of type ContextMenu.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonMenuDescr">
        <source>The shortcut menu that will appear if this button's style is set to DropDownButton.</source>
        <target state="new">The shortcut menu that will appear if this button's style is set to DropDownButton.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonNotFound">
        <source>References that a non-existent ToolBarButton has been received.</source>
        <target state="new">References that a non-existent ToolBarButton has been received.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonPartialPushDescr">
        <source>Controls whether the button should be displayed as partially pushed or not, but only if the style of the button is ToggleButton.</source>
        <target state="new">Controls whether the button should be displayed as partially pushed or not, but only if the style of the button is ToggleButton.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonPushedDescr">
        <source>Indicates whether the button is pushed or not. This is most commonly seen for buttons with the TOGGLEBUTTON style.</source>
        <target state="new">Indicates whether the button is pushed or not. This is most commonly seen for buttons with the TOGGLEBUTTON style.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonSizeDescr">
        <source>The size of the buttons on the control if the button contents do not require a larger size.</source>
        <target state="new">The size of the buttons on the control if the button contents do not require a larger size.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonStyleDescr">
        <source>Indicates what style of ToolBarButton this will be.</source>
        <target state="new">Indicates what style of ToolBarButton this will be.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonTextDescr">
        <source>The caption to be displayed for this button.</source>
        <target state="new">The caption to be displayed for this button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonToolTipTextDescr">
        <source>The ToolTip text to be displayed for this button.</source>
        <target state="new">The ToolTip text to be displayed for this button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonVisibleDescr">
        <source>Indicates whether this button should be visible.</source>
        <target state="new">Indicates whether this button should be visible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarButtonsDescr">
        <source>The collection of ToolBarButtons that make up this ToolBar.</source>
        <target state="new">The collection of ToolBarButtons that make up this ToolBar.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarDividerDescr">
        <source>Controls whether the ToolBar will display a 3-D line at the top of its client area.</source>
        <target state="new">Controls whether the ToolBar will display a 3-D line at the top of its client area.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarDropDownArrowsDescr">
        <source>Controls whether the ToolBar will display an arrow on the side of drop-down buttons.</source>
        <target state="new">Controls whether the ToolBar will display an arrow on the side of drop-down buttons.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarImageListDescr">
        <source>The ImageList from which this ToolBar will get all of the button images.</source>
        <target state="new">The ImageList from which this ToolBar will get all of the button images.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarImageSizeDescr">
        <source>The size of the images within the ToolBar's ImageList.</source>
        <target state="new">The size of the images within the ToolBar's ImageList.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarShowToolTipsDescr">
        <source>Indicates whether ToolTips will be shown for each of the buttons, if available.</source>
        <target state="new">Indicates whether ToolTips will be shown for each of the buttons, if available.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarTextAlignDescr">
        <source>Controls how the text is positioned relative to the Image in each button.</source>
        <target state="new">Controls how the text is positioned relative to the Image in each button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolBarWrappableDescr">
        <source>Indicates if more than one row of buttons is allowed.</source>
        <target state="new">Indicates if more than one row of buttons is allowed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripAllowItemReorderAndAllowDropCannotBeSetToTrue">
        <source>AllowItemReorder and AllowDrop cannot both be true.</source>
        <target state="new">AllowItemReorder and AllowDrop cannot both be true.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripAllowItemReorderDescr">
        <source>Allows the items to be reordered when the ALT key is pressed.</source>
        <target state="new">Allows the items to be reordered when the ALT key is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripAllowMergeDescr">
        <source>Allow the items to be merged.</source>
        <target state="new">Allow the items to be merged.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripBackColorDescr">
        <source>Specifies the background color of the ToolStrip.</source>
        <target state="new">Specifies the background color of the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripButtonCheckOnClickDescr">
        <source>Indicates whether the item should toggle its selected state when clicked.</source>
        <target state="new">Indicates whether the item should toggle its selected state when clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripButtonCheckedDescr">
        <source>Indicates whether the ToolStripButton is pressed in or not pressed in.</source>
        <target state="new">Indicates whether the ToolStripButton is pressed in or not pressed in.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripCanOnlyPositionItsOwnItems">
        <source>ToolStrip cannot position another ToolStrip's items.</source>
        <target state="new">ToolStrip cannot position another ToolStrip's items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripCanOverflowDescr">
        <source>Indicates whether items can be sent to an overflow menu.</source>
        <target state="new">Indicates whether items can be sent to an overflow menu.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripCollectionMustInsertAndRemove">
        <source>You must explicitly insert one item and remove the other.</source>
        <target state="new">You must explicitly insert one item and remove the other.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerBottomToolStripPanelDescr">
        <source>The bottom panel of the ToolStripContainer.  This area is used for moving ToolStrips, MenuStrips and StatusStrips.</source>
        <target state="new">The bottom panel of the ToolStripContainer.  This area is used for moving ToolStrips, MenuStrips and StatusStrips.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerBottomToolStripPanelVisibleDescr">
        <source>Specifies the visibility of the bottom panel of the ToolStripContainer.</source>
        <target state="new">Specifies the visibility of the bottom panel of the ToolStripContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerContentPanelDescr">
        <source>The center panel of the ToolStripContainer.</source>
        <target state="new">The center panel of the ToolStripContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerDesc">
        <source>Provides panels on each side of the form that can contain one or more ToolStrip, MenuStrip, or StatusStrip controls.</source>
        <target state="new">Provides panels on each side of the form that can contain one or more ToolStrip, MenuStrip, or StatusStrip controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerLeftToolStripPanelDescr">
        <source>The left panel of the ToolStripContainer.  This area is used for moving ToolStrips, MenuStrips and StatusStrips.</source>
        <target state="new">The left panel of the ToolStripContainer.  This area is used for moving ToolStrips, MenuStrips and StatusStrips.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerLeftToolStripPanelVisibleDescr">
        <source>Specifies the visibility of the left panel of the ToolStripContainer.</source>
        <target state="new">Specifies the visibility of the left panel of the ToolStripContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerRightToolStripPanelDescr">
        <source>The right panel of the ToolStripContainer.  This area is used for moving ToolStrips, MenuStrips and StatusStrips.</source>
        <target state="new">The right panel of the ToolStripContainer.  This area is used for moving ToolStrips, MenuStrips and StatusStrips.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerRightToolStripPanelVisibleDescr">
        <source>Specifies the visibility of the right panel of the ToolStripContainer.</source>
        <target state="new">Specifies the visibility of the right panel of the ToolStripContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerTopToolStripPanelDescr">
        <source>The top panel of the ToolStripContainer.  This area is used for moving ToolStrips, MenuStrips and StatusStrips.</source>
        <target state="new">The top panel of the ToolStripContainer.  This area is used for moving ToolStrips, MenuStrips and StatusStrips.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerTopToolStripPanelVisibleDescr">
        <source>Specifies the visibility of the top panel of the ToolStripContainer.</source>
        <target state="new">Specifies the visibility of the top panel of the ToolStripContainer.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContainerUseContentPanel">
        <source>Adding controls directly to the ToolStripContainer is not supported.  Use the 'ContentPanel.Controls' property instead.</source>
        <target state="new">Adding controls directly to the ToolStripContainer is not supported.  Use the 'ContentPanel.Controls' property instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripContentPanelOnLoadDescr">
        <source>Occurs whenever the content panel loads.</source>
        <target state="new">Occurs whenever the content panel loads.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDefaultDropDownDirectionDescr">
        <source>Specifies the default direction for DropDowns to open.</source>
        <target state="new">Specifies the default direction for DropDowns to open.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDoesntSupportAutoScroll">
        <source>ToolStrip doesn't support the AutoScroll property.</source>
        <target state="new">ToolStrip doesn't support the AutoScroll property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownAutoCloseDescr">
        <source>Specifies whether the DropDown automatically closes through user action.</source>
        <target state="new">Specifies whether the DropDown automatically closes through user action.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownButtonShowDropDownArrowDescr">
        <source>Specifies whether or not an arrow should be shown on the drop down button.</source>
        <target state="new">Specifies whether or not an arrow should be shown on the drop down button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownClosedDecr">
        <source>Occurs when the DropDown has closed.</source>
        <target state="new">Occurs when the DropDown has closed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownClosingDecr">
        <source>Occurs when the DropDown is about to close.</source>
        <target state="new">Occurs when the DropDown is about to close.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownDescr">
        <source>Specifies a ToolStripDropDown to show when the item is clicked.</source>
        <target state="new">Specifies a ToolStripDropDown to show when the item is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownItemDropDownDirectionDescr">
        <source>Specifies the direction in which to drop the drop down.</source>
        <target state="new">Specifies the direction in which to drop the drop down.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownItemsDescr">
        <source>Specifies a ToolStripItem to display when the item is clicked.</source>
        <target state="new">Specifies a ToolStripItem to display when the item is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownMenuShowCheckMarginDescr">
        <source>Specifies whether the check margin will be shown.</source>
        <target state="new">Specifies whether the check margin will be shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownMenuShowImageMarginDescr">
        <source>Specifies whether the image margin will be shown.</source>
        <target state="new">Specifies whether the image margin will be shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownOpenedDescr">
        <source>Occurs when the DropDown has opened.</source>
        <target state="new">Occurs when the DropDown has opened.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownOpeningDescr">
        <source>Occurs when the DropDown is opening.</source>
        <target state="new">Occurs when the DropDown is opening.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownPreferredWidthDescr">
        <source>Specifies the PreferredWidth of the ToolStripDropDown when it is shown.</source>
        <target state="new">Specifies the PreferredWidth of the ToolStripDropDown when it is shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripDropDownsCantBeRafted">
        <source>ToolStripDropDown does not support rafting.</source>
        <target state="new">ToolStripDropDown does not support rafting.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripGripAccessibleName">
        <source>Grip</source>
        <target state="new">Grip</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripGripDisplayStyleDescr">
        <source>Specifies the orientation of the grip on the ToolStrip.</source>
        <target state="new">Specifies the orientation of the grip on the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripGripMargin">
        <source>Specifies the external spacing between the grip and the padding of the ToolStrip and the displayed item.</source>
        <target state="new">Specifies the external spacing between the grip and the padding of the ToolStrip and the displayed item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripGripStyleDescr">
        <source>Specifies visibility of the grip on the ToolStrip.</source>
        <target state="new">Specifies visibility of the grip on the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripImageListDescr">
        <source>Specifies the ImageList on the ToolStrip.</source>
        <target state="new">Specifies the ImageList on the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripImageScalingSizeDescr">
        <source>Specifies the size of images on items.  To control the scaling of items, use the 'ToolStripItem.ImageScaling' property.</source>
        <target state="new">Specifies the size of images on items.  To control the scaling of items, use the 'ToolStripItem.ImageScaling' property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAccessibilityObjectDescr">
        <source>The AccessibleObject assigned to the control.</source>
        <target state="new">The AccessibleObject assigned to the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAccessibleDefaultActionDescr">
        <source>The default action description of the item.</source>
        <target state="new">The default action description of the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAccessibleDescriptionDescr">
        <source>The description that will be reported to accessibility clients.</source>
        <target state="new">The description that will be reported to accessibility clients.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAccessibleNameDescr">
        <source>The name that will be reported to accessibility clients.</source>
        <target state="new">The name that will be reported to accessibility clients.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAccessibleRoleDescr">
        <source>The role that will be reported to accessibility clients.</source>
        <target state="new">The role that will be reported to accessibility clients.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAddedDescr">
        <source>Occurs when a ToolStripItem has been added to the ToolStrip's item collection.</source>
        <target state="new">Occurs when a ToolStripItem has been added to the ToolStrip's item collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAlignment">
        <source>The alignment of the item with respect to it's owner ToolStrip.</source>
        <target state="new">The alignment of the item with respect to it's owner ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAlignmentDescr">
        <source>Indicates whether the item aligns toward the beginning or end of the ToolStrip.</source>
        <target state="new">Indicates whether the item aligns toward the beginning or end of the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAllowDropDescr">
        <source>Determines if the item will receive drag-drop notifications.</source>
        <target state="new">Determines if the item will receive drag-drop notifications.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAutoSizeDescr">
        <source>Determines whether the item should automatically size based on its image and text.</source>
        <target state="new">Determines whether the item should automatically size based on its image and text.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAutoToolTipDescr">
        <source>Specifies whether to use the Text or ToolTipText property to display on the ToolTip.</source>
        <target state="new">Specifies whether to use the Text or ToolTipText property to display on the ToolTip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemAvailableDescr">
        <source>Specifies whether or not an item should be placed on a ToolStrip.  </source>
        <target state="new">Specifies whether or not an item should be placed on a ToolStrip.  </target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemBackColorDescr">
        <source>The background color used to display text and graphics in the control.</source>
        <target state="new">The background color used to display text and graphics in the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemCircularReference">
        <source>Cannot add owner item to the drop-down items collection.</source>
        <target state="new">Cannot add owner item to the drop-down items collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemCollectionIsReadOnly">
        <source>Collection of ToolStripItems is read-only.</source>
        <target state="new">Collection of ToolStripItems is read-only.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemDisplayStyleDescr">
        <source>Specifies whether the image and text are rendered.</source>
        <target state="new">Specifies whether the image and text are rendered.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemDoubleClickedEnabledDescr">
        <source>Specifies whether the DoubleClick event will occur.</source>
        <target state="new">Specifies whether the DoubleClick event will occur.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemDrawModeDescr">
        <source>Specifies the drawing mode of the ToolStrip item.</source>
        <target state="new">Specifies the drawing mode of the ToolStrip item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemEnabledChangedDescr">
        <source>Occurs when the enabled state of the item has changed.</source>
        <target state="new">Occurs when the enabled state of the item has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemEnabledDescr">
        <source>Indicates whether the control is enabled.</source>
        <target state="new">Indicates whether the control is enabled.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemFontDescr">
        <source>The font used to display text in the item.</source>
        <target state="new">The font used to display text in the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemForeColorDescr">
        <source>The foreground color used to display text and graphics in the item.</source>
        <target state="new">The foreground color used to display text and graphics in the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemImageAlignDescr">
        <source>The alignment of the image that will be displayed on the item.</source>
        <target state="new">The alignment of the image that will be displayed on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemImageDescr">
        <source>The image that will be displayed on the item.</source>
        <target state="new">The image that will be displayed on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemImageIndexDescr">
        <source>The index of the image in the ImageList to display on the item.</source>
        <target state="new">The index of the image in the ImageList to display on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemImageKeyDescr">
        <source>The key representing the image in the ImageList to display on the item.</source>
        <target state="new">The key representing the image in the ImageList to display on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemImageList">
        <source>The ImageList to get the image to display on the item.</source>
        <target state="new">The ImageList to get the image to display on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemImageScalingDescr">
        <source>Specifies whether the image on the item will size to fit on the ToolStrip.  To control the image size, use the 'ToolStrip.ImageScalingSize' property.</source>
        <target state="new">Specifies whether the image on the item will size to fit on the ToolStrip.  To control the image size, use the 'ToolStrip.ImageScalingSize' property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemImageTransparentColorDescr">
        <source>Specifies the transparent color on the item's image for images that support transparency.</source>
        <target state="new">Specifies the transparent color on the item's image for images that support transparency.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemMarginDescr">
        <source>Specifies the spacing between this item and an adjacent item.</source>
        <target state="new">Specifies the spacing between this item and an adjacent item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnAvailableChangedDescr">
        <source>Occurs when the value of the Available property changes.</source>
        <target state="new">Occurs when the value of the Available property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnBackColorChangedDescr">
        <source>Occurs when the value of the BackColor property is changed on the item.</source>
        <target state="new">Occurs when the value of the BackColor property is changed on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnClickDescr">
        <source>Occurs when the item is clicked.</source>
        <target state="new">Occurs when the item is clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnDragDropDescr">
        <source>Occurs when the mouse drags an item and the user releases the mouse indicating that the item should be 'dropped' into this item.</source>
        <target state="new">Occurs when the mouse drags an item and the user releases the mouse indicating that the item should be 'dropped' into this item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnDragEnterDescr">
        <source>Occurs when the mouse drags an item into the client area for this item.</source>
        <target state="new">Occurs when the mouse drags an item into the client area for this item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnDragLeaveDescr">
        <source>Occurs when the mouse drags an item and is no longer over the client area for this item.</source>
        <target state="new">Occurs when the mouse drags an item and is no longer over the client area for this item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnDragOverDescr">
        <source>Occurs when the mouse drags an item over the client area for this item.</source>
        <target state="new">Occurs when the mouse drags an item over the client area for this item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnForeColorChangedDescr">
        <source>Occurs when the value of the BackColor property is changed on the item.</source>
        <target state="new">Occurs when the value of the BackColor property is changed on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnGiveFeedbackDescr">
        <source>Occurs when the mouse drags an item. The system requests that the Item provide feedback to that effect.</source>
        <target state="new">Occurs when the mouse drags an item. The system requests that the Item provide feedback to that effect.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnGotFocusDescr">
        <source>Occurs when the control gets focus.</source>
        <target state="new">Occurs when the control gets focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnLocationChangedDescr">
        <source>Occurs when the location of a ToolStripItem is updated.</source>
        <target state="new">Occurs when the location of a ToolStripItem is updated.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnLostFocusDescr">
        <source>Occurs when the control loses focus.</source>
        <target state="new">Occurs when the control loses focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnMouseDownDescr">
        <source>Occurs when a mouse button is pressed.</source>
        <target state="new">Occurs when a mouse button is pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnMouseEnterDescr">
        <source>Occurs when the mouse enters the visible part of the item.</source>
        <target state="new">Occurs when the mouse enters the visible part of the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnMouseHoverDescr">
        <source>Occurs when the mouse remains stationary inside of the item for an amount of time.</source>
        <target state="new">Occurs when the mouse remains stationary inside of the item for an amount of time.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnMouseLeaveDescr">
        <source>Occurs when the mouse leaves the visible part of the item.</source>
        <target state="new">Occurs when the mouse leaves the visible part of the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnMouseMoveDescr">
        <source>Occurs when the mouse is moved.</source>
        <target state="new">Occurs when the mouse is moved.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnMouseUpDescr">
        <source>Occurs when a mouse button is released.</source>
        <target state="new">Occurs when a mouse button is released.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnPaintDescr">
        <source>Occurs when an item needs repainting.</source>
        <target state="new">Occurs when an item needs repainting.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnQueryAccessibilityHelpDescr">
        <source>Occurs when an Accessibility client invokes help for the item.</source>
        <target state="new">Occurs when an Accessibility client invokes help for the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnQueryContinueDragDescr">
        <source>Occurs when the mouse drags an item. The system requests whether the drag-and-drop operation should be allowed to continue.</source>
        <target state="new">Occurs when the mouse drags an item. The system requests whether the drag-and-drop operation should be allowed to continue.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnRightToLeftChangedDescr">
        <source>Event raised when the value of the RightToLeft property is changed on this item.</source>
        <target state="new">Event raised when the value of the RightToLeft property is changed on this item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnTextChangedDescr">
        <source>Occurs when the Text property is changed on the item.</source>
        <target state="new">Occurs when the Text property is changed on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOnVisibleChangedDescr">
        <source>Occurs when the visibility of an item has changed.</source>
        <target state="new">Occurs when the visibility of an item has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOverflow">
        <source>Specifies whether an item will always be sent to the overflow, never be sent to the overflow, or sent to the overflow as needed.</source>
        <target state="new">Specifies whether an item will always be sent to the overflow, never be sent to the overflow, or sent to the overflow as needed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOverflowDescr">
        <source>Specifies whether the item will always move to the overflow, move to the overflow as needed, or never move to the overflow.</source>
        <target state="new">Specifies whether the item will always move to the overflow, move to the overflow as needed, or never move to the overflow.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemOwnerChangedDescr">
        <source>Occurs when the value of the Owner property changes.</source>
        <target state="new">Occurs when the value of the Owner property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemPaddingDescr">
        <source>Specifies the internal spacing within this item.</source>
        <target state="new">Specifies the internal spacing within this item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemRemovedDescr">
        <source>Occurs when a ToolStripItem has been removed from the ToolStrip's item collection.</source>
        <target state="new">Occurs when a ToolStripItem has been removed from the ToolStrip's item collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemRightToLeftAutoMirrorImageDescr">
        <source>Specifies whether the image should mirror when the RightToLeft property equals RightToLeft.Yes.</source>
        <target state="new">Specifies whether the image should mirror when the RightToLeft property equals RightToLeft.Yes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemRightToLeftDescr">
        <source>Indicates whether the item should draw right-to-left for RTL languages.</source>
        <target state="new">Indicates whether the item should draw right-to-left for RTL languages.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemSize">
        <source>The size of the item.</source>
        <target state="new">The size of the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemSizeDescr">
        <source>The size of the item in pixels.</source>
        <target state="new">The size of the item in pixels.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemTagDescr">
        <source>User-defined data associated with the item.</source>
        <target state="new">User-defined data associated with the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemTextAlignDescr">
        <source>The alignment of the text that will be displayed on the item.</source>
        <target state="new">The alignment of the text that will be displayed on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemTextDescr">
        <source>The text to display on the item.</source>
        <target state="new">The text to display on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemTextImageRelationDescr">
        <source>Specifies the relative location of the image to the text on the item.</source>
        <target state="new">Specifies the relative location of the image to the text on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemToolTipTextDescr">
        <source>Specifies the text to show on the ToolTip.</source>
        <target state="new">Specifies the text to show on the ToolTip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemVisibleDescr">
        <source>Determines whether the item is visible or hidden.</source>
        <target state="new">Determines whether the item is visible or hidden.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripItemsDescr">
        <source>Collection of items to display on the ToolStrip.</source>
        <target state="new">Collection of items to display on the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLabelActiveLinkColorDescr">
        <source>Specifies the color of the link when the link is active.</source>
        <target state="new">Specifies the color of the link when the link is active.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLabelIsLinkDescr">
        <source>Specifies whether the label acts as a link.</source>
        <target state="new">Specifies whether the label acts as a link.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLabelLinkBehaviorDescr">
        <source>The underlining behavior of the link.</source>
        <target state="new">The underlining behavior of the link.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLabelLinkColorDescr">
        <source>Specifies the color of the link.</source>
        <target state="new">Specifies the color of the link.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLabelLinkVisitedDescr">
        <source>Determines if the hyperlink should be rendered as visited.</source>
        <target state="new">Determines if the hyperlink should be rendered as visited.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLabelVisitedLinkColorDescr">
        <source>Specifies the color of the link when the link has been visited.</source>
        <target state="new">Specifies the color of the link when the link has been visited.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLayoutCompleteDescr">
        <source>Occurs after layout and placement of items on the ToolStrip.</source>
        <target state="new">Occurs after layout and placement of items on the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLayoutStyle">
        <source>Specifies the layout orientation of the ToolStrip.</source>
        <target state="new">Specifies the layout orientation of the ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripLayoutStyleChangedDescr">
        <source>Occurs when the layout style of the ToolStrip has changed.</source>
        <target state="new">Occurs when the layout style of the ToolStrip has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripMenuItemShortcutKeyDisplayStringDescr">
        <source>The string to be displayed as the shortcut key.</source>
        <target state="new">The string to be displayed as the shortcut key.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripMergeActionDescr">
        <source>Specifies what action to take if match is successful.</source>
        <target state="new">Specifies what action to take if match is successful.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripMergeImpossibleIdentical">
        <source>Operation impossible. Source and target are identical.</source>
        <target state="new">Operation impossible. Source and target are identical.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripMergeIndexDescr">
        <source>Used for matching and positioning within target ToolStrip.</source>
        <target state="new">Used for matching and positioning within target ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripMustSupplyItsOwnComboBox">
        <source>Call the empty ToolStripComboBox constructor, which will provide a ComboBox.</source>
        <target state="new">Call the empty ToolStripComboBox constructor, which will provide a ComboBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripMustSupplyItsOwnTextBox">
        <source>Call the empty ToolStripTextBox constructor, which will provide a TextBox.</source>
        <target state="new">Call the empty ToolStripTextBox constructor, which will provide a TextBox.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripOnBeginDrag">
        <source>Occurs when the ToolStrip has started to move within a ToolStripPanel.</source>
        <target state="new">Occurs when the ToolStrip has started to move within a ToolStripPanel.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripOnEndDrag">
        <source>Occurs when the ToolStrip has stopped moving within a ToolStripPanel.</source>
        <target state="new">Occurs when the ToolStrip has stopped moving within a ToolStripPanel.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripOptions">
        <source>ToolBar Options</source>
        <target state="new">ToolBar Options</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripPaintGripDescr">
        <source>Occurs when the move handle needs repainting.</source>
        <target state="new">Occurs when the move handle needs repainting.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripPanelRowControlCollectionIncorrectIndexLength">
        <source>Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.</source>
        <target state="new">Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripPanelRowsDescr">
        <source>A collection of rows in the panel. </source>
        <target state="new">A collection of rows in the panel. </target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripRenderModeDescr">
        <source>The painting styles applied to the control.</source>
        <target state="new">The painting styles applied to the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripRenderModeUseRendererPropertyInstead">
        <source>The RenderMode property cannot directly be set to 'Custom', to use a custom ToolStripRenderer, set the Renderer property instead.</source>
        <target state="new">The RenderMode property cannot directly be set to 'Custom', to use a custom ToolStripRenderer, set the Renderer property instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripRendererChanged">
        <source>Occurs when the value of the Renderer property changes.</source>
        <target state="new">Occurs when the value of the Renderer property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripSaveSettingsDescr">
        <source>Specifies whether the ToolStrip should persist user settings via IPersistComponentSettings.</source>
        <target state="new">Specifies whether the ToolStrip should persist user settings via IPersistComponentSettings.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripSettingsKeyDescr">
        <source>Specifies the settings key to use to save settings.</source>
        <target state="new">Specifies the settings key to use to save settings.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripShowDropDownInvalidOperation">
        <source>DropDown is the same as the Parent ToolStrip. Cannot Drop Down.</source>
        <target state="new">DropDown is the same as the Parent ToolStrip. Cannot Drop Down.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripShowItemToolTipsDescr">
        <source>Specifies whether to display ToolTips on items.</source>
        <target state="new">Specifies whether to display ToolTips on items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripSplitButtonDropDownButtonWidthDescr">
        <source>Specifies how much space to give to the DropDownButton portion of the ToolStripSplitButton.</source>
        <target state="new">Specifies how much space to give to the DropDownButton portion of the ToolStripSplitButton.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripSplitButtonOnButtonClickDescr">
        <source>Occurs when the button portion of the split button has been clicked.</source>
        <target state="new">Occurs when the button portion of the split button has been clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripSplitButtonOnButtonDoubleClickDescr">
        <source>Occurs when the button portion of the split button has been double clicked.</source>
        <target state="new">Occurs when the button portion of the split button has been double clicked.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripSplitButtonOnDefaultItemChangedDescr">
        <source>Occurs when the DefaultItem property has changed.</source>
        <target state="new">Occurs when the DefaultItem property has changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripSplitButtonSplitterWidthDescr">
        <source>Specifies the width of the split section between the default and drop-down button.</source>
        <target state="new">Specifies the width of the split section between the default and drop-down button.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripSplitStackLayoutContainerMustBeAToolStrip">
        <source>Container must be a ToolStrip.</source>
        <target state="new">Container must be a ToolStrip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripStatusLabelBorderSidesDescr">
        <source>Specifies the sides of the panel that should display borders.</source>
        <target state="new">Specifies the sides of the panel that should display borders.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripStatusLabelBorderStyleDescr">
        <source>Specifies the border style for the panel.</source>
        <target state="new">Specifies the border style for the panel.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripStatusLabelSpringDescr">
        <source>Specifies whether the item fills up the remaining space.</source>
        <target state="new">Specifies whether the item fills up the remaining space.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripStretchDescr">
        <source>Specifies whether the ToolStrip stretches from end to end in the rafting container.</source>
        <target state="new">Specifies whether the ToolStrip stretches from end to end in the rafting container.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripTextBoxTextBoxTextAlignChangedDescr">
        <source>Occurs when the value of the TextBoxTextAlign property changes.</source>
        <target state="new">Occurs when the value of the TextBoxTextAlign property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolStripTextDirectionDescr">
        <source>Specifies the direction to draw the text on the item.</source>
        <target state="new">Specifies the direction to draw the text on the item.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipActiveDescr">
        <source>Determines if the ToolTip is active. A tip will only appear if the ToolTip has been activated.</source>
        <target state="new">Determines if the ToolTip is active. A tip will only appear if the ToolTip has been activated.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipAddFailed">
        <source>Adding the tip to the native ToolTip control did not succeed.</source>
        <target state="new">Adding the tip to the native ToolTip control did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipAutoPopDelayDescr">
        <source>Determines the length of time the ToolTip window remains visible if the pointer is stationary inside a ToolTip region.</source>
        <target state="new">Determines the length of time the ToolTip window remains visible if the pointer is stationary inside a ToolTip region.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipAutomaticDelayDescr">
        <source>Sets the values of AutoPopDelay, InitialDelay, and ReshowDelay to the appropriate values.</source>
        <target state="new">Sets the values of AutoPopDelay, InitialDelay, and ReshowDelay to the appropriate values.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipBackColorDescr">
        <source>The background color of the ToolTip control.</source>
        <target state="new">The background color of the ToolTip control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipDrawEventDescr">
        <source>Occurs in OwnerDraw mode when the ToolTip needs to be drawn.</source>
        <target state="new">Occurs in OwnerDraw mode when the ToolTip needs to be drawn.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipEmptyColor">
        <source>Value '{0}' cannot be set to an empty value.</source>
        <target state="new">Value '{0}' cannot be set to an empty value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipForeColorDescr">
        <source>The foreground color of the ToolTip control.</source>
        <target state="new">The foreground color of the ToolTip control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipInitialDelayDescr">
        <source>Determines the length of time the pointer must remain stationary within a ToolTip region before the ToolTip window appears.</source>
        <target state="new">Determines the length of time the pointer must remain stationary within a ToolTip region before the ToolTip window appears.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipIsBalloonDescr">
        <source>Indicates whether the ToolTip will take on a balloon form.</source>
        <target state="new">Indicates whether the ToolTip will take on a balloon form.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipOwnerDrawDescr">
        <source>Controls whether the system or the user paints items/sub items.</source>
        <target state="new">Controls whether the system or the user paints items/sub items.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipPopupEventDescr">
        <source>Occurs whenever a ToolTip is about to be shown.</source>
        <target state="new">Occurs whenever a ToolTip is about to be shown.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipReshowDelayDescr">
        <source>Determines the length of time it takes for subsequent ToolTip windows to appear as the pointer moves from one ToolTip region to another.</source>
        <target state="new">Determines the length of time it takes for subsequent ToolTip windows to appear as the pointer moves from one ToolTip region to another.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipShowAlwaysDescr">
        <source>Determines if the tool tip will be displayed always, even if the parent window is not active.</source>
        <target state="new">Determines if the tool tip will be displayed always, even if the parent window is not active.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipStripAmpersandsDescr">
        <source>When set to true, any ampersands (&amp;) in the Text property are not displayed.</source>
        <target state="new">When set to true, any ampersands (&amp;) in the Text property are not displayed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipTitleDescr">
        <source>Determines the title of the ToolTip.</source>
        <target state="new">Determines the title of the ToolTip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipToolTipDescr">
        <source>Determines the ToolTip shown when the mouse hovers over the control.</source>
        <target state="new">Determines the ToolTip shown when the mouse hovers over the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipToolTipIconDescr">
        <source>Determines the icon that is shown on the ToolTip.</source>
        <target state="new">Determines the icon that is shown on the ToolTip.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipUseAnimationDescr">
        <source>When set to true, animations are used when the ToolTip is shown or hidden.</source>
        <target state="new">When set to true, animations are used when the ToolTip is shown or hidden.</target>
        <note />
      </trans-unit>
      <trans-unit id="ToolTipUseFadingDescr">
        <source>When set to true, a fade effect is used when ToolTips are shown or hidden.</source>
        <target state="new">When set to true, a fade effect is used when ToolTips are shown or hidden.</target>
        <note />
      </trans-unit>
      <trans-unit id="TopLevelControlAdd">
        <source>Top-level control cannot be added to a control.</source>
        <target state="new">Top-level control cannot be added to a control.</target>
        <note />
      </trans-unit>
      <trans-unit id="TopLevelNotAllowedIfActiveX">
        <source>TopLevel property cannot be set to true for ActiveX controls.</source>
        <target state="new">TopLevel property cannot be set to true for ActiveX controls.</target>
        <note />
      </trans-unit>
      <trans-unit id="TopLevelParentedControl">
        <source>Top-level style of a parented control cannot be changed.</source>
        <target state="new">Top-level style of a parented control cannot be changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarAutoSizeDescr">
        <source>Indicates whether the control will resize itself automatically based on a computation of the default scroll bar dimensions.</source>
        <target state="new">Indicates whether the control will resize itself automatically based on a computation of the default scroll bar dimensions.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarLargeChangeDescr">
        <source>The number of positions the slider moves in response to mouse clicks or the PAGE UP and PAGE DOWN keys.</source>
        <target state="new">The number of positions the slider moves in response to mouse clicks or the PAGE UP and PAGE DOWN keys.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarLargeChangeError">
        <source>LargeChange: Value '{0}' must be greater than or equal to 0.</source>
        <target state="new">LargeChange: Value '{0}' must be greater than or equal to 0.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarMaximumDescr">
        <source>The maximum value for the position of the slider on the TrackBar.</source>
        <target state="new">The maximum value for the position of the slider on the TrackBar.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarMinimumDescr">
        <source>The minimum value for the position of the slider on the TrackBar.</source>
        <target state="new">The minimum value for the position of the slider on the TrackBar.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarOnScrollDescr">
        <source>Occurs when the TrackBar slider moves.</source>
        <target state="new">Occurs when the TrackBar slider moves.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarOrientationDescr">
        <source>The orientation of the control.</source>
        <target state="new">The orientation of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarSmallChangeDescr">
        <source>The number of positions the slider moves in response to keyboard input (arrow keys).</source>
        <target state="new">The number of positions the slider moves in response to keyboard input (arrow keys).</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarSmallChangeError">
        <source>SmallChange: Value '{0}' must be greater than or equal to 0.</source>
        <target state="new">SmallChange: Value '{0}' must be greater than or equal to 0.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarTickFrequencyDescr">
        <source>The number of positions between tick marks.</source>
        <target state="new">The number of positions between tick marks.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarTickStyleDescr">
        <source>Indicates where the ticks appear on the TrackBar.</source>
        <target state="new">Indicates where the ticks appear on the TrackBar.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrackBarValueDescr">
        <source>The position of the slider.</source>
        <target state="new">The position of the slider.</target>
        <note />
      </trans-unit>
      <trans-unit id="TransparentBackColorNotAllowed">
        <source>Control does not support transparent background colors.</source>
        <target state="new">Control does not support transparent background colors.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrayIcon_TextTooLong">
        <source>Text length must be less than 64 characters long.</source>
        <target state="new">Text length must be less than 64 characters long.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeBackColorDescr">
        <source>The background color of tree node.</source>
        <target state="new">The background color of tree node.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeBeginEditFailed">
        <source>BeginEdit did not succeed because LabelEdit property is false.</source>
        <target state="new">BeginEdit did not succeed because LabelEdit property is false.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeCheckedDescr">
        <source>Indicates whether the tree node is in a checked state.</source>
        <target state="new">Indicates whether the tree node is in a checked state.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeCollectionBadTreeNode">
        <source>Parameter must be of type TreeNode.</source>
        <target state="new">Parameter must be of type TreeNode.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeForeColorDescr">
        <source>The foreground color of tree node.</source>
        <target state="new">The foreground color of tree node.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeImageIndexDescr">
        <source>The ImageList index value of the image displayed when the tree node is in the unselected state.</source>
        <target state="new">The ImageList index value of the image displayed when the tree node is in the unselected state.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeImageKeyDescr">
        <source>Identifies the image to display on the node when it is not selected.</source>
        <target state="new">Identifies the image to display on the node when it is not selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeIndexDescr">
        <source>The position of the tree node in the tree node collection.</source>
        <target state="new">The position of the tree node in the tree node collection.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeNoParent">
        <source>Full path can only be retrieved when a TreeNode has been added to a TreeView. This TreeNode has not been added to a TreeView.</source>
        <target state="new">Full path can only be retrieved when a TreeNode has been added to a TreeView. This TreeNode has not been added to a TreeView.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeNodeFontDescr">
        <source>The font used to display the text on the tree node's label.</source>
        <target state="new">The font used to display the text on the tree node's label.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeNodeNameDescr">
        <source>The name of the object. </source>
        <target state="new">The name of the object. </target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeSelectedImageIndexDescr">
        <source>The key in the image-list value that represents the image to display when the tree node is in the selected state.</source>
        <target state="new">The key in the image-list value that represents the image to display when the tree node is in the selected state.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeSelectedImageKeyDescr">
        <source>The key in the ImageList value that represents the image to display when the tree node is in the selected state.</source>
        <target state="new">The key in the ImageList value that represents the image to display when the tree node is in the selected state.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeStateImageIndexDescr">
        <source>The index in the StateImageList displayed when CheckBoxes is set to false on the TreeView.</source>
        <target state="new">The index in the StateImageList displayed when CheckBoxes is set to false on the TreeView.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeStateImageKeyDescr">
        <source>Identifies the image to display on the node to indicate its current state.</source>
        <target state="new">Identifies the image to display on the node to indicate its current state.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeTextDescr">
        <source>The text displayed in the label of the tree node.</source>
        <target state="new">The text displayed in the label of the tree node.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeToolTipTextDescr">
        <source>The ToolTip text that will be displayed when the mouse hovers over the node.</source>
        <target state="new">The ToolTip text that will be displayed when the mouse hovers over the node.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewAfterCheckDescr">
        <source>Occurs when a check box on a tree node has been checked or unchecked.</source>
        <target state="new">Occurs when a check box on a tree node has been checked or unchecked.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewAfterCollapseDescr">
        <source>Occurs when a node has been collapsed.</source>
        <target state="new">Occurs when a node has been collapsed.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewAfterEditDescr">
        <source>Occurs when the text of a node has been edited by the user.</source>
        <target state="new">Occurs when the text of a node has been edited by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewAfterExpandDescr">
        <source>Occurs when a node has been expanded.</source>
        <target state="new">Occurs when a node has been expanded.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewAfterSelectDescr">
        <source>Occurs when the selection has been changed.</source>
        <target state="new">Occurs when the selection has been changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewBeforeCheckDescr">
        <source>Occurs when a check box on a tree node is about to be checked or unchecked.</source>
        <target state="new">Occurs when a check box on a tree node is about to be checked or unchecked.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewBeforeCollapseDescr">
        <source>Occurs when a node is about to be collapsed.</source>
        <target state="new">Occurs when a node is about to be collapsed.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewBeforeEditDescr">
        <source>Occurs when the text of a node is about to be edited by the user.</source>
        <target state="new">Occurs when the text of a node is about to be edited by the user.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewBeforeExpandDescr">
        <source>Occurs when a node is about to be expanded.</source>
        <target state="new">Occurs when a node is about to be expanded.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewBeforeSelectDescr">
        <source>Occurs when the selection is about to change.</source>
        <target state="new">Occurs when the selection is about to change.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewCheckBoxesDescr">
        <source>Indicates whether check boxes are displayed beside nodes.</source>
        <target state="new">Indicates whether check boxes are displayed beside nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewDrawModeDescr">
        <source>Controls whether the system or the user paints the nodes.</source>
        <target state="new">Controls whether the system or the user paints the nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewDrawNodeEventDescr">
        <source>Occurs in owner-draw mode, when a node needs to be drawn.</source>
        <target state="new">Occurs in owner-draw mode, when a node needs to be drawn.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewFullRowSelectDescr">
        <source>Indicates whether the highlight spans the width of the TreeView.</source>
        <target state="new">Indicates whether the highlight spans the width of the TreeView.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewHideSelectionDescr">
        <source>Removes highlight from the selected node when control does not have focus.</source>
        <target state="new">Removes highlight from the selected node when control does not have focus.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewHotTrackingDescr">
        <source>Indicates whether nodes give feedback when the mouse is moved over them.</source>
        <target state="new">Indicates whether nodes give feedback when the mouse is moved over them.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewImageIndexDescr">
        <source>The default image index for nodes.</source>
        <target state="new">The default image index for nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewImageKeyDescr">
        <source>The default image key for nodes.</source>
        <target state="new">The default image key for nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewImageListDescr">
        <source>The ImageList control from which node images are taken.</source>
        <target state="new">The ImageList control from which node images are taken.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewIndentDescr">
        <source>The indentation width of child nodes in pixels.</source>
        <target state="new">The indentation width of child nodes in pixels.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewItemHeightDescr">
        <source>The height of every node in the TreeView.</source>
        <target state="new">The height of every node in the TreeView.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewLabelEditDescr">
        <source>Indicates whether the user can edit the label text of nodes.</source>
        <target state="new">Indicates whether the user can edit the label text of nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewLineColorDescr">
        <source>The color of the lines that connect the nodes of the TreeView.</source>
        <target state="new">The color of the lines that connect the nodes of the TreeView.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewNodeMouseClickDescr">
        <source>Occurs when a node is clicked with the mouse.</source>
        <target state="new">Occurs when a node is clicked with the mouse.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewNodeMouseDoubleClickDescr">
        <source>Occurs when a node is double-clicked with the mouse.</source>
        <target state="new">Occurs when a node is double-clicked with the mouse.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewNodeMouseHoverDescr">
        <source>Occurs when the mouse hovers over a TreeNode.</source>
        <target state="new">Occurs when the mouse hovers over a TreeNode.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewNodeSorterDescr">
        <source>The sorting comparer for the TreeView.</source>
        <target state="new">The sorting comparer for the TreeView.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewNodesDescr">
        <source>The root nodes in the TreeView control.</source>
        <target state="new">The root nodes in the TreeView control.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewPathSeparatorDescr">
        <source>The string delimiter used for the path returned by a node's FullPath property.</source>
        <target state="new">The string delimiter used for the path returned by a node's FullPath property.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewScrollableDescr">
        <source>Indicates whether the control will display scroll bars if it contains more nodes than can fit in the visible area.</source>
        <target state="new">Indicates whether the control will display scroll bars if it contains more nodes than can fit in the visible area.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewSelectedImageIndexDescr">
        <source>The default image index for selected nodes.</source>
        <target state="new">The default image index for selected nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewSelectedImageKeyDescr">
        <source>The default image for selected nodes.</source>
        <target state="new">The default image for selected nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewSelectedNodeDescr">
        <source>The currently selected node, or null if no node is selected.</source>
        <target state="new">The currently selected node, or null if no node is selected.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewShowLinesDescr">
        <source>Indicates whether lines are displayed between sibling nodes and between parent and child nodes.</source>
        <target state="new">Indicates whether lines are displayed between sibling nodes and between parent and child nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewShowPlusMinusDescr">
        <source>Indicates if plus/minus buttons are shown next to parent nodes.</source>
        <target state="new">Indicates if plus/minus buttons are shown next to parent nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewShowRootLinesDescr">
        <source>Indicates whether lines are displayed between root nodes.</source>
        <target state="new">Indicates whether lines are displayed between root nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewShowShowNodeToolTipsDescr">
        <source>Indicates whether ToolTips will be displayed on the nodes.</source>
        <target state="new">Indicates whether ToolTips will be displayed on the nodes.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewSortedDescr">
        <source>Indicates whether nodes are sorted.</source>
        <target state="new">Indicates whether nodes are sorted.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewStateImageListDescr">
        <source>The ImageList control used by the TreeView for custom states.</source>
        <target state="new">The ImageList control used by the TreeView for custom states.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewTopNodeDescr">
        <source>The first visible node in the TreeView.</source>
        <target state="new">The first visible node in the TreeView.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeViewVisibleCountDescr">
        <source>The number of visible nodes in the TreeView.</source>
        <target state="new">The number of visible nodes in the TreeView.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerBadXml">
        <source>XML not valid. Expecting {0} tag.</source>
        <target state="new">XML not valid. Expecting {0} tag.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_InstallTitle">
        <source>Application Install - More Information</source>
        <target state="new">Application Install - More Information</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_InternetSource">
        <source>the Internet</source>
        <target state="new">the Internet</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_KnownPublisher">
        <source>This application was published by {0}. Only run applications from publishers that you trust.</source>
        <target state="new">This application was published by {0}. Only run applications from publishers that you trust.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_LocalComputerSource">
        <source>the Local Computer</source>
        <target state="new">the Local Computer</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_LocalNetworkSource">
        <source>the Local Network</source>
        <target state="new">the Local Network</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_Location">
        <source>This application comes from {0}. Only run applications from locations that you trust.</source>
        <target state="new">This application comes from {0}. Only run applications from locations that you trust.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_RunTitle">
        <source>Application Run - More Information</source>
        <target state="new">Application Run - More Information</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_SafeAccess">
        <source>This application has only limited access to your computer.</source>
        <target state="new">This application has only limited access to your computer.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_TrustedSitesSource">
        <source>a Trusted Site</source>
        <target state="new">a Trusted Site</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_UnknownPublisher">
        <source>The publisher of this application cannot be verified. Only run applications from publishers that you trust.</source>
        <target state="new">The publisher of this application cannot be verified. Only run applications from publishers that you trust.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_UnsafeAccess">
        <source>This application will gain access to additional resources on your computer, such as your file system or your network connection. This may put your computer at risk. Do not approve unless you trust the application's publisher.</source>
        <target state="new">This application will gain access to additional resources on your computer, such as your file system or your network connection. This may put your computer at risk. Do not approve unless you trust the application's publisher.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_UntrustedSitesSource">
        <source>an Untrusted Site</source>
        <target state="new">an Untrusted Site</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_WithShortcut">
        <source>This application will be installed on your computer. It will add a shortcut to your Start menu and will be added to the Add or Remove Programs list.</source>
        <target state="new">This application will be installed on your computer. It will add a shortcut to your Start menu and will be added to the Add or Remove Programs list.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerMoreInfo_WithoutShortcut">
        <source>This application will be temporarily installed onto your computer. It will not be added to your Start menu or to the Add or Remove Programs list.</source>
        <target state="new">This application will be temporarily installed onto your computer. It will not be added to your Start menu or to the Add or Remove Programs list.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_AccessibleDescription_InstallBlocked">
        <source>Trust Manager Dialog - Install Blocked</source>
        <target state="new">Trust Manager Dialog - Install Blocked</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_AccessibleDescription_InstallConfirmation">
        <source>Trust Manager Dialog - Install Confirmation</source>
        <target state="new">Trust Manager Dialog - Install Confirmation</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_AccessibleDescription_InstallWithElevatedPermissions">
        <source>Trust Manager Dialog - Install with elevated permissions</source>
        <target state="new">Trust Manager Dialog - Install with elevated permissions</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_AccessibleDescription_RunBlocked">
        <source>Trust Manager Dialog - Run Blocked</source>
        <target state="new">Trust Manager Dialog - Run Blocked</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_AccessibleDescription_RunConfirmation">
        <source>Trust Manager Dialog - Run Confirmation</source>
        <target state="new">Trust Manager Dialog - Run Confirmation</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_AccessibleDescription_RunWithElevatedPermissions">
        <source>Trust Manager Dialog - Run with elevated permissions</source>
        <target state="new">Trust Manager Dialog - Run with elevated permissions</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_BlockedApp">
        <source>Your administrator has blocked this application because it potentially poses a security risk to your computer.</source>
        <target state="new">Your administrator has blocked this application because it potentially poses a security risk to your computer.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_Close">
        <source>Close</source>
        <target state="new">Close</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_DoNotInstall">
        <source>&amp;Don't Install</source>
        <target state="new">&amp;Don't Install</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_DoNotRun">
        <source>&amp;Don't Run</source>
        <target state="new">&amp;Don't Run</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_From">
        <source>From</source>
        <target state="new">From</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_GlobeIcon">
        <source>Globe Icon</source>
        <target state="new">Globe Icon</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_InstallFromLocalMachineWarning">
        <source>While applications can be useful, they can potentially harm your computer. If you do not trust the source, do not install this software. {0}</source>
        <target state="new">While applications can be useful, they can potentially harm your computer. If you do not trust the source, do not install this software. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_InstallQuestion">
        <source>Do you want to install this application?</source>
        <target state="new">Do you want to install this application?</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_InstallTitle">
        <source>Application Install - Security Warning</source>
        <target state="new">Application Install - Security Warning</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_InstallWarning">
        <source>While applications from the Internet can be useful, they can potentially harm your computer. If you do not trust the source, do not install this software. {0}</source>
        <target state="new">While applications from the Internet can be useful, they can potentially harm your computer. If you do not trust the source, do not install this software. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_InstalledAppBlockedWarning">
        <source>Your security settings do not allow this application to be installed on your computer.</source>
        <target state="new">Your security settings do not allow this application to be installed on your computer.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_MoreInformation">
        <source>More Information...</source>
        <target state="new">More Information...</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_MoreInformationAccessibleDescription">
        <source>Warning text and link to get more information</source>
        <target state="new">Warning text and link to get more information</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_MoreInformationAccessibleName">
        <source>MoreInformationLink</source>
        <target state="new">MoreInformationLink</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_Name">
        <source>Name</source>
        <target state="new">Name</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_NoPublisherInstallQuestion">
        <source>Publisher cannot be verified.\r\nAre you sure you want to install this application?</source>
        <target state="new">Publisher cannot be verified.\r\nAre you sure you want to install this application?</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_NoPublisherRunQuestion">
        <source>Publisher cannot be verified.\r\nAre you sure you want to run this application?</source>
        <target state="new">Publisher cannot be verified.\r\nAre you sure you want to run this application?</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_Publisher">
        <source>Publisher</source>
        <target state="new">Publisher</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_Run">
        <source>&amp;Run</source>
        <target state="new">&amp;Run</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_RunAppBlockedWarning">
        <source>Your security settings do not allow this application to be run on your computer.</source>
        <target state="new">Your security settings do not allow this application to be run on your computer.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_RunFromLocalMachineWarning">
        <source>While applications can be useful, they can potentially harm your computer. If you do not trust the source, do not run this software. {0}</source>
        <target state="new">While applications can be useful, they can potentially harm your computer. If you do not trust the source, do not run this software. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_RunQuestion">
        <source>Do you want to run this application?</source>
        <target state="new">Do you want to run this application?</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_RunTitle">
        <source>Application Run - Security Warning</source>
        <target state="new">Application Run - Security Warning</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_RunWarning">
        <source>While applications from the Internet can be useful, they can potentially harm your computer. If you do not trust the source, do not run this software. {0}</source>
        <target state="new">While applications from the Internet can be useful, they can potentially harm your computer. If you do not trust the source, do not run this software. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_UnknownPublisher">
        <source>Unknown Publisher</source>
        <target state="new">Unknown Publisher</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_WarningAccessibleDescription">
        <source>Warning text</source>
        <target state="new">Warning text</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManagerPromptUI_WarningAccessibleName">
        <source>WarningLabel</source>
        <target state="new">WarningLabel</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManager_WarningIconAccessibleDescription_HighRisk">
        <source>{0} - High Risk</source>
        <target state="new">{0} - High Risk</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManager_WarningIconAccessibleDescription_LowRisk">
        <source>{0} - Low Risk</source>
        <target state="new">{0} - Low Risk</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustManager_WarningIconAccessibleDescription_MediumRisk">
        <source>{0} - Medium Risk</source>
        <target state="new">{0} - Medium Risk</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeLoadException">
        <source>Type {0} in the data at line {1}, position {2} cannot be located.</source>
        <target state="new">Type {0} in the data at line {1}, position {2} cannot be located.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeLoadExceptionShort">
        <source>Type {0} cannot be located.</source>
        <target state="new">Type {0} cannot be located.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypedControlCollectionShouldBeOfType">
        <source>Controls added to this collection must be of type '{0}'.</source>
        <target state="new">Controls added to this collection must be of type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypedControlCollectionShouldBeOfTypes">
        <source>Controls added to this collection must be of type '{0}' or '{1}'.</source>
        <target state="new">Controls added to this collection must be of type '{0}' or '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnableToInitComponent">
        <source>Unable to initialize component.</source>
        <target state="new">Unable to initialize component.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnableToSetPanelText">
        <source>Unable to set the panel text.</source>
        <target state="new">Unable to set the panel text.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedClipboardType">
        <source>Clipboard contains an unexpected type.</source>
        <target state="new">Clipboard contains an unexpected type.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedTypeForClipboardFormat">
        <source>The specified Clipboard format is not compatible with '{0}' type.</source>
        <target state="new">The specified Clipboard format is not compatible with '{0}' type.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnknownAttr">
        <source>Unknown ATTRIBUTE type.</source>
        <target state="new">Unknown ATTRIBUTE type.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnknownInputLanguageLayout">
        <source>Unknown layout</source>
        <target state="new">Unknown layout</target>
        <note />
      </trans-unit>
      <trans-unit id="UnsafeNativeMethodsNotImplemented">
        <source>Not implemented.</source>
        <target state="new">Not implemented.</target>
        <note />
      </trans-unit>
      <trans-unit id="UpDownBaseAlignmentDescr">
        <source>Indicates how the up-down control will position the up and down buttons relative to its edit box.</source>
        <target state="new">Indicates how the up-down control will position the up and down buttons relative to its edit box.</target>
        <note />
      </trans-unit>
      <trans-unit id="UpDownBaseBorderStyleDescr">
        <source>Indicates the border style of the up-down control.</source>
        <target state="new">Indicates the border style of the up-down control.</target>
        <note />
      </trans-unit>
      <trans-unit id="UpDownBaseDownButtonAccName">
        <source>Down</source>
        <target state="new">Down</target>
        <note />
      </trans-unit>
      <trans-unit id="UpDownBaseInterceptArrowKeysDescr">
        <source>Indicates whether the up-down control will increment and decrement the value when the UP ARROW and DOWN ARROW keys are pressed.</source>
        <target state="new">Indicates whether the up-down control will increment and decrement the value when the UP ARROW and DOWN ARROW keys are pressed.</target>
        <note />
      </trans-unit>
      <trans-unit id="UpDownBasePreferredHeightDescr">
        <source>The preferred height of this control.</source>
        <target state="new">The preferred height of this control.</target>
        <note />
      </trans-unit>
      <trans-unit id="UpDownBaseReadOnlyDescr">
        <source>Indicates whether the edit box is read-only.</source>
        <target state="new">Indicates whether the edit box is read-only.</target>
        <note />
      </trans-unit>
      <trans-unit id="UpDownBaseTextAlignDescr">
        <source>Indicates how the text should be aligned in the edit box.</source>
        <target state="new">Indicates how the text should be aligned in the edit box.</target>
        <note />
      </trans-unit>
      <trans-unit id="UpDownBaseUpButtonAccName">
        <source>Up</source>
        <target state="new">Up</target>
        <note />
      </trans-unit>
      <trans-unit id="UseCompatibleTextRenderingDescr">
        <source>Specifies whether text rendering should be compatible with previous releases of Windows Forms.</source>
        <target state="new">Specifies whether text rendering should be compatible with previous releases of Windows Forms.</target>
        <note />
      </trans-unit>
      <trans-unit id="UserControlBorderStyleDescr">
        <source>Indicates whether the panel should have a border.</source>
        <target state="new">Indicates whether the panel should have a border.</target>
        <note />
      </trans-unit>
      <trans-unit id="UserControlOnLoadDescr">
        <source>Occurs whenever the user control loads.</source>
        <target state="new">Occurs whenever the user control loads.</target>
        <note />
      </trans-unit>
      <trans-unit id="VisualStyleHandleCreationFailed">
        <source>Visual Style handle creation operation did not succeed.</source>
        <target state="new">Visual Style handle creation operation did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="VisualStyleNotActive">
        <source>Visual Styles-related operation resulted in an error because no visual style is currently active.</source>
        <target state="new">Visual Styles-related operation resulted in an error because no visual style is currently active.</target>
        <note />
      </trans-unit>
      <trans-unit id="VisualStylesDisabledInClientArea">
        <source>Visual Styles-related operation resulted in an error because visual styles are currently disabled in the client area.</source>
        <target state="new">Visual Styles-related operation resulted in an error because visual styles are currently disabled in the client area.</target>
        <note />
      </trans-unit>
      <trans-unit id="VisualStylesInvalidCombination">
        <source>Given combination of Class, Part, and State is not defined by the current visual style.</source>
        <target state="new">Given combination of Class, Part, and State is not defined by the current visual style.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserAllowDropNotSupported">
        <source>The WebBrowser control does not support AllowDrop.  Use AllowWebBrowserDrop to allow the WebBrowser to process drag/drop.</source>
        <target state="new">The WebBrowser control does not support AllowDrop.  Use AllowWebBrowserDrop to allow the WebBrowser to process drag/drop.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserAllowNavigationDescr">
        <source>Specifies whether the WebBrowser control can browse to another page after initially loading.</source>
        <target state="new">Specifies whether the WebBrowser control can browse to another page after initially loading.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserAllowWebBrowserDropDescr">
        <source>Specifies whether the WebBrowser control will receive drop notifications.</source>
        <target state="new">Specifies whether the WebBrowser control will receive drop notifications.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserBackgroundImageLayoutNotSupported">
        <source>The WebBrowser control does not support the BackgroundImageLayout property.</source>
        <target state="new">The WebBrowser control does not support the BackgroundImageLayout property.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserBackgroundImageNotSupported">
        <source>The WebBrowser control does not support the BackgroundImage property.</source>
        <target state="new">The WebBrowser control does not support the BackgroundImage property.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserCanGoBackChangedDescr">
        <source>Occurs when the availability of a previous page in the Web browser navigation history changes.  </source>
        <target state="new">Occurs when the availability of a previous page in the Web browser navigation history changes.  </target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserCanGoForwardChangedDescr">
        <source>Occurs when the availability of a next page in the Web browser navigation history changes.  </source>
        <target state="new">Occurs when the availability of a next page in the Web browser navigation history changes.  </target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserCursorNotSupported">
        <source>The WebBrowser control does not support the Cursor property.</source>
        <target state="new">The WebBrowser control does not support the Cursor property.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserDocumentCompletedDescr">
        <source>Occurs when the document hosted in the Web browser control is fully loaded.</source>
        <target state="new">Occurs when the document hosted in the Web browser control is fully loaded.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserDocumentTitleChangedDescr">
        <source>Occurs whenever the title text changes.</source>
        <target state="new">Occurs whenever the title text changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserEnabledNotSupported">
        <source>The WebBrowser control does not support the Enabled property.</source>
        <target state="new">The WebBrowser control does not support the Enabled property.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserEncryptionLevelChangedDescr">
        <source>Occurs whenever encryption level changes.</source>
        <target state="new">Occurs whenever encryption level changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserFileDownloadDescr">
        <source>Occurs when a file download occurs.</source>
        <target state="new">Occurs when a file download occurs.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserInIENotSupported">
        <source>Adding a WebBrowser control in Internet Explorer is not supported.</source>
        <target state="new">Adding a WebBrowser control in Internet Explorer is not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserIsOfflineDescr">
        <source>Determines whether the Web browser control operates in offline mode.</source>
        <target state="new">Determines whether the Web browser control operates in offline mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserIsWebBrowserContextMenuEnabledDescr">
        <source>Indicates whether to use the context menu of the native web browser.</source>
        <target state="new">Indicates whether to use the context menu of the native web browser.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserNavigateAbsoluteUri">
        <source>Navigation to a relative URL unsuccessful.</source>
        <target state="new">Navigation to a relative URL unsuccessful.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserNavigatedDescr">
        <source>Occurs after WebBrowser navigation occurs.</source>
        <target state="new">Occurs after WebBrowser navigation occurs.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserNavigatingDescr">
        <source>Occurs before WebBrowser navigation occurs.</source>
        <target state="new">Occurs before WebBrowser navigation occurs.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserNewWindowDescr">
        <source>Occurs when a new window is created for the WebBrowser.</source>
        <target state="new">Occurs when a new window is created for the WebBrowser.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserNoCastToIWebBrowser2">
        <source>IWebBrowser2 get from the native ActiveX control did not succeed.</source>
        <target state="new">IWebBrowser2 get from the native ActiveX control did not succeed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserObjectForScriptingComVisibleOnly">
        <source>ObjectForScripting's class must be visible to COM.  Verify that the object is public, or consider adding the ComVisible attribute to your class.</source>
        <target state="new">ObjectForScripting's class must be visible to COM.  Verify that the object is public, or consider adding the ComVisible attribute to your class.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserProgressChangedDescr">
        <source>Occurs when an update to the progress of a download occurs.</source>
        <target state="new">Occurs when an update to the progress of a download occurs.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserRightToLeftNotSupported">
        <source>The WebBrowser control does not support the RightToLeft property.</source>
        <target state="new">The WebBrowser control does not support the RightToLeft property.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserScriptErrorsSuppressedDescr">
        <source>Specifies whether the WebBrowser control shows script errors in dialogs boxes.</source>
        <target state="new">Specifies whether the WebBrowser control shows script errors in dialogs boxes.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserScrollBarsEnabledDescr">
        <source>Specifies whether the WebBrowser control should have scrollbars or not.</source>
        <target state="new">Specifies whether the WebBrowser control should have scrollbars or not.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserSecurityLevelDescr">
        <source>The level of security permissions the hosted documents are granted.</source>
        <target state="new">The level of security permissions the hosted documents are granted.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserStatusTextChangedDescr">
        <source>Occurs whenever the status text changes.</source>
        <target state="new">Occurs whenever the status text changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserTextNotSupported">
        <source>The WebBrowser control does not support the Text property.</source>
        <target state="new">The WebBrowser control does not support the Text property.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserUrlDescr">
        <source>Specifies the URL that the Web browser control has navigated to.</source>
        <target state="new">Specifies the URL that the Web browser control has navigated to.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserUseWaitCursorNotSupported">
        <source>The WebBrowser control does not support the UseWaitCursor property.</source>
        <target state="new">The WebBrowser control does not support the UseWaitCursor property.</target>
        <note />
      </trans-unit>
      <trans-unit id="WebBrowserWebBrowserShortcutsEnabledDescr">
        <source>Specifies whether some accelerator keys are enabled in the WebBrowser control.</source>
        <target state="new">Specifies whether some accelerator keys are enabled in the WebBrowser control.</target>
        <note />
      </trans-unit>
      <trans-unit id="WidthGreaterThanMinWidth">
        <source>Width must be greater than MinWidth.</source>
        <target state="new">Width must be greater than MinWidth.</target>
        <note />
      </trans-unit>
      <trans-unit id="Win32WindowAlreadyCreated">
        <source>SetCompatibleTextRenderingDefault must be called before the first IWin32Window object is created in the application.</source>
        <target state="new">SetCompatibleTextRenderingDefault must be called before the first IWin32Window object is created in the application.</target>
        <note />
      </trans-unit>
      <trans-unit id="WindowsFormsSetEvent">
        <source>Setting event '{0}'</source>
        <target state="new">Setting event '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="borderStyleDescr">
        <source>The border style of the control.</source>
        <target state="new">The border style of the control.</target>
        <note />
      </trans-unit>
      <trans-unit id="collectionChangedEventDescr">
        <source>Occurs whenever this collection's membership changes.</source>
        <target state="new">Occurs whenever this collection's membership changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="collectionChangingEventDescr">
        <source>Occurs whenever this collection's membership is about to change.</source>
        <target state="new">Occurs whenever this collection's membership is about to change.</target>
        <note />
      </trans-unit>
      <trans-unit id="drawItemEventDescr">
        <source>Occurs whenever a particular item/area needs to be painted.</source>
        <target state="new">Occurs whenever a particular item/area needs to be painted.</target>
        <note />
      </trans-unit>
      <trans-unit id="measureItemEventDescr">
        <source>Occurs whenever a particular item's height needs to be calculated.</source>
        <target state="new">Occurs whenever a particular item's height needs to be calculated.</target>
        <note />
      </trans-unit>
      <trans-unit id="selectedIndexChangedEventDescr">
        <source>Occurs when the value of the SelectedIndex property changes.</source>
        <target state="new">Occurs when the value of the SelectedIndex property changes.</target>
        <note />
      </trans-unit>
      <trans-unit id="selectedIndexDescr">
        <source>The index of the currently selected item.</source>
        <target state="new">The index of the currently selected item.</target>
        <note />
      </trans-unit>
      <trans-unit id="selectionChangeCommittedEventDescr">
        <source>Occurs when an item is chosen from the drop-down list and the drop-down list is closed.</source>
        <target state="new">Occurs when an item is chosen from the drop-down list and the drop-down list is closed.</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringAlt">
        <source>Alt</source>
        <target state="new">Alt</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringBack">
        <source>Back</source>
        <target state="new">Back</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringControl">
        <source>Ctrl</source>
        <target state="new">Ctrl</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringDefault">
        <source>(default)</source>
        <target state="new">(default)</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringDelete">
        <source>Del</source>
        <target state="new">Del</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringEnd">
        <source>End</source>
        <target state="new">End</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringEnter">
        <source>Enter</source>
        <target state="new">Enter</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringHome">
        <source>Home</source>
        <target state="new">Home</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringInsert">
        <source>Ins</source>
        <target state="new">Ins</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringNone">
        <source>(none)</source>
        <target state="new">(none)</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringPageDown">
        <source>PgDn</source>
        <target state="new">PgDn</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringPageUp">
        <source>PgUp</source>
        <target state="new">PgUp</target>
        <note />
      </trans-unit>
      <trans-unit id="toStringShift">
        <source>Shift</source>
        <target state="new">Shift</target>
        <note />
      </trans-unit>
      <trans-unit id="valueChangedEventDescr">
        <source>Occurs when the value of the control changes.</source>
        <target state="new">Occurs when the value of the control changes.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>