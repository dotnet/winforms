<Project Sdk="Microsoft.Build.NoTargets/3.6.0">
  <ItemGroup>
    <PackageReference Include="vswhere" Version="3.1.1" IsImplicitlyDefined="true" GeneratePathProperty="true" />
  </ItemGroup>
  
  <!--
    We cannot build Framework projects using dotnet build when there are unsupported tasks involved such as ResolveComReferences.
    This project is an adapter to use the Framework version of msbuild from dotnet build.
  -->
  <PropertyGroup>
    <_AxHostsPath>$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', '..', 'System.Windows.Forms', 'tests', 'AxHosts', 'AxHosts.csproj'))</_AxHostsPath>
    <_ProjectArgs>/p:Configuration=$(Configuration) /p:Platform=AnyCPU</_ProjectArgs>
  </PropertyGroup>

  <Target Name="BuildAxHosts" BeforeTargets="AfterBuild" DependsOnTargets="FindFrameworkMsbuild">
    <Exec Command="msbuild.exe $(_AxHostsPath) $(_ProjectArgs)"
          WorkingDirectory="$(_MSBuildCurrentPath)"/>
  </Target>

  <Target Name="CleanAxHosts" BeforeTargets="AfterClean" DependsOnTargets="FindFrameworkMsbuild">
    <Exec Command="msbuild.exe $(_AxHostsPath) $(_ProjectArgs) /t:Clean"
          WorkingDirectory="$(_MSBuildCurrentPath)"/>
  </Target>

  <Target Name="FindFrameworkMsbuild">
    <PropertyGroup>
      <VSWherePath>$([MSBuild]::NormalizePath('$(Pkgvswhere)', 'tools'))</VSWherePath>
    </PropertyGroup>
        
    <!-- Work out VS installation path, so we can find MSBuild.exe -->
    <Exec
      Command="vswhere.exe -latest -prerelease -property installationPath -requires Microsoft.Component.MSBuild"
      WorkingDirectory="$(VSWherePath)"
      EchoOff="true"
      ConsoleToMsBuild="true"
      StandardOutputImportance="Low">
      <Output TaskParameter="ConsoleOutput" PropertyName="_VSInstallPath"/>
    </Exec>

    <PropertyGroup>
      <_MSBuildCurrentPath>$([MSBuild]::NormalizePath('$(_VSInstallPath)', 'MSBuild', 'Current', 'Bin'))</_MSBuildCurrentPath>
    </PropertyGroup>
  </Target>
</Project>