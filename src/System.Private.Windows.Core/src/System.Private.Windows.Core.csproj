<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>System.Private.Windows.Core</AssemblyName>
    <TargetFrameworks>$(NetCurrent);$(NetPrevious);$(NetMinimum)</TargetFrameworks>
    <!-- Unset TargetFramework as this property gets set in Directory.Build.props. This is necessary to avoid over-building. -->
    <TargetFramework />
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>enable</Nullable>
    <!--
      We align casing and naming with Win32 API. As such some types have all lower case names, which
      in theory may conflict with new C# keywords in the future. Our types here are internal so end
      users won't be impacted. If some name becomes difficult to adapt to with the @ symbol we can
      cross that bridge when we hit it (if ever).
    -->
    <NoWarn>$(NoWarn);CS8981</NoWarn>
    <!--
      CS3016: We don't care about CLS compliance since everything here is internal and we want to match native types.
      SYSLIB5005: System.Formats.Nrbf is experimental
    -->
    <NoWarn>$(NoWarn);CS3016;SYSLIB5005</NoWarn>
    <Deterministic>true</Deterministic>
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
    <UsePublicApiAnalyzers>false</UsePublicApiAnalyzers>
    <RootNamespace />
    <HasNoPublicIntellisense>true</HasNoPublicIntellisense>
    <EnableXlfLocalization>false</EnableXlfLocalization>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Windows.CsWin32" PrivateAssets="all" />
    <PackageReference Include="System.Formats.Nrbf" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources\SR.resx">
      <WithCulture>false</WithCulture>
      <ManifestResourceName>System.Private.Windows.Core.Resources.SR</ManifestResourceName>
      <GenerateSource>true</GenerateSource>
    </EmbeddedResource>
  </ItemGroup>

</Project>
