trigger:
  branches:
    include:
    - main
    - release/*
    - internal/release/*
    - internal/experimental/*
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT
pr:
  autoCancel: true
  branches:
    include:
    - main
    - vnext
    - release/*
    - internal/release/*
    - internal/experimental/*
    - feature/win32
    - feature/9.0
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT
variables:
- name: TeamName
  value: DotNetCore
- name: Build.Repository.Clean
  value: true
- ${{ if or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/internal/release/'), eq(variables['Build.Reason'], 'Manual')) }}:
  - name: PostBuildSign
    value: false
- ${{ else }}:
  - name: PostBuildSign
    value: true
- name: EnableLoc
  value: ${{ contains(variables['Build.SourceBranch'], 'main') }}
- name: NativeToolsOnMachine
  value: true
- name: isPublic
  value: ${{ eq(variables['System.TeamProject'], 'public') }}
- name: isPR
  value: ${{ eq(variables['Build.Reason'], 'PullRequest')}}
- ${{ if and(ne(variables['isPublic'], 'true'), ne(variables['isPR'], 'true')) }}:
  - group: DotNet-Winforms-SDLValidation-Params
- ${{ if ne(variables['System.TeamProject'], 'internal') }}:
  - name: _InternalRuntimeDownloadArgs
    value: ''
- ${{ if eq(variables['System.TeamProject'], 'internal') }}:
  - group: DotNetBuilds storage account read tokens
  - group: AzureDevOps-Artifact-Feeds-Pats
  - name: _InternalRuntimeDownloadArgs
    value: /p:DotNetRuntimeSourceFeed=https://dotnetbuilds.blob.core.windows.net/internal /p:DotNetRuntimeSourceFeedKey=$(dotnetbuilds-internal-container-read-token-base64)
- ${{ if or(eq(variables['isPublic'], 'true'), eq(variables['isPR'], 'true')) }}:
  - name: _PublishArgs
    value: ''
  - name: _OfficialBuildIdArgs
    value: ''
  - name: _SignType
    value: test
  - name: _SignArgs
    value: ''
  - name: _Sign
    value: false
- ${{ if and(ne(variables['isPublic'], 'true'), ne(variables['isPR'], 'true')) }}:
  - name: _PublishArgs
    value: >-
      /p:DotNetPublishUsingPipelines=true
  - name: _OfficialBuildIdArgs
    value: /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
  - name: _SignType
    value: real
  - name: _SignArgs
    value: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName) /p:Sign=$(_Sign)
  - name: _Sign
    value: true
resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool: <AgentPoolPlaceHolder>
    pool:
      name: AzurePipelines-EO
      image: AzurePipelinesWindows2022compliantGPT
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling-BulkMigrated
    stages:
    - stage: Build
      jobs:
      - template: /eng/pipelines/build.yml@self
        parameters:
          name: Windows_x64
          targetArchitecture: x64
          skipTests: $(SkipTests)
      - template: /eng/pipelines/build.yml@self
        parameters:
          name: Windows_x86
          targetArchitecture: x86
          skipTests: $(SkipTests)
      - template: /eng/pipelines/build.yml@self
        parameters:
          name: Windows_arm64
          targetArchitecture: arm64
          skipTests: $(SkipTests)
    - ${{ if and(eq(variables['EnableLoc'], 'true'), ne(variables['isPublic'], 'true'), ne(variables['isPR'], 'true')) }}:
      - stage: OneLocBuild
        displayName: Publish localizable content to OneLocBuild
        jobs:
        - template: /eng/common/templates/job/onelocbuild.yml@self
          parameters:
            MirrorRepo: winforms
            UseCheckedInLocProjectJson: true
            LclSource: lclFilesfromPackage
            LclPackageId: 'LCL-JUNO-PROD-WINFORMS'
    - ${{ if and(ne(variables['isPublic'], 'true'), ne(variables['isPR'], 'true')) }}:
      - stage: PublishAssetRegistry
        displayName: Publish to Build Asset Registry
        dependsOn: Build
        variables:
        - template: /eng/common/templates/variables/pool-providers.yml@self
        jobs:
        - template: /eng/common/templates/job/publish-build-assets.yml@self
          parameters:
            publishUsingPipelines: true
            pool:
              name: $(DncEngInternalBuildPool)
              demands: ImageOverride -equals windows.vs2022preview.amd64
    - ${{ if and(ne(variables['isPublic'], 'true'), ne(variables['isPR'], 'true')) }}:
      - template: /eng/common/templates/post-build/post-build.yml@self
        parameters:
          validateDependsOn: PublishAssetRegistry
          publishingInfraVersion: 3
          enableSymbolValidation: false
          enableSigningValidation: false
          enableNugetValidation: false
          enableSourceLinkValidation: false
          SDLValidationParameters:
            enable: false
            params: ' -SourceToolsList $(_TsaSourceToolsList) -TsaInstanceURL $(_TsaInstanceURL) -TsaProjectName $(_TsaProjectName) -TsaNotificationEmail $(_TsaNotificationEmail) -TsaCodebaseAdmin $(_TsaCodebaseAdmin) -TsaBugAreaPath $(_TsaBugAreaPath) -TsaIterationPath $(_TsaIterationPath) -TsaRepositoryName $(_TsaRepositoryName) -TsaCodebaseName $(_TsaCodebaseName) -TsaOnboard $(_TsaOnboard) -TsaPublish $(_TsaPublish)'