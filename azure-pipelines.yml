# Parameters ARE available in template expressions, and parameters can have default values,
# so they can be used to control yaml flow.

# trigger ci builds for completed checkins into main and any release branches
trigger:
- main
- release/*
- internal/release/*
- internal/experimental/*

variables:
- name: TeamName
  value: DotNetCore
# clean the local repo on the build agents
- name: Build.Repository.Clean
  value: true
- name: PostBuildSign
  value: true
- name: EnableLoc
  value: false
- name: NativeToolsOnMachine
  value: true
  
# used for post-build phases
- group: DotNet-Winforms-SDLValidation-Params
- group: AzureDevOps-Artifact-Feeds-Pats
- name: _InternalRuntimeDownloadArgs
  value: >-
    /p:DotNetRuntimeSourceFeed=https://dotnetbuilds.blob.core.windows.net/internal
    /p:DotNetRuntimeSourceFeedKey=$(dotnetbuilds-internal-container-read-token-base64)

# needed for darc (dependency flow) publishing
- name: _PublishArgs
  value: >-
    /p:DotNetPublishUsingPipelines=true
- name: _OfficialBuildIdArgs
  value: /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
# needed for signing
- name: _SignType
  value: real
- name: _SignArgs
  value: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName) /p:Sign=$(_Sign)
- name: _Sign
  value: true
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    featureFlags:
      autoBaseline: false
    pool:
      name: NetCore1ESPool-Svc-Internal
      image: 1es-windows-2022
      os: windows
    sdl:
      baseline:
        baselineFile: $(Build.SourcesDirectory)\.config\guardian\SDL\.gdnbaselines
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: Build
      jobs:

      # Windows x64
      - template: /eng/pipelines/build.yml@self
        parameters:
          name: Windows_x64
          targetArchitecture: x64

      # Windows x86
      - template: /eng/pipelines/build.yml@self
        parameters:
          name: Windows_x86
          targetArchitecture: x86

      # Windows arm64
      - template: /eng/pipelines/build.yml@self
        parameters:
          name: Windows_arm64
          targetArchitecture: arm64

    - ${{ if eq(variables['EnableLoc'], 'true') }}:
      - stage: OneLocBuild
        displayName: Publish localizable content to OneLocBuild
        jobs:
        - template: /eng/common/templates-official/job/onelocbuild.yml@self
          parameters:
            MirrorRepo: winforms
            UseCheckedInLocProjectJson: true
            LclSource: lclFilesfromPackage
            LclPackageId: 'LCL-JUNO-PROD-WINFORMS'
            MirrorBranch: release/$(Build.SourceBranchName)

    - stage: PublishAssetRegistry
      displayName: Publish to Build Asset Registry
      dependsOn: Build
      jobs:
      # Publish to Build Asset Registry in order to generate the ReleaseConfigs artifact.
      - template: /eng/common/templates-official/job/publish-build-assets.yml@self
        parameters:
          publishUsingPipelines: true
          pool:
            name: NetCore1ESPool-Svc-Internal
            demands: ImageOverride -equals windows.vs2019.amd64

# Copied from the arcade repo and modified for winforms
    - template: /eng/common/templates-official/post-build/post-build.yml@self
      parameters:
        validateDependsOn: PublishAssetRegistry
        publishingInfraVersion: 3
        enableSymbolValidation: false
        enableSigningValidation: false
        enableNugetValidation: false
        enableSourceLinkValidation: false
        # these param values come from the DotNet-Winforms-SDLValidation-Params azdo variable group
        SDLValidationParameters:
          enable: false
          params: ' -SourceToolsList $(_TsaSourceToolsList)
          -TsaInstanceURL $(_TsaInstanceURL)
          -TsaProjectName $(_TsaProjectName)
          -TsaNotificationEmail $(_TsaNotificationEmail)
          -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
          -TsaBugAreaPath $(_TsaBugAreaPath)
          -TsaIterationPath $(_TsaIterationPath)
          -TsaRepositoryName $(_TsaRepositoryName)
          -TsaCodebaseName $(_TsaCodebaseName)
          -TsaOnboard $(_TsaOnboard)
          -TsaPublish $(_TsaPublish)'